2025-06-04 15:01:29,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 15:01:29,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 15:01:29,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 15:01:29,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 15:06:16,116:INFO:PyCaret RegressionExperiment
2025-06-04 15:06:16,118:INFO:Logging name: reg-default-name
2025-06-04 15:06:16,118:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-04 15:06:16,119:INFO:version 3.3.2
2025-06-04 15:06:16,119:INFO:Initializing setup()
2025-06-04 15:06:16,119:INFO:self.USI: 45aa
2025-06-04 15:06:16,119:INFO:self._variable_keys: {'X_test', '_available_plots', 'y_train', 'USI', 'fold_shuffle_param', 'pipeline', 'memory', 'X', 'target_param', 'y', 'transform_target_param', 'idx', 'X_train', 'seed', 'y_test', 'fold_groups_param', '_ml_usecase', 'fold_generator', 'gpu_n_jobs_param', 'log_plots_param', 'data', 'html_param', 'exp_id', 'n_jobs_param', 'exp_name_log', 'logging_param', 'gpu_param'}
2025-06-04 15:06:16,119:INFO:Checking environment
2025-06-04 15:06:16,120:INFO:python_version: 3.10.11
2025-06-04 15:06:16,120:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-04 15:06:16,120:INFO:machine: AMD64
2025-06-04 15:06:16,121:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-04 15:06:16,127:INFO:Memory: svmem(total=8316121088, available=1124012032, percent=86.5, used=7192109056, free=1124012032)
2025-06-04 15:06:16,127:INFO:Physical Core: 2
2025-06-04 15:06:16,127:INFO:Logical Core: 4
2025-06-04 15:06:16,128:INFO:Checking libraries
2025-06-04 15:06:16,128:INFO:System:
2025-06-04 15:06:16,128:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-04 15:06:16,128:INFO:executable: c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\Scripts\python.exe
2025-06-04 15:06:16,128:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-04 15:06:16,128:INFO:PyCaret required dependencies:
2025-06-04 15:06:16,245:INFO:                 pip: 25.1.1
2025-06-04 15:06:16,245:INFO:          setuptools: 65.5.0
2025-06-04 15:06:16,246:INFO:             pycaret: 3.3.2
2025-06-04 15:06:16,246:INFO:             IPython: 8.37.0
2025-06-04 15:06:16,246:INFO:          ipywidgets: 8.1.7
2025-06-04 15:06:16,246:INFO:                tqdm: 4.67.1
2025-06-04 15:06:16,246:INFO:               numpy: 1.26.4
2025-06-04 15:06:16,246:INFO:              pandas: 2.1.4
2025-06-04 15:06:16,246:INFO:              jinja2: 3.1.6
2025-06-04 15:06:16,246:INFO:               scipy: 1.11.4
2025-06-04 15:06:16,246:INFO:              joblib: 1.3.2
2025-06-04 15:06:16,246:INFO:             sklearn: 1.4.2
2025-06-04 15:06:16,246:INFO:                pyod: 2.0.5
2025-06-04 15:06:16,246:INFO:            imblearn: 0.13.0
2025-06-04 15:06:16,247:INFO:   category_encoders: 2.7.0
2025-06-04 15:06:16,247:INFO:            lightgbm: 4.6.0
2025-06-04 15:06:16,247:INFO:               numba: 0.61.2
2025-06-04 15:06:16,247:INFO:            requests: 2.32.3
2025-06-04 15:06:16,247:INFO:          matplotlib: 3.7.5
2025-06-04 15:06:16,247:INFO:          scikitplot: 0.3.7
2025-06-04 15:06:16,247:INFO:         yellowbrick: 1.5
2025-06-04 15:06:16,247:INFO:              plotly: 5.24.1
2025-06-04 15:06:16,247:INFO:    plotly-resampler: Not installed
2025-06-04 15:06:16,247:INFO:             kaleido: 0.2.1
2025-06-04 15:06:16,247:INFO:           schemdraw: 0.15
2025-06-04 15:06:16,247:INFO:         statsmodels: 0.14.4
2025-06-04 15:06:16,247:INFO:              sktime: 0.26.0
2025-06-04 15:06:16,247:INFO:               tbats: 1.1.3
2025-06-04 15:06:16,248:INFO:            pmdarima: 2.0.4
2025-06-04 15:06:16,248:INFO:              psutil: 7.0.0
2025-06-04 15:06:16,248:INFO:          markupsafe: 3.0.2
2025-06-04 15:06:16,248:INFO:             pickle5: Not installed
2025-06-04 15:06:16,248:INFO:         cloudpickle: 3.1.1
2025-06-04 15:06:16,248:INFO:         deprecation: 2.1.0
2025-06-04 15:06:16,248:INFO:              xxhash: 3.5.0
2025-06-04 15:06:16,248:INFO:           wurlitzer: Not installed
2025-06-04 15:06:16,248:INFO:PyCaret optional dependencies:
2025-06-04 15:06:16,324:INFO:                shap: Not installed
2025-06-04 15:06:16,324:INFO:           interpret: Not installed
2025-06-04 15:06:16,324:INFO:                umap: Not installed
2025-06-04 15:06:16,324:INFO:     ydata_profiling: Not installed
2025-06-04 15:06:16,324:INFO:  explainerdashboard: Not installed
2025-06-04 15:06:16,324:INFO:             autoviz: Not installed
2025-06-04 15:06:16,324:INFO:           fairlearn: Not installed
2025-06-04 15:06:16,324:INFO:          deepchecks: Not installed
2025-06-04 15:06:16,324:INFO:             xgboost: Not installed
2025-06-04 15:06:16,324:INFO:            catboost: Not installed
2025-06-04 15:06:16,324:INFO:              kmodes: Not installed
2025-06-04 15:06:16,324:INFO:             mlxtend: Not installed
2025-06-04 15:06:16,325:INFO:       statsforecast: Not installed
2025-06-04 15:06:16,325:INFO:        tune_sklearn: Not installed
2025-06-04 15:06:16,325:INFO:                 ray: Not installed
2025-06-04 15:06:16,325:INFO:            hyperopt: Not installed
2025-06-04 15:06:16,325:INFO:              optuna: Not installed
2025-06-04 15:06:16,325:INFO:               skopt: Not installed
2025-06-04 15:06:16,325:INFO:              mlflow: Not installed
2025-06-04 15:06:16,325:INFO:              gradio: Not installed
2025-06-04 15:06:16,325:INFO:             fastapi: Not installed
2025-06-04 15:06:16,325:INFO:             uvicorn: Not installed
2025-06-04 15:06:16,325:INFO:              m2cgen: Not installed
2025-06-04 15:06:16,325:INFO:           evidently: Not installed
2025-06-04 15:06:16,325:INFO:               fugue: Not installed
2025-06-04 15:06:16,325:INFO:           streamlit: Not installed
2025-06-04 15:06:16,325:INFO:             prophet: Not installed
2025-06-04 15:06:16,325:INFO:None
2025-06-04 15:06:16,326:INFO:Set up data.
2025-06-04 15:06:16,383:INFO:Set up folding strategy.
2025-06-04 15:06:16,383:INFO:Set up train/test split.
2025-06-04 15:06:16,400:INFO:Set up index.
2025-06-04 15:06:16,403:INFO:Assigning column types.
2025-06-04 15:06:16,415:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-04 15:06:16,416:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,428:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,435:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,564:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:16,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:16,650:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,661:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,670:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,894:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:16,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:16,896:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-04 15:06:16,908:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-04 15:06:16,915:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,013:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,097:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,106:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,231:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,322:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,327:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-04 15:06:17,354:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,516:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,527:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,661:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,662:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-04 15:06:17,756:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,815:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,915:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:06:17,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:17,985:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-04 15:06:18,085:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:18,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:18,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:18,242:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:06:18,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:18,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:18,294:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-04 15:06:18,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:18,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:18,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:18,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:18,580:INFO:Preparing preprocessing pipeline...
2025-06-04 15:06:18,580:INFO:Set up simple imputation.
2025-06-04 15:06:18,585:INFO:Set up encoding of categorical features.
2025-06-04 15:06:18,669:INFO:Finished creating preprocessing pipeline.
2025-06-04 15:06:18,678:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))])
2025-06-04 15:06:18,679:INFO:Creating final display dataframe.
2025-06-04 15:06:18,918:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Item_Outlet_Sales
2                   Target type         Regression
3           Original data shape         (8523, 12)
4        Transformed data shape         (8523, 12)
5   Transformed train set shape         (5966, 12)
6    Transformed test set shape         (2557, 12)
7              Numeric features                 10
8          Categorical features                  1
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13     Maximum one-hot encoding                 25
14              Encoding method               None
15               Fold Generator              KFold
16                  Fold Number                 10
17                     CPU Jobs                 -1
18                      Use GPU              False
19               Log Experiment              False
20              Experiment Name   reg-default-name
21                          USI               45aa
2025-06-04 15:06:19,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:19,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:19,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:19,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:06:19,209:INFO:setup() successfully completed in 3.1s...............
2025-06-04 15:06:31,232:INFO:Initializing compare_models()
2025-06-04 15:06:31,232:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-04 15:06:31,232:INFO:Checking exceptions
2025-06-04 15:06:31,240:INFO:Preparing display monitor
2025-06-04 15:06:31,355:INFO:Initializing Linear Regression
2025-06-04 15:06:31,356:INFO:Total runtime is 1.6689300537109375e-05 minutes
2025-06-04 15:06:31,368:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:31,369:INFO:Initializing create_model()
2025-06-04 15:06:31,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:31,369:INFO:Checking exceptions
2025-06-04 15:06:31,369:INFO:Importing libraries
2025-06-04 15:06:31,370:INFO:Copying training dataset
2025-06-04 15:06:31,389:INFO:Defining folds
2025-06-04 15:06:31,389:INFO:Declaring metric variables
2025-06-04 15:06:31,406:INFO:Importing untrained model
2025-06-04 15:06:31,413:INFO:Linear Regression Imported successfully
2025-06-04 15:06:31,444:INFO:Starting cross validation
2025-06-04 15:06:31,471:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:40,874:INFO:Calculating mean and std
2025-06-04 15:06:40,877:INFO:Creating metrics dataframe
2025-06-04 15:06:40,886:INFO:Uploading results into container
2025-06-04 15:06:40,890:INFO:Uploading model into container now
2025-06-04 15:06:40,891:INFO:_master_model_container: 1
2025-06-04 15:06:40,892:INFO:_display_container: 2
2025-06-04 15:06:40,892:INFO:LinearRegression(n_jobs=-1)
2025-06-04 15:06:40,892:INFO:create_model() successfully completed......................................
2025-06-04 15:06:41,044:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:41,044:INFO:Creating metrics dataframe
2025-06-04 15:06:41,059:INFO:Initializing Lasso Regression
2025-06-04 15:06:41,060:INFO:Total runtime is 0.16174890200297037 minutes
2025-06-04 15:06:41,074:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:41,076:INFO:Initializing create_model()
2025-06-04 15:06:41,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:41,077:INFO:Checking exceptions
2025-06-04 15:06:41,077:INFO:Importing libraries
2025-06-04 15:06:41,077:INFO:Copying training dataset
2025-06-04 15:06:41,107:INFO:Defining folds
2025-06-04 15:06:41,107:INFO:Declaring metric variables
2025-06-04 15:06:41,117:INFO:Importing untrained model
2025-06-04 15:06:41,131:INFO:Lasso Regression Imported successfully
2025-06-04 15:06:41,155:INFO:Starting cross validation
2025-06-04 15:06:41,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:41,655:INFO:Calculating mean and std
2025-06-04 15:06:41,657:INFO:Creating metrics dataframe
2025-06-04 15:06:41,666:INFO:Uploading results into container
2025-06-04 15:06:41,668:INFO:Uploading model into container now
2025-06-04 15:06:41,669:INFO:_master_model_container: 2
2025-06-04 15:06:41,669:INFO:_display_container: 2
2025-06-04 15:06:41,671:INFO:Lasso(random_state=123)
2025-06-04 15:06:41,671:INFO:create_model() successfully completed......................................
2025-06-04 15:06:41,792:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:41,793:INFO:Creating metrics dataframe
2025-06-04 15:06:41,809:INFO:Initializing Ridge Regression
2025-06-04 15:06:41,809:INFO:Total runtime is 0.17422626813252767 minutes
2025-06-04 15:06:41,817:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:41,818:INFO:Initializing create_model()
2025-06-04 15:06:41,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:41,819:INFO:Checking exceptions
2025-06-04 15:06:41,819:INFO:Importing libraries
2025-06-04 15:06:41,819:INFO:Copying training dataset
2025-06-04 15:06:41,866:INFO:Defining folds
2025-06-04 15:06:41,866:INFO:Declaring metric variables
2025-06-04 15:06:41,878:INFO:Importing untrained model
2025-06-04 15:06:41,891:INFO:Ridge Regression Imported successfully
2025-06-04 15:06:41,914:INFO:Starting cross validation
2025-06-04 15:06:41,920:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:42,502:INFO:Calculating mean and std
2025-06-04 15:06:42,505:INFO:Creating metrics dataframe
2025-06-04 15:06:42,515:INFO:Uploading results into container
2025-06-04 15:06:42,516:INFO:Uploading model into container now
2025-06-04 15:06:42,521:INFO:_master_model_container: 3
2025-06-04 15:06:42,521:INFO:_display_container: 2
2025-06-04 15:06:42,522:INFO:Ridge(random_state=123)
2025-06-04 15:06:42,522:INFO:create_model() successfully completed......................................
2025-06-04 15:06:42,646:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:42,646:INFO:Creating metrics dataframe
2025-06-04 15:06:42,663:INFO:Initializing Elastic Net
2025-06-04 15:06:42,664:INFO:Total runtime is 0.18848646879196168 minutes
2025-06-04 15:06:42,679:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:42,679:INFO:Initializing create_model()
2025-06-04 15:06:42,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:42,679:INFO:Checking exceptions
2025-06-04 15:06:42,679:INFO:Importing libraries
2025-06-04 15:06:42,680:INFO:Copying training dataset
2025-06-04 15:06:42,706:INFO:Defining folds
2025-06-04 15:06:42,706:INFO:Declaring metric variables
2025-06-04 15:06:42,715:INFO:Importing untrained model
2025-06-04 15:06:42,728:INFO:Elastic Net Imported successfully
2025-06-04 15:06:42,747:INFO:Starting cross validation
2025-06-04 15:06:42,751:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:43,360:INFO:Calculating mean and std
2025-06-04 15:06:43,362:INFO:Creating metrics dataframe
2025-06-04 15:06:43,365:INFO:Uploading results into container
2025-06-04 15:06:43,369:INFO:Uploading model into container now
2025-06-04 15:06:43,371:INFO:_master_model_container: 4
2025-06-04 15:06:43,372:INFO:_display_container: 2
2025-06-04 15:06:43,373:INFO:ElasticNet(random_state=123)
2025-06-04 15:06:43,373:INFO:create_model() successfully completed......................................
2025-06-04 15:06:43,497:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:43,497:INFO:Creating metrics dataframe
2025-06-04 15:06:43,520:INFO:Initializing Least Angle Regression
2025-06-04 15:06:43,521:INFO:Total runtime is 0.20277152061462403 minutes
2025-06-04 15:06:43,528:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:43,529:INFO:Initializing create_model()
2025-06-04 15:06:43,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:43,529:INFO:Checking exceptions
2025-06-04 15:06:43,529:INFO:Importing libraries
2025-06-04 15:06:43,529:INFO:Copying training dataset
2025-06-04 15:06:43,562:INFO:Defining folds
2025-06-04 15:06:43,563:INFO:Declaring metric variables
2025-06-04 15:06:43,577:INFO:Importing untrained model
2025-06-04 15:06:43,587:INFO:Least Angle Regression Imported successfully
2025-06-04 15:06:43,628:INFO:Starting cross validation
2025-06-04 15:06:43,630:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:44,265:INFO:Calculating mean and std
2025-06-04 15:06:44,269:INFO:Creating metrics dataframe
2025-06-04 15:06:44,278:INFO:Uploading results into container
2025-06-04 15:06:44,279:INFO:Uploading model into container now
2025-06-04 15:06:44,280:INFO:_master_model_container: 5
2025-06-04 15:06:44,280:INFO:_display_container: 2
2025-06-04 15:06:44,281:INFO:Lars(random_state=123)
2025-06-04 15:06:44,281:INFO:create_model() successfully completed......................................
2025-06-04 15:06:44,373:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:44,373:INFO:Creating metrics dataframe
2025-06-04 15:06:44,382:INFO:Initializing Lasso Least Angle Regression
2025-06-04 15:06:44,385:INFO:Total runtime is 0.21715712547302246 minutes
2025-06-04 15:06:44,396:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:44,397:INFO:Initializing create_model()
2025-06-04 15:06:44,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:44,398:INFO:Checking exceptions
2025-06-04 15:06:44,398:INFO:Importing libraries
2025-06-04 15:06:44,398:INFO:Copying training dataset
2025-06-04 15:06:44,452:INFO:Defining folds
2025-06-04 15:06:44,452:INFO:Declaring metric variables
2025-06-04 15:06:44,462:INFO:Importing untrained model
2025-06-04 15:06:44,474:INFO:Lasso Least Angle Regression Imported successfully
2025-06-04 15:06:44,493:INFO:Starting cross validation
2025-06-04 15:06:44,495:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:45,092:INFO:Calculating mean and std
2025-06-04 15:06:45,093:INFO:Creating metrics dataframe
2025-06-04 15:06:45,095:INFO:Uploading results into container
2025-06-04 15:06:45,096:INFO:Uploading model into container now
2025-06-04 15:06:45,105:INFO:_master_model_container: 6
2025-06-04 15:06:45,105:INFO:_display_container: 2
2025-06-04 15:06:45,106:INFO:LassoLars(random_state=123)
2025-06-04 15:06:45,106:INFO:create_model() successfully completed......................................
2025-06-04 15:06:45,214:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:45,214:INFO:Creating metrics dataframe
2025-06-04 15:06:45,227:INFO:Initializing Orthogonal Matching Pursuit
2025-06-04 15:06:45,229:INFO:Total runtime is 0.23122640053431193 minutes
2025-06-04 15:06:45,241:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:45,241:INFO:Initializing create_model()
2025-06-04 15:06:45,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:45,242:INFO:Checking exceptions
2025-06-04 15:06:45,242:INFO:Importing libraries
2025-06-04 15:06:45,242:INFO:Copying training dataset
2025-06-04 15:06:45,273:INFO:Defining folds
2025-06-04 15:06:45,273:INFO:Declaring metric variables
2025-06-04 15:06:45,280:INFO:Importing untrained model
2025-06-04 15:06:45,291:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-04 15:06:45,311:INFO:Starting cross validation
2025-06-04 15:06:45,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:45,751:INFO:Calculating mean and std
2025-06-04 15:06:45,754:INFO:Creating metrics dataframe
2025-06-04 15:06:45,759:INFO:Uploading results into container
2025-06-04 15:06:45,759:INFO:Uploading model into container now
2025-06-04 15:06:45,760:INFO:_master_model_container: 7
2025-06-04 15:06:45,760:INFO:_display_container: 2
2025-06-04 15:06:45,760:INFO:OrthogonalMatchingPursuit()
2025-06-04 15:06:45,760:INFO:create_model() successfully completed......................................
2025-06-04 15:06:45,855:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:45,856:INFO:Creating metrics dataframe
2025-06-04 15:06:45,866:INFO:Initializing Bayesian Ridge
2025-06-04 15:06:45,868:INFO:Total runtime is 0.24187760353088378 minutes
2025-06-04 15:06:45,874:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:45,874:INFO:Initializing create_model()
2025-06-04 15:06:45,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:45,874:INFO:Checking exceptions
2025-06-04 15:06:45,875:INFO:Importing libraries
2025-06-04 15:06:45,875:INFO:Copying training dataset
2025-06-04 15:06:45,887:INFO:Defining folds
2025-06-04 15:06:45,887:INFO:Declaring metric variables
2025-06-04 15:06:45,899:INFO:Importing untrained model
2025-06-04 15:06:45,914:INFO:Bayesian Ridge Imported successfully
2025-06-04 15:06:45,935:INFO:Starting cross validation
2025-06-04 15:06:45,941:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:46,409:INFO:Calculating mean and std
2025-06-04 15:06:46,412:INFO:Creating metrics dataframe
2025-06-04 15:06:46,423:INFO:Uploading results into container
2025-06-04 15:06:46,424:INFO:Uploading model into container now
2025-06-04 15:06:46,424:INFO:_master_model_container: 8
2025-06-04 15:06:46,424:INFO:_display_container: 2
2025-06-04 15:06:46,425:INFO:BayesianRidge()
2025-06-04 15:06:46,425:INFO:create_model() successfully completed......................................
2025-06-04 15:06:46,590:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:46,590:INFO:Creating metrics dataframe
2025-06-04 15:06:46,608:INFO:Initializing Passive Aggressive Regressor
2025-06-04 15:06:46,608:INFO:Total runtime is 0.25420692761739094 minutes
2025-06-04 15:06:46,615:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:46,615:INFO:Initializing create_model()
2025-06-04 15:06:46,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:46,616:INFO:Checking exceptions
2025-06-04 15:06:46,618:INFO:Importing libraries
2025-06-04 15:06:46,619:INFO:Copying training dataset
2025-06-04 15:06:46,642:INFO:Defining folds
2025-06-04 15:06:46,642:INFO:Declaring metric variables
2025-06-04 15:06:46,659:INFO:Importing untrained model
2025-06-04 15:06:46,667:INFO:Passive Aggressive Regressor Imported successfully
2025-06-04 15:06:46,687:INFO:Starting cross validation
2025-06-04 15:06:46,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:47,202:INFO:Calculating mean and std
2025-06-04 15:06:47,203:INFO:Creating metrics dataframe
2025-06-04 15:06:47,211:INFO:Uploading results into container
2025-06-04 15:06:47,212:INFO:Uploading model into container now
2025-06-04 15:06:47,213:INFO:_master_model_container: 9
2025-06-04 15:06:47,214:INFO:_display_container: 2
2025-06-04 15:06:47,215:INFO:PassiveAggressiveRegressor(random_state=123)
2025-06-04 15:06:47,218:INFO:create_model() successfully completed......................................
2025-06-04 15:06:47,381:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:47,381:INFO:Creating metrics dataframe
2025-06-04 15:06:47,397:INFO:Initializing Huber Regressor
2025-06-04 15:06:47,397:INFO:Total runtime is 0.2673675537109375 minutes
2025-06-04 15:06:47,407:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:47,407:INFO:Initializing create_model()
2025-06-04 15:06:47,409:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:47,409:INFO:Checking exceptions
2025-06-04 15:06:47,409:INFO:Importing libraries
2025-06-04 15:06:47,409:INFO:Copying training dataset
2025-06-04 15:06:47,438:INFO:Defining folds
2025-06-04 15:06:47,439:INFO:Declaring metric variables
2025-06-04 15:06:47,455:INFO:Importing untrained model
2025-06-04 15:06:47,465:INFO:Huber Regressor Imported successfully
2025-06-04 15:06:47,490:INFO:Starting cross validation
2025-06-04 15:06:47,494:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:48,126:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,159:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,162:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,169:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,603:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,609:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,654:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,661:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,942:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,955:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:06:48,989:INFO:Calculating mean and std
2025-06-04 15:06:48,991:INFO:Creating metrics dataframe
2025-06-04 15:06:49,007:INFO:Uploading results into container
2025-06-04 15:06:49,009:INFO:Uploading model into container now
2025-06-04 15:06:49,009:INFO:_master_model_container: 10
2025-06-04 15:06:49,009:INFO:_display_container: 2
2025-06-04 15:06:49,010:INFO:HuberRegressor()
2025-06-04 15:06:49,010:INFO:create_model() successfully completed......................................
2025-06-04 15:06:49,170:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:49,170:INFO:Creating metrics dataframe
2025-06-04 15:06:49,193:INFO:Initializing K Neighbors Regressor
2025-06-04 15:06:49,193:INFO:Total runtime is 0.29729501803716024 minutes
2025-06-04 15:06:49,203:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:49,203:INFO:Initializing create_model()
2025-06-04 15:06:49,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:49,204:INFO:Checking exceptions
2025-06-04 15:06:49,204:INFO:Importing libraries
2025-06-04 15:06:49,204:INFO:Copying training dataset
2025-06-04 15:06:49,240:INFO:Defining folds
2025-06-04 15:06:49,240:INFO:Declaring metric variables
2025-06-04 15:06:49,248:INFO:Importing untrained model
2025-06-04 15:06:49,257:INFO:K Neighbors Regressor Imported successfully
2025-06-04 15:06:49,280:INFO:Starting cross validation
2025-06-04 15:06:49,287:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:49,876:INFO:Calculating mean and std
2025-06-04 15:06:49,881:INFO:Creating metrics dataframe
2025-06-04 15:06:49,891:INFO:Uploading results into container
2025-06-04 15:06:49,894:INFO:Uploading model into container now
2025-06-04 15:06:49,894:INFO:_master_model_container: 11
2025-06-04 15:06:49,894:INFO:_display_container: 2
2025-06-04 15:06:49,895:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-04 15:06:49,895:INFO:create_model() successfully completed......................................
2025-06-04 15:06:50,019:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:50,019:INFO:Creating metrics dataframe
2025-06-04 15:06:50,030:INFO:Initializing Decision Tree Regressor
2025-06-04 15:06:50,030:INFO:Total runtime is 0.3112460414568583 minutes
2025-06-04 15:06:50,040:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:50,040:INFO:Initializing create_model()
2025-06-04 15:06:50,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:50,041:INFO:Checking exceptions
2025-06-04 15:06:50,041:INFO:Importing libraries
2025-06-04 15:06:50,041:INFO:Copying training dataset
2025-06-04 15:06:50,072:INFO:Defining folds
2025-06-04 15:06:50,072:INFO:Declaring metric variables
2025-06-04 15:06:50,079:INFO:Importing untrained model
2025-06-04 15:06:50,086:INFO:Decision Tree Regressor Imported successfully
2025-06-04 15:06:50,105:INFO:Starting cross validation
2025-06-04 15:06:50,108:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:06:50,733:INFO:Calculating mean and std
2025-06-04 15:06:50,738:INFO:Creating metrics dataframe
2025-06-04 15:06:50,754:INFO:Uploading results into container
2025-06-04 15:06:50,756:INFO:Uploading model into container now
2025-06-04 15:06:50,756:INFO:_master_model_container: 12
2025-06-04 15:06:50,756:INFO:_display_container: 2
2025-06-04 15:06:50,757:INFO:DecisionTreeRegressor(random_state=123)
2025-06-04 15:06:50,757:INFO:create_model() successfully completed......................................
2025-06-04 15:06:50,856:INFO:SubProcess create_model() end ==================================
2025-06-04 15:06:50,856:INFO:Creating metrics dataframe
2025-06-04 15:06:50,871:INFO:Initializing Random Forest Regressor
2025-06-04 15:06:50,871:INFO:Total runtime is 0.32526248693466187 minutes
2025-06-04 15:06:50,876:INFO:SubProcess create_model() called ==================================
2025-06-04 15:06:50,876:INFO:Initializing create_model()
2025-06-04 15:06:50,876:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:06:50,876:INFO:Checking exceptions
2025-06-04 15:06:50,878:INFO:Importing libraries
2025-06-04 15:06:50,878:INFO:Copying training dataset
2025-06-04 15:06:50,894:INFO:Defining folds
2025-06-04 15:06:50,894:INFO:Declaring metric variables
2025-06-04 15:06:50,904:INFO:Importing untrained model
2025-06-04 15:06:50,914:INFO:Random Forest Regressor Imported successfully
2025-06-04 15:06:50,931:INFO:Starting cross validation
2025-06-04 15:06:50,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:07:05,666:INFO:Calculating mean and std
2025-06-04 15:07:05,669:INFO:Creating metrics dataframe
2025-06-04 15:07:05,673:INFO:Uploading results into container
2025-06-04 15:07:05,676:INFO:Uploading model into container now
2025-06-04 15:07:05,677:INFO:_master_model_container: 13
2025-06-04 15:07:05,677:INFO:_display_container: 2
2025-06-04 15:07:05,678:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-06-04 15:07:05,678:INFO:create_model() successfully completed......................................
2025-06-04 15:07:05,818:INFO:SubProcess create_model() end ==================================
2025-06-04 15:07:05,819:INFO:Creating metrics dataframe
2025-06-04 15:07:05,842:INFO:Initializing Extra Trees Regressor
2025-06-04 15:07:05,842:INFO:Total runtime is 0.5747773806254068 minutes
2025-06-04 15:07:05,853:INFO:SubProcess create_model() called ==================================
2025-06-04 15:07:05,853:INFO:Initializing create_model()
2025-06-04 15:07:05,855:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:07:05,855:INFO:Checking exceptions
2025-06-04 15:07:05,855:INFO:Importing libraries
2025-06-04 15:07:05,855:INFO:Copying training dataset
2025-06-04 15:07:05,877:INFO:Defining folds
2025-06-04 15:07:05,877:INFO:Declaring metric variables
2025-06-04 15:07:05,895:INFO:Importing untrained model
2025-06-04 15:07:05,911:INFO:Extra Trees Regressor Imported successfully
2025-06-04 15:07:05,940:INFO:Starting cross validation
2025-06-04 15:07:05,946:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:07:14,767:INFO:Calculating mean and std
2025-06-04 15:07:14,769:INFO:Creating metrics dataframe
2025-06-04 15:07:14,779:INFO:Uploading results into container
2025-06-04 15:07:14,783:INFO:Uploading model into container now
2025-06-04 15:07:14,784:INFO:_master_model_container: 14
2025-06-04 15:07:14,784:INFO:_display_container: 2
2025-06-04 15:07:14,785:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-06-04 15:07:14,785:INFO:create_model() successfully completed......................................
2025-06-04 15:07:14,908:INFO:SubProcess create_model() end ==================================
2025-06-04 15:07:14,908:INFO:Creating metrics dataframe
2025-06-04 15:07:14,926:INFO:Initializing AdaBoost Regressor
2025-06-04 15:07:14,926:INFO:Total runtime is 0.7261732498804727 minutes
2025-06-04 15:07:14,935:INFO:SubProcess create_model() called ==================================
2025-06-04 15:07:14,935:INFO:Initializing create_model()
2025-06-04 15:07:14,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:07:14,936:INFO:Checking exceptions
2025-06-04 15:07:14,936:INFO:Importing libraries
2025-06-04 15:07:14,937:INFO:Copying training dataset
2025-06-04 15:07:14,954:INFO:Defining folds
2025-06-04 15:07:14,954:INFO:Declaring metric variables
2025-06-04 15:07:14,968:INFO:Importing untrained model
2025-06-04 15:07:15,009:INFO:AdaBoost Regressor Imported successfully
2025-06-04 15:07:15,071:INFO:Starting cross validation
2025-06-04 15:07:15,075:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:07:17,103:INFO:Calculating mean and std
2025-06-04 15:07:17,105:INFO:Creating metrics dataframe
2025-06-04 15:07:17,116:INFO:Uploading results into container
2025-06-04 15:07:17,117:INFO:Uploading model into container now
2025-06-04 15:07:17,118:INFO:_master_model_container: 15
2025-06-04 15:07:17,119:INFO:_display_container: 2
2025-06-04 15:07:17,119:INFO:AdaBoostRegressor(random_state=123)
2025-06-04 15:07:17,119:INFO:create_model() successfully completed......................................
2025-06-04 15:07:17,228:INFO:SubProcess create_model() end ==================================
2025-06-04 15:07:17,228:INFO:Creating metrics dataframe
2025-06-04 15:07:17,251:INFO:Initializing Gradient Boosting Regressor
2025-06-04 15:07:17,251:INFO:Total runtime is 0.7649329582850137 minutes
2025-06-04 15:07:17,260:INFO:SubProcess create_model() called ==================================
2025-06-04 15:07:17,261:INFO:Initializing create_model()
2025-06-04 15:07:17,261:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:07:17,261:INFO:Checking exceptions
2025-06-04 15:07:17,263:INFO:Importing libraries
2025-06-04 15:07:17,263:INFO:Copying training dataset
2025-06-04 15:07:17,284:INFO:Defining folds
2025-06-04 15:07:17,285:INFO:Declaring metric variables
2025-06-04 15:07:17,295:INFO:Importing untrained model
2025-06-04 15:07:17,310:INFO:Gradient Boosting Regressor Imported successfully
2025-06-04 15:07:17,333:INFO:Starting cross validation
2025-06-04 15:07:17,336:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:07:21,759:INFO:Calculating mean and std
2025-06-04 15:07:21,766:INFO:Creating metrics dataframe
2025-06-04 15:07:21,787:INFO:Uploading results into container
2025-06-04 15:07:21,788:INFO:Uploading model into container now
2025-06-04 15:07:21,789:INFO:_master_model_container: 16
2025-06-04 15:07:21,789:INFO:_display_container: 2
2025-06-04 15:07:21,790:INFO:GradientBoostingRegressor(random_state=123)
2025-06-04 15:07:21,791:INFO:create_model() successfully completed......................................
2025-06-04 15:07:21,906:INFO:SubProcess create_model() end ==================================
2025-06-04 15:07:21,906:INFO:Creating metrics dataframe
2025-06-04 15:07:21,920:INFO:Initializing Light Gradient Boosting Machine
2025-06-04 15:07:21,920:INFO:Total runtime is 0.8427429159482319 minutes
2025-06-04 15:07:21,926:INFO:SubProcess create_model() called ==================================
2025-06-04 15:07:21,926:INFO:Initializing create_model()
2025-06-04 15:07:21,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:07:21,927:INFO:Checking exceptions
2025-06-04 15:07:21,927:INFO:Importing libraries
2025-06-04 15:07:21,927:INFO:Copying training dataset
2025-06-04 15:07:21,940:INFO:Defining folds
2025-06-04 15:07:21,940:INFO:Declaring metric variables
2025-06-04 15:07:21,946:INFO:Importing untrained model
2025-06-04 15:07:21,957:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-04 15:07:21,992:INFO:Starting cross validation
2025-06-04 15:07:21,997:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:07:23,526:INFO:Calculating mean and std
2025-06-04 15:07:23,530:INFO:Creating metrics dataframe
2025-06-04 15:07:23,537:INFO:Uploading results into container
2025-06-04 15:07:23,537:INFO:Uploading model into container now
2025-06-04 15:07:23,538:INFO:_master_model_container: 17
2025-06-04 15:07:23,538:INFO:_display_container: 2
2025-06-04 15:07:23,539:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-06-04 15:07:23,539:INFO:create_model() successfully completed......................................
2025-06-04 15:07:23,640:INFO:SubProcess create_model() end ==================================
2025-06-04 15:07:23,641:INFO:Creating metrics dataframe
2025-06-04 15:07:23,660:INFO:Initializing Dummy Regressor
2025-06-04 15:07:23,660:INFO:Total runtime is 0.8717536211013793 minutes
2025-06-04 15:07:23,673:INFO:SubProcess create_model() called ==================================
2025-06-04 15:07:23,674:INFO:Initializing create_model()
2025-06-04 15:07:23,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000282BC134E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:07:23,675:INFO:Checking exceptions
2025-06-04 15:07:23,675:INFO:Importing libraries
2025-06-04 15:07:23,675:INFO:Copying training dataset
2025-06-04 15:07:23,697:INFO:Defining folds
2025-06-04 15:07:23,697:INFO:Declaring metric variables
2025-06-04 15:07:23,741:INFO:Importing untrained model
2025-06-04 15:07:23,752:INFO:Dummy Regressor Imported successfully
2025-06-04 15:07:23,768:INFO:Starting cross validation
2025-06-04 15:07:23,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:07:24,189:INFO:Calculating mean and std
2025-06-04 15:07:24,192:INFO:Creating metrics dataframe
2025-06-04 15:07:24,208:INFO:Uploading results into container
2025-06-04 15:07:24,209:INFO:Uploading model into container now
2025-06-04 15:07:24,209:INFO:_master_model_container: 18
2025-06-04 15:07:24,209:INFO:_display_container: 2
2025-06-04 15:07:24,210:INFO:DummyRegressor()
2025-06-04 15:07:24,210:INFO:create_model() successfully completed......................................
2025-06-04 15:07:24,379:INFO:SubProcess create_model() end ==================================
2025-06-04 15:07:24,380:INFO:Creating metrics dataframe
2025-06-04 15:07:24,400:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-04 15:07:24,417:INFO:Initializing create_model()
2025-06-04 15:07:24,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:07:24,419:INFO:Checking exceptions
2025-06-04 15:07:24,423:INFO:Importing libraries
2025-06-04 15:07:24,423:INFO:Copying training dataset
2025-06-04 15:07:24,439:INFO:Defining folds
2025-06-04 15:07:24,439:INFO:Declaring metric variables
2025-06-04 15:07:24,440:INFO:Importing untrained model
2025-06-04 15:07:24,440:INFO:Declaring custom model
2025-06-04 15:07:24,442:INFO:Gradient Boosting Regressor Imported successfully
2025-06-04 15:07:24,445:INFO:Cross validation set to False
2025-06-04 15:07:24,445:INFO:Fitting Model
2025-06-04 15:07:25,873:INFO:GradientBoostingRegressor(random_state=123)
2025-06-04 15:07:25,874:INFO:create_model() successfully completed......................................
2025-06-04 15:07:26,046:INFO:_master_model_container: 18
2025-06-04 15:07:26,048:INFO:_display_container: 2
2025-06-04 15:07:26,050:INFO:GradientBoostingRegressor(random_state=123)
2025-06-04 15:07:26,050:INFO:compare_models() successfully completed......................................
2025-06-04 15:08:38,479:INFO:Initializing tune_model()
2025-06-04 15:08:38,479:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>)
2025-06-04 15:08:38,479:INFO:Checking exceptions
2025-06-04 15:08:38,479:ERROR:
'skopt' is a soft dependency and not included in the pycaret installation. Please run: `pip install scikit-optimize` to install.
Alternately, you can install this by running `pip install pycaret[tuners]`
NoneType: None
2025-06-04 15:10:37,206:INFO:Initializing tune_model()
2025-06-04 15:10:37,207:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>)
2025-06-04 15:10:37,210:INFO:Checking exceptions
2025-06-04 15:10:37,211:ERROR:
'skopt' is a soft dependency and not included in the pycaret installation. Please run: `pip install scikit-optimize` to install.
Alternately, you can install this by running `pip install pycaret[tuners]`
NoneType: None
2025-06-04 15:11:21,870:INFO:Initializing tune_model()
2025-06-04 15:11:21,870:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000282BC135AE0>)
2025-06-04 15:11:21,871:INFO:Checking exceptions
2025-06-04 15:11:21,872:ERROR:
'skopt' is a soft dependency and not included in the pycaret installation. Please run: `pip install scikit-optimize` to install.
Alternately, you can install this by running `pip install pycaret[tuners]`
NoneType: None
2025-06-04 15:15:20,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 15:15:20,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 15:15:20,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 15:15:20,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 15:16:44,603:INFO:PyCaret RegressionExperiment
2025-06-04 15:16:44,603:INFO:Logging name: reg-default-name
2025-06-04 15:16:44,603:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-04 15:16:44,603:INFO:version 3.3.2
2025-06-04 15:16:44,603:INFO:Initializing setup()
2025-06-04 15:16:44,603:INFO:self.USI: 87ad
2025-06-04 15:16:44,604:INFO:self._variable_keys: {'y_test', 'USI', 'logging_param', 'X', 'gpu_n_jobs_param', 'exp_id', 'fold_groups_param', 'html_param', 'exp_name_log', 'X_train', 'target_param', 'transform_target_param', 'fold_generator', 'data', 'gpu_param', 'X_test', 'seed', 'memory', 'y', 'n_jobs_param', 'idx', 'y_train', 'pipeline', '_ml_usecase', 'fold_shuffle_param', 'log_plots_param', '_available_plots'}
2025-06-04 15:16:44,604:INFO:Checking environment
2025-06-04 15:16:44,604:INFO:python_version: 3.10.11
2025-06-04 15:16:44,604:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-04 15:16:44,604:INFO:machine: AMD64
2025-06-04 15:16:44,604:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-04 15:16:44,613:INFO:Memory: svmem(total=8316121088, available=1886486528, percent=77.3, used=6429634560, free=1886486528)
2025-06-04 15:16:44,613:INFO:Physical Core: 2
2025-06-04 15:16:44,613:INFO:Logical Core: 4
2025-06-04 15:16:44,613:INFO:Checking libraries
2025-06-04 15:16:44,613:INFO:System:
2025-06-04 15:16:44,613:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-04 15:16:44,613:INFO:executable: c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\Scripts\python.exe
2025-06-04 15:16:44,614:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-04 15:16:44,614:INFO:PyCaret required dependencies:
2025-06-04 15:16:44,703:INFO:                 pip: 25.1.1
2025-06-04 15:16:44,703:INFO:          setuptools: 65.5.0
2025-06-04 15:16:44,704:INFO:             pycaret: 3.3.2
2025-06-04 15:16:44,704:INFO:             IPython: 8.37.0
2025-06-04 15:16:44,704:INFO:          ipywidgets: 8.1.7
2025-06-04 15:16:44,704:INFO:                tqdm: 4.67.1
2025-06-04 15:16:44,704:INFO:               numpy: 1.26.4
2025-06-04 15:16:44,704:INFO:              pandas: 2.1.4
2025-06-04 15:16:44,704:INFO:              jinja2: 3.1.6
2025-06-04 15:16:44,704:INFO:               scipy: 1.11.4
2025-06-04 15:16:44,704:INFO:              joblib: 1.3.2
2025-06-04 15:16:44,704:INFO:             sklearn: 1.4.2
2025-06-04 15:16:44,704:INFO:                pyod: 2.0.5
2025-06-04 15:16:44,704:INFO:            imblearn: 0.13.0
2025-06-04 15:16:44,704:INFO:   category_encoders: 2.7.0
2025-06-04 15:16:44,704:INFO:            lightgbm: 4.6.0
2025-06-04 15:16:44,705:INFO:               numba: 0.61.2
2025-06-04 15:16:44,705:INFO:            requests: 2.32.3
2025-06-04 15:16:44,705:INFO:          matplotlib: 3.7.5
2025-06-04 15:16:44,705:INFO:          scikitplot: 0.3.7
2025-06-04 15:16:44,705:INFO:         yellowbrick: 1.5
2025-06-04 15:16:44,705:INFO:              plotly: 5.24.1
2025-06-04 15:16:44,705:INFO:    plotly-resampler: Not installed
2025-06-04 15:16:44,705:INFO:             kaleido: 0.2.1
2025-06-04 15:16:44,705:INFO:           schemdraw: 0.15
2025-06-04 15:16:44,705:INFO:         statsmodels: 0.14.4
2025-06-04 15:16:44,705:INFO:              sktime: 0.26.0
2025-06-04 15:16:44,705:INFO:               tbats: 1.1.3
2025-06-04 15:16:44,705:INFO:            pmdarima: 2.0.4
2025-06-04 15:16:44,705:INFO:              psutil: 7.0.0
2025-06-04 15:16:44,709:INFO:          markupsafe: 3.0.2
2025-06-04 15:16:44,710:INFO:             pickle5: Not installed
2025-06-04 15:16:44,710:INFO:         cloudpickle: 3.1.1
2025-06-04 15:16:44,710:INFO:         deprecation: 2.1.0
2025-06-04 15:16:44,710:INFO:              xxhash: 3.5.0
2025-06-04 15:16:44,710:INFO:           wurlitzer: Not installed
2025-06-04 15:16:44,710:INFO:PyCaret optional dependencies:
2025-06-04 15:16:44,751:INFO:                shap: Not installed
2025-06-04 15:16:44,751:INFO:           interpret: Not installed
2025-06-04 15:16:44,751:INFO:                umap: Not installed
2025-06-04 15:16:44,751:INFO:     ydata_profiling: Not installed
2025-06-04 15:16:44,751:INFO:  explainerdashboard: Not installed
2025-06-04 15:16:44,751:INFO:             autoviz: Not installed
2025-06-04 15:16:44,751:INFO:           fairlearn: Not installed
2025-06-04 15:16:44,751:INFO:          deepchecks: Not installed
2025-06-04 15:16:44,751:INFO:             xgboost: Not installed
2025-06-04 15:16:44,751:INFO:            catboost: Not installed
2025-06-04 15:16:44,752:INFO:              kmodes: Not installed
2025-06-04 15:16:44,752:INFO:             mlxtend: Not installed
2025-06-04 15:16:44,752:INFO:       statsforecast: Not installed
2025-06-04 15:16:44,752:INFO:        tune_sklearn: Not installed
2025-06-04 15:16:44,752:INFO:                 ray: Not installed
2025-06-04 15:16:44,752:INFO:            hyperopt: 0.2.7
2025-06-04 15:16:44,752:INFO:              optuna: 4.3.0
2025-06-04 15:16:44,752:INFO:               skopt: 0.10.2
2025-06-04 15:16:44,752:INFO:              mlflow: Not installed
2025-06-04 15:16:44,752:INFO:              gradio: Not installed
2025-06-04 15:16:44,752:INFO:             fastapi: Not installed
2025-06-04 15:16:44,752:INFO:             uvicorn: Not installed
2025-06-04 15:16:44,753:INFO:              m2cgen: Not installed
2025-06-04 15:16:44,753:INFO:           evidently: Not installed
2025-06-04 15:16:44,753:INFO:               fugue: Not installed
2025-06-04 15:16:44,753:INFO:           streamlit: Not installed
2025-06-04 15:16:44,753:INFO:             prophet: Not installed
2025-06-04 15:16:44,753:INFO:None
2025-06-04 15:16:44,753:INFO:Set up data.
2025-06-04 15:16:44,792:INFO:Set up folding strategy.
2025-06-04 15:16:44,792:INFO:Set up train/test split.
2025-06-04 15:16:44,821:INFO:Set up index.
2025-06-04 15:16:44,824:INFO:Assigning column types.
2025-06-04 15:16:44,839:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-04 15:16:44,839:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-04 15:16:44,853:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-04 15:16:44,871:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,200:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:45,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:45,202:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,216:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,229:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,371:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,438:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:45,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:45,442:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-04 15:16:45,452:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,463:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,571:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,654:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:45,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:45,662:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,667:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:16:45,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:45,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:45,869:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-04 15:16:45,899:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,067:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,193:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,218:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,382:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,468:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-04 15:16:46,583:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,747:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,811:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,812:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-04 15:16:46,914:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:46,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:46,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:47,109:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-04 15:16:47,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:47,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:47,177:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-04 15:16:47,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:47,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:47,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:47,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:47,703:INFO:Preparing preprocessing pipeline...
2025-06-04 15:16:47,705:INFO:Set up simple imputation.
2025-06-04 15:16:47,717:INFO:Set up encoding of categorical features.
2025-06-04 15:16:47,881:INFO:Finished creating preprocessing pipeline.
2025-06-04 15:16:47,897:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))])
2025-06-04 15:16:47,897:INFO:Creating final display dataframe.
2025-06-04 15:16:48,217:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Item_Outlet_Sales
2                   Target type         Regression
3           Original data shape         (8523, 12)
4        Transformed data shape         (8523, 12)
5   Transformed train set shape         (5966, 12)
6    Transformed test set shape         (2557, 12)
7              Numeric features                 10
8          Categorical features                  1
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13     Maximum one-hot encoding                 25
14              Encoding method               None
15               Fold Generator              KFold
16                  Fold Number                 10
17                     CPU Jobs                 -1
18                      Use GPU              False
19               Log Experiment              False
20              Experiment Name   reg-default-name
21                          USI               87ad
2025-06-04 15:16:48,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:48,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:48,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:48,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-04 15:16:48,744:INFO:setup() successfully completed in 4.15s...............
2025-06-04 15:16:52,943:INFO:Initializing compare_models()
2025-06-04 15:16:52,944:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-04 15:16:52,944:INFO:Checking exceptions
2025-06-04 15:16:52,962:INFO:Preparing display monitor
2025-06-04 15:16:53,096:INFO:Initializing Linear Regression
2025-06-04 15:16:53,097:INFO:Total runtime is 1.6661485036214194e-05 minutes
2025-06-04 15:16:53,107:INFO:SubProcess create_model() called ==================================
2025-06-04 15:16:53,109:INFO:Initializing create_model()
2025-06-04 15:16:53,109:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:16:53,110:INFO:Checking exceptions
2025-06-04 15:16:53,110:INFO:Importing libraries
2025-06-04 15:16:53,110:INFO:Copying training dataset
2025-06-04 15:16:53,135:INFO:Defining folds
2025-06-04 15:16:53,135:INFO:Declaring metric variables
2025-06-04 15:16:53,161:INFO:Importing untrained model
2025-06-04 15:16:53,174:INFO:Linear Regression Imported successfully
2025-06-04 15:16:53,194:INFO:Starting cross validation
2025-06-04 15:16:53,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:01,540:INFO:Calculating mean and std
2025-06-04 15:17:01,543:INFO:Creating metrics dataframe
2025-06-04 15:17:01,550:INFO:Uploading results into container
2025-06-04 15:17:01,551:INFO:Uploading model into container now
2025-06-04 15:17:01,552:INFO:_master_model_container: 1
2025-06-04 15:17:01,553:INFO:_display_container: 2
2025-06-04 15:17:01,557:INFO:LinearRegression(n_jobs=-1)
2025-06-04 15:17:01,558:INFO:create_model() successfully completed......................................
2025-06-04 15:17:01,692:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:01,692:INFO:Creating metrics dataframe
2025-06-04 15:17:01,714:INFO:Initializing Lasso Regression
2025-06-04 15:17:01,714:INFO:Total runtime is 0.14362996021906535 minutes
2025-06-04 15:17:01,727:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:01,728:INFO:Initializing create_model()
2025-06-04 15:17:01,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:01,729:INFO:Checking exceptions
2025-06-04 15:17:01,729:INFO:Importing libraries
2025-06-04 15:17:01,729:INFO:Copying training dataset
2025-06-04 15:17:01,754:INFO:Defining folds
2025-06-04 15:17:01,755:INFO:Declaring metric variables
2025-06-04 15:17:01,769:INFO:Importing untrained model
2025-06-04 15:17:01,781:INFO:Lasso Regression Imported successfully
2025-06-04 15:17:01,800:INFO:Starting cross validation
2025-06-04 15:17:01,811:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:02,324:INFO:Calculating mean and std
2025-06-04 15:17:02,332:INFO:Creating metrics dataframe
2025-06-04 15:17:02,347:INFO:Uploading results into container
2025-06-04 15:17:02,348:INFO:Uploading model into container now
2025-06-04 15:17:02,349:INFO:_master_model_container: 2
2025-06-04 15:17:02,349:INFO:_display_container: 2
2025-06-04 15:17:02,350:INFO:Lasso(random_state=123)
2025-06-04 15:17:02,350:INFO:create_model() successfully completed......................................
2025-06-04 15:17:02,466:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:02,466:INFO:Creating metrics dataframe
2025-06-04 15:17:02,479:INFO:Initializing Ridge Regression
2025-06-04 15:17:02,479:INFO:Total runtime is 0.15638120571772257 minutes
2025-06-04 15:17:02,485:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:02,485:INFO:Initializing create_model()
2025-06-04 15:17:02,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:02,485:INFO:Checking exceptions
2025-06-04 15:17:02,486:INFO:Importing libraries
2025-06-04 15:17:02,486:INFO:Copying training dataset
2025-06-04 15:17:02,502:INFO:Defining folds
2025-06-04 15:17:02,502:INFO:Declaring metric variables
2025-06-04 15:17:02,513:INFO:Importing untrained model
2025-06-04 15:17:02,523:INFO:Ridge Regression Imported successfully
2025-06-04 15:17:02,534:INFO:Starting cross validation
2025-06-04 15:17:02,539:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:03,012:INFO:Calculating mean and std
2025-06-04 15:17:03,013:INFO:Creating metrics dataframe
2025-06-04 15:17:03,016:INFO:Uploading results into container
2025-06-04 15:17:03,017:INFO:Uploading model into container now
2025-06-04 15:17:03,023:INFO:_master_model_container: 3
2025-06-04 15:17:03,023:INFO:_display_container: 2
2025-06-04 15:17:03,024:INFO:Ridge(random_state=123)
2025-06-04 15:17:03,025:INFO:create_model() successfully completed......................................
2025-06-04 15:17:03,161:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:03,161:INFO:Creating metrics dataframe
2025-06-04 15:17:03,184:INFO:Initializing Elastic Net
2025-06-04 15:17:03,185:INFO:Total runtime is 0.16815229256947836 minutes
2025-06-04 15:17:03,196:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:03,196:INFO:Initializing create_model()
2025-06-04 15:17:03,196:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:03,198:INFO:Checking exceptions
2025-06-04 15:17:03,198:INFO:Importing libraries
2025-06-04 15:17:03,199:INFO:Copying training dataset
2025-06-04 15:17:03,213:INFO:Defining folds
2025-06-04 15:17:03,213:INFO:Declaring metric variables
2025-06-04 15:17:03,230:INFO:Importing untrained model
2025-06-04 15:17:03,236:INFO:Elastic Net Imported successfully
2025-06-04 15:17:03,254:INFO:Starting cross validation
2025-06-04 15:17:03,261:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:03,780:INFO:Calculating mean and std
2025-06-04 15:17:03,782:INFO:Creating metrics dataframe
2025-06-04 15:17:03,784:INFO:Uploading results into container
2025-06-04 15:17:03,785:INFO:Uploading model into container now
2025-06-04 15:17:03,785:INFO:_master_model_container: 4
2025-06-04 15:17:03,786:INFO:_display_container: 2
2025-06-04 15:17:03,787:INFO:ElasticNet(random_state=123)
2025-06-04 15:17:03,787:INFO:create_model() successfully completed......................................
2025-06-04 15:17:03,895:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:03,895:INFO:Creating metrics dataframe
2025-06-04 15:17:03,909:INFO:Initializing Least Angle Regression
2025-06-04 15:17:03,910:INFO:Total runtime is 0.18024224837621053 minutes
2025-06-04 15:17:03,917:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:03,920:INFO:Initializing create_model()
2025-06-04 15:17:03,920:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:03,922:INFO:Checking exceptions
2025-06-04 15:17:03,923:INFO:Importing libraries
2025-06-04 15:17:03,923:INFO:Copying training dataset
2025-06-04 15:17:03,952:INFO:Defining folds
2025-06-04 15:17:03,953:INFO:Declaring metric variables
2025-06-04 15:17:03,964:INFO:Importing untrained model
2025-06-04 15:17:03,974:INFO:Least Angle Regression Imported successfully
2025-06-04 15:17:03,992:INFO:Starting cross validation
2025-06-04 15:17:03,994:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:04,645:INFO:Calculating mean and std
2025-06-04 15:17:04,647:INFO:Creating metrics dataframe
2025-06-04 15:17:04,650:INFO:Uploading results into container
2025-06-04 15:17:04,651:INFO:Uploading model into container now
2025-06-04 15:17:04,651:INFO:_master_model_container: 5
2025-06-04 15:17:04,653:INFO:_display_container: 2
2025-06-04 15:17:04,657:INFO:Lars(random_state=123)
2025-06-04 15:17:04,658:INFO:create_model() successfully completed......................................
2025-06-04 15:17:04,759:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:04,759:INFO:Creating metrics dataframe
2025-06-04 15:17:04,769:INFO:Initializing Lasso Least Angle Regression
2025-06-04 15:17:04,770:INFO:Total runtime is 0.19457035064697265 minutes
2025-06-04 15:17:04,781:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:04,781:INFO:Initializing create_model()
2025-06-04 15:17:04,783:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:04,783:INFO:Checking exceptions
2025-06-04 15:17:04,783:INFO:Importing libraries
2025-06-04 15:17:04,783:INFO:Copying training dataset
2025-06-04 15:17:04,807:INFO:Defining folds
2025-06-04 15:17:04,807:INFO:Declaring metric variables
2025-06-04 15:17:04,816:INFO:Importing untrained model
2025-06-04 15:17:04,827:INFO:Lasso Least Angle Regression Imported successfully
2025-06-04 15:17:04,842:INFO:Starting cross validation
2025-06-04 15:17:04,844:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:05,301:INFO:Calculating mean and std
2025-06-04 15:17:05,302:INFO:Creating metrics dataframe
2025-06-04 15:17:05,312:INFO:Uploading results into container
2025-06-04 15:17:05,313:INFO:Uploading model into container now
2025-06-04 15:17:05,313:INFO:_master_model_container: 6
2025-06-04 15:17:05,314:INFO:_display_container: 2
2025-06-04 15:17:05,314:INFO:LassoLars(random_state=123)
2025-06-04 15:17:05,314:INFO:create_model() successfully completed......................................
2025-06-04 15:17:05,415:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:05,415:INFO:Creating metrics dataframe
2025-06-04 15:17:05,434:INFO:Initializing Orthogonal Matching Pursuit
2025-06-04 15:17:05,434:INFO:Total runtime is 0.20563488801320393 minutes
2025-06-04 15:17:05,444:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:05,444:INFO:Initializing create_model()
2025-06-04 15:17:05,445:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:05,445:INFO:Checking exceptions
2025-06-04 15:17:05,446:INFO:Importing libraries
2025-06-04 15:17:05,446:INFO:Copying training dataset
2025-06-04 15:17:05,474:INFO:Defining folds
2025-06-04 15:17:05,475:INFO:Declaring metric variables
2025-06-04 15:17:05,490:INFO:Importing untrained model
2025-06-04 15:17:05,496:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-04 15:17:05,511:INFO:Starting cross validation
2025-06-04 15:17:05,514:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:05,990:INFO:Calculating mean and std
2025-06-04 15:17:05,992:INFO:Creating metrics dataframe
2025-06-04 15:17:06,000:INFO:Uploading results into container
2025-06-04 15:17:06,002:INFO:Uploading model into container now
2025-06-04 15:17:06,002:INFO:_master_model_container: 7
2025-06-04 15:17:06,003:INFO:_display_container: 2
2025-06-04 15:17:06,003:INFO:OrthogonalMatchingPursuit()
2025-06-04 15:17:06,006:INFO:create_model() successfully completed......................................
2025-06-04 15:17:06,105:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:06,106:INFO:Creating metrics dataframe
2025-06-04 15:17:06,122:INFO:Initializing Bayesian Ridge
2025-06-04 15:17:06,123:INFO:Total runtime is 0.21711857716242472 minutes
2025-06-04 15:17:06,131:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:06,131:INFO:Initializing create_model()
2025-06-04 15:17:06,132:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:06,132:INFO:Checking exceptions
2025-06-04 15:17:06,132:INFO:Importing libraries
2025-06-04 15:17:06,133:INFO:Copying training dataset
2025-06-04 15:17:06,152:INFO:Defining folds
2025-06-04 15:17:06,152:INFO:Declaring metric variables
2025-06-04 15:17:06,164:INFO:Importing untrained model
2025-06-04 15:17:06,178:INFO:Bayesian Ridge Imported successfully
2025-06-04 15:17:06,196:INFO:Starting cross validation
2025-06-04 15:17:06,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:06,942:INFO:Calculating mean and std
2025-06-04 15:17:06,944:INFO:Creating metrics dataframe
2025-06-04 15:17:06,948:INFO:Uploading results into container
2025-06-04 15:17:06,950:INFO:Uploading model into container now
2025-06-04 15:17:06,952:INFO:_master_model_container: 8
2025-06-04 15:17:06,953:INFO:_display_container: 2
2025-06-04 15:17:06,958:INFO:BayesianRidge()
2025-06-04 15:17:06,958:INFO:create_model() successfully completed......................................
2025-06-04 15:17:07,069:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:07,069:INFO:Creating metrics dataframe
2025-06-04 15:17:07,083:INFO:Initializing Passive Aggressive Regressor
2025-06-04 15:17:07,083:INFO:Total runtime is 0.2331180731455485 minutes
2025-06-04 15:17:07,092:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:07,093:INFO:Initializing create_model()
2025-06-04 15:17:07,093:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:07,094:INFO:Checking exceptions
2025-06-04 15:17:07,094:INFO:Importing libraries
2025-06-04 15:17:07,094:INFO:Copying training dataset
2025-06-04 15:17:07,119:INFO:Defining folds
2025-06-04 15:17:07,119:INFO:Declaring metric variables
2025-06-04 15:17:07,131:INFO:Importing untrained model
2025-06-04 15:17:07,141:INFO:Passive Aggressive Regressor Imported successfully
2025-06-04 15:17:07,151:INFO:Starting cross validation
2025-06-04 15:17:07,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:07,616:INFO:Calculating mean and std
2025-06-04 15:17:07,619:INFO:Creating metrics dataframe
2025-06-04 15:17:07,627:INFO:Uploading results into container
2025-06-04 15:17:07,628:INFO:Uploading model into container now
2025-06-04 15:17:07,629:INFO:_master_model_container: 9
2025-06-04 15:17:07,629:INFO:_display_container: 2
2025-06-04 15:17:07,630:INFO:PassiveAggressiveRegressor(random_state=123)
2025-06-04 15:17:07,630:INFO:create_model() successfully completed......................................
2025-06-04 15:17:07,730:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:07,730:INFO:Creating metrics dataframe
2025-06-04 15:17:07,747:INFO:Initializing Huber Regressor
2025-06-04 15:17:07,748:INFO:Total runtime is 0.2442010482152303 minutes
2025-06-04 15:17:07,757:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:07,758:INFO:Initializing create_model()
2025-06-04 15:17:07,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:07,758:INFO:Checking exceptions
2025-06-04 15:17:07,758:INFO:Importing libraries
2025-06-04 15:17:07,758:INFO:Copying training dataset
2025-06-04 15:17:07,775:INFO:Defining folds
2025-06-04 15:17:07,775:INFO:Declaring metric variables
2025-06-04 15:17:07,785:INFO:Importing untrained model
2025-06-04 15:17:07,795:INFO:Huber Regressor Imported successfully
2025-06-04 15:17:07,814:INFO:Starting cross validation
2025-06-04 15:17:07,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:08,122:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,145:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,163:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,183:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,501:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,515:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,521:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,559:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,860:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,869:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-04 15:17:08,962:INFO:Calculating mean and std
2025-06-04 15:17:08,969:INFO:Creating metrics dataframe
2025-06-04 15:17:08,979:INFO:Uploading results into container
2025-06-04 15:17:08,980:INFO:Uploading model into container now
2025-06-04 15:17:08,981:INFO:_master_model_container: 10
2025-06-04 15:17:08,981:INFO:_display_container: 2
2025-06-04 15:17:08,982:INFO:HuberRegressor()
2025-06-04 15:17:08,982:INFO:create_model() successfully completed......................................
2025-06-04 15:17:09,135:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:09,139:INFO:Creating metrics dataframe
2025-06-04 15:17:09,159:INFO:Initializing K Neighbors Regressor
2025-06-04 15:17:09,159:INFO:Total runtime is 0.2677162011464437 minutes
2025-06-04 15:17:09,167:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:09,168:INFO:Initializing create_model()
2025-06-04 15:17:09,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:09,168:INFO:Checking exceptions
2025-06-04 15:17:09,169:INFO:Importing libraries
2025-06-04 15:17:09,169:INFO:Copying training dataset
2025-06-04 15:17:09,195:INFO:Defining folds
2025-06-04 15:17:09,195:INFO:Declaring metric variables
2025-06-04 15:17:09,210:INFO:Importing untrained model
2025-06-04 15:17:09,216:INFO:K Neighbors Regressor Imported successfully
2025-06-04 15:17:09,241:INFO:Starting cross validation
2025-06-04 15:17:09,243:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:10,006:INFO:Calculating mean and std
2025-06-04 15:17:10,007:INFO:Creating metrics dataframe
2025-06-04 15:17:10,011:INFO:Uploading results into container
2025-06-04 15:17:10,012:INFO:Uploading model into container now
2025-06-04 15:17:10,014:INFO:_master_model_container: 11
2025-06-04 15:17:10,014:INFO:_display_container: 2
2025-06-04 15:17:10,016:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-04 15:17:10,016:INFO:create_model() successfully completed......................................
2025-06-04 15:17:10,119:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:10,121:INFO:Creating metrics dataframe
2025-06-04 15:17:10,141:INFO:Initializing Decision Tree Regressor
2025-06-04 15:17:10,141:INFO:Total runtime is 0.28407835960388184 minutes
2025-06-04 15:17:10,148:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:10,148:INFO:Initializing create_model()
2025-06-04 15:17:10,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:10,149:INFO:Checking exceptions
2025-06-04 15:17:10,149:INFO:Importing libraries
2025-06-04 15:17:10,150:INFO:Copying training dataset
2025-06-04 15:17:10,214:INFO:Defining folds
2025-06-04 15:17:10,214:INFO:Declaring metric variables
2025-06-04 15:17:10,227:INFO:Importing untrained model
2025-06-04 15:17:10,234:INFO:Decision Tree Regressor Imported successfully
2025-06-04 15:17:10,268:INFO:Starting cross validation
2025-06-04 15:17:10,272:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:10,977:INFO:Calculating mean and std
2025-06-04 15:17:10,979:INFO:Creating metrics dataframe
2025-06-04 15:17:10,990:INFO:Uploading results into container
2025-06-04 15:17:10,992:INFO:Uploading model into container now
2025-06-04 15:17:10,993:INFO:_master_model_container: 12
2025-06-04 15:17:10,993:INFO:_display_container: 2
2025-06-04 15:17:10,993:INFO:DecisionTreeRegressor(random_state=123)
2025-06-04 15:17:10,994:INFO:create_model() successfully completed......................................
2025-06-04 15:17:11,093:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:11,093:INFO:Creating metrics dataframe
2025-06-04 15:17:11,113:INFO:Initializing Random Forest Regressor
2025-06-04 15:17:11,113:INFO:Total runtime is 0.3002864678700765 minutes
2025-06-04 15:17:11,123:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:11,124:INFO:Initializing create_model()
2025-06-04 15:17:11,124:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:11,124:INFO:Checking exceptions
2025-06-04 15:17:11,124:INFO:Importing libraries
2025-06-04 15:17:11,125:INFO:Copying training dataset
2025-06-04 15:17:11,134:INFO:Defining folds
2025-06-04 15:17:11,134:INFO:Declaring metric variables
2025-06-04 15:17:11,147:INFO:Importing untrained model
2025-06-04 15:17:11,159:INFO:Random Forest Regressor Imported successfully
2025-06-04 15:17:11,179:INFO:Starting cross validation
2025-06-04 15:17:11,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:26,599:INFO:Calculating mean and std
2025-06-04 15:17:26,603:INFO:Creating metrics dataframe
2025-06-04 15:17:26,610:INFO:Uploading results into container
2025-06-04 15:17:26,612:INFO:Uploading model into container now
2025-06-04 15:17:26,614:INFO:_master_model_container: 13
2025-06-04 15:17:26,614:INFO:_display_container: 2
2025-06-04 15:17:26,615:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-06-04 15:17:26,615:INFO:create_model() successfully completed......................................
2025-06-04 15:17:26,737:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:26,737:INFO:Creating metrics dataframe
2025-06-04 15:17:26,756:INFO:Initializing Extra Trees Regressor
2025-06-04 15:17:26,756:INFO:Total runtime is 0.5610105713208516 minutes
2025-06-04 15:17:26,764:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:26,765:INFO:Initializing create_model()
2025-06-04 15:17:26,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:26,765:INFO:Checking exceptions
2025-06-04 15:17:26,765:INFO:Importing libraries
2025-06-04 15:17:26,765:INFO:Copying training dataset
2025-06-04 15:17:26,797:INFO:Defining folds
2025-06-04 15:17:26,797:INFO:Declaring metric variables
2025-06-04 15:17:26,812:INFO:Importing untrained model
2025-06-04 15:17:26,825:INFO:Extra Trees Regressor Imported successfully
2025-06-04 15:17:26,844:INFO:Starting cross validation
2025-06-04 15:17:26,847:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:35,379:INFO:Calculating mean and std
2025-06-04 15:17:35,383:INFO:Creating metrics dataframe
2025-06-04 15:17:35,387:INFO:Uploading results into container
2025-06-04 15:17:35,388:INFO:Uploading model into container now
2025-06-04 15:17:35,389:INFO:_master_model_container: 14
2025-06-04 15:17:35,389:INFO:_display_container: 2
2025-06-04 15:17:35,390:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-06-04 15:17:35,390:INFO:create_model() successfully completed......................................
2025-06-04 15:17:35,522:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:35,522:INFO:Creating metrics dataframe
2025-06-04 15:17:35,538:INFO:Initializing AdaBoost Regressor
2025-06-04 15:17:35,538:INFO:Total runtime is 0.7073774655659993 minutes
2025-06-04 15:17:35,546:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:35,546:INFO:Initializing create_model()
2025-06-04 15:17:35,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:35,548:INFO:Checking exceptions
2025-06-04 15:17:35,548:INFO:Importing libraries
2025-06-04 15:17:35,548:INFO:Copying training dataset
2025-06-04 15:17:35,561:INFO:Defining folds
2025-06-04 15:17:35,561:INFO:Declaring metric variables
2025-06-04 15:17:35,576:INFO:Importing untrained model
2025-06-04 15:17:35,585:INFO:AdaBoost Regressor Imported successfully
2025-06-04 15:17:35,623:INFO:Starting cross validation
2025-06-04 15:17:35,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:37,630:INFO:Calculating mean and std
2025-06-04 15:17:37,632:INFO:Creating metrics dataframe
2025-06-04 15:17:37,653:INFO:Uploading results into container
2025-06-04 15:17:37,655:INFO:Uploading model into container now
2025-06-04 15:17:37,657:INFO:_master_model_container: 15
2025-06-04 15:17:37,657:INFO:_display_container: 2
2025-06-04 15:17:37,658:INFO:AdaBoostRegressor(random_state=123)
2025-06-04 15:17:37,660:INFO:create_model() successfully completed......................................
2025-06-04 15:17:37,808:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:37,808:INFO:Creating metrics dataframe
2025-06-04 15:17:37,820:INFO:Initializing Gradient Boosting Regressor
2025-06-04 15:17:37,820:INFO:Total runtime is 0.7454111377398173 minutes
2025-06-04 15:17:37,828:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:37,828:INFO:Initializing create_model()
2025-06-04 15:17:37,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:37,829:INFO:Checking exceptions
2025-06-04 15:17:37,829:INFO:Importing libraries
2025-06-04 15:17:37,829:INFO:Copying training dataset
2025-06-04 15:17:37,841:INFO:Defining folds
2025-06-04 15:17:37,842:INFO:Declaring metric variables
2025-06-04 15:17:37,856:INFO:Importing untrained model
2025-06-04 15:17:37,872:INFO:Gradient Boosting Regressor Imported successfully
2025-06-04 15:17:37,891:INFO:Starting cross validation
2025-06-04 15:17:37,893:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:42,599:INFO:Calculating mean and std
2025-06-04 15:17:42,603:INFO:Creating metrics dataframe
2025-06-04 15:17:42,606:INFO:Uploading results into container
2025-06-04 15:17:42,607:INFO:Uploading model into container now
2025-06-04 15:17:42,608:INFO:_master_model_container: 16
2025-06-04 15:17:42,608:INFO:_display_container: 2
2025-06-04 15:17:42,609:INFO:GradientBoostingRegressor(random_state=123)
2025-06-04 15:17:42,609:INFO:create_model() successfully completed......................................
2025-06-04 15:17:42,719:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:42,719:INFO:Creating metrics dataframe
2025-06-04 15:17:42,738:INFO:Initializing Light Gradient Boosting Machine
2025-06-04 15:17:42,738:INFO:Total runtime is 0.8273699124654134 minutes
2025-06-04 15:17:42,746:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:42,746:INFO:Initializing create_model()
2025-06-04 15:17:42,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:42,746:INFO:Checking exceptions
2025-06-04 15:17:42,748:INFO:Importing libraries
2025-06-04 15:17:42,748:INFO:Copying training dataset
2025-06-04 15:17:42,763:INFO:Defining folds
2025-06-04 15:17:42,763:INFO:Declaring metric variables
2025-06-04 15:17:42,777:INFO:Importing untrained model
2025-06-04 15:17:42,793:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-04 15:17:42,808:INFO:Starting cross validation
2025-06-04 15:17:42,812:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:45,294:INFO:Calculating mean and std
2025-06-04 15:17:45,301:INFO:Creating metrics dataframe
2025-06-04 15:17:45,308:INFO:Uploading results into container
2025-06-04 15:17:45,310:INFO:Uploading model into container now
2025-06-04 15:17:45,311:INFO:_master_model_container: 17
2025-06-04 15:17:45,311:INFO:_display_container: 2
2025-06-04 15:17:45,312:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-06-04 15:17:45,312:INFO:create_model() successfully completed......................................
2025-06-04 15:17:45,426:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:45,427:INFO:Creating metrics dataframe
2025-06-04 15:17:45,446:INFO:Initializing Dummy Regressor
2025-06-04 15:17:45,447:INFO:Total runtime is 0.8725176016489664 minutes
2025-06-04 15:17:45,457:INFO:SubProcess create_model() called ==================================
2025-06-04 15:17:45,458:INFO:Initializing create_model()
2025-06-04 15:17:45,458:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025651A68BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:45,458:INFO:Checking exceptions
2025-06-04 15:17:45,459:INFO:Importing libraries
2025-06-04 15:17:45,459:INFO:Copying training dataset
2025-06-04 15:17:45,477:INFO:Defining folds
2025-06-04 15:17:45,478:INFO:Declaring metric variables
2025-06-04 15:17:45,490:INFO:Importing untrained model
2025-06-04 15:17:45,508:INFO:Dummy Regressor Imported successfully
2025-06-04 15:17:45,544:INFO:Starting cross validation
2025-06-04 15:17:45,546:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:17:46,046:INFO:Calculating mean and std
2025-06-04 15:17:46,052:INFO:Creating metrics dataframe
2025-06-04 15:17:46,059:INFO:Uploading results into container
2025-06-04 15:17:46,061:INFO:Uploading model into container now
2025-06-04 15:17:46,062:INFO:_master_model_container: 18
2025-06-04 15:17:46,062:INFO:_display_container: 2
2025-06-04 15:17:46,062:INFO:DummyRegressor()
2025-06-04 15:17:46,062:INFO:create_model() successfully completed......................................
2025-06-04 15:17:46,174:INFO:SubProcess create_model() end ==================================
2025-06-04 15:17:46,174:INFO:Creating metrics dataframe
2025-06-04 15:17:46,201:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-04 15:17:46,228:INFO:Initializing create_model()
2025-06-04 15:17:46,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:17:46,229:INFO:Checking exceptions
2025-06-04 15:17:46,235:INFO:Importing libraries
2025-06-04 15:17:46,235:INFO:Copying training dataset
2025-06-04 15:17:46,261:INFO:Defining folds
2025-06-04 15:17:46,262:INFO:Declaring metric variables
2025-06-04 15:17:46,262:INFO:Importing untrained model
2025-06-04 15:17:46,262:INFO:Declaring custom model
2025-06-04 15:17:46,264:INFO:Gradient Boosting Regressor Imported successfully
2025-06-04 15:17:46,267:INFO:Cross validation set to False
2025-06-04 15:17:46,267:INFO:Fitting Model
2025-06-04 15:17:47,731:INFO:GradientBoostingRegressor(random_state=123)
2025-06-04 15:17:47,731:INFO:create_model() successfully completed......................................
2025-06-04 15:17:47,913:INFO:_master_model_container: 18
2025-06-04 15:17:47,913:INFO:_display_container: 2
2025-06-04 15:17:47,915:INFO:GradientBoostingRegressor(random_state=123)
2025-06-04 15:17:47,918:INFO:compare_models() successfully completed......................................
2025-06-04 15:22:55,753:INFO:Initializing tune_model()
2025-06-04 15:22:55,753:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>)
2025-06-04 15:22:55,754:INFO:Checking exceptions
2025-06-04 15:22:55,754:INFO:Soft dependency imported: skopt: 0.10.2
2025-06-04 15:22:55,958:INFO:Copying training dataset
2025-06-04 15:22:55,984:INFO:Checking base model
2025-06-04 15:22:55,985:INFO:Base model : Gradient Boosting Regressor
2025-06-04 15:22:56,014:INFO:Declaring metric variables
2025-06-04 15:22:56,025:INFO:Defining Hyperparameters
2025-06-04 15:22:56,250:INFO:Tuning with n_jobs=-1
2025-06-04 15:22:56,254:INFO:Initializing skopt.BayesSearchCV
2025-06-04 15:23:50,333:INFO:best_params: OrderedDict([('actual_estimator__learning_rate', 0.0238190072917794), ('actual_estimator__max_depth', 3), ('actual_estimator__max_features', 0.4284489606984907), ('actual_estimator__min_impurity_decrease', 0.002646746704757545), ('actual_estimator__min_samples_leaf', 5), ('actual_estimator__min_samples_split', 9), ('actual_estimator__n_estimators', 239), ('actual_estimator__subsample', 0.7687727671549709)])
2025-06-04 15:23:50,334:INFO:Hyperparameter search completed
2025-06-04 15:23:50,336:INFO:SubProcess create_model() called ==================================
2025-06-04 15:23:50,337:INFO:Initializing create_model()
2025-06-04 15:23:50,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002563CC70DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'learning_rate': 0.0238190072917794, 'max_depth': 3, 'max_features': 0.4284489606984907, 'min_impurity_decrease': 0.002646746704757545, 'min_samples_leaf': 5, 'min_samples_split': 9, 'n_estimators': 239, 'subsample': 0.7687727671549709})
2025-06-04 15:23:50,341:INFO:Checking exceptions
2025-06-04 15:23:50,341:INFO:Importing libraries
2025-06-04 15:23:50,342:INFO:Copying training dataset
2025-06-04 15:23:50,350:INFO:Defining folds
2025-06-04 15:23:50,350:INFO:Declaring metric variables
2025-06-04 15:23:50,358:INFO:Importing untrained model
2025-06-04 15:23:50,358:INFO:Declaring custom model
2025-06-04 15:23:50,365:INFO:Gradient Boosting Regressor Imported successfully
2025-06-04 15:23:50,385:INFO:Starting cross validation
2025-06-04 15:23:50,391:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:23:55,237:INFO:Calculating mean and std
2025-06-04 15:23:55,238:INFO:Creating metrics dataframe
2025-06-04 15:23:55,246:INFO:Finalizing model
2025-06-04 15:23:56,792:INFO:Uploading results into container
2025-06-04 15:23:56,801:INFO:Uploading model into container now
2025-06-04 15:23:56,806:INFO:_master_model_container: 19
2025-06-04 15:23:56,806:INFO:_display_container: 3
2025-06-04 15:23:56,807:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-04 15:23:56,808:INFO:create_model() successfully completed......................................
2025-06-04 15:23:56,933:INFO:SubProcess create_model() end ==================================
2025-06-04 15:23:56,933:INFO:choose_better activated
2025-06-04 15:23:56,941:INFO:SubProcess create_model() called ==================================
2025-06-04 15:23:56,941:INFO:Initializing create_model()
2025-06-04 15:23:56,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:23:56,942:INFO:Checking exceptions
2025-06-04 15:23:56,946:INFO:Importing libraries
2025-06-04 15:23:56,946:INFO:Copying training dataset
2025-06-04 15:23:56,956:INFO:Defining folds
2025-06-04 15:23:56,957:INFO:Declaring metric variables
2025-06-04 15:23:56,957:INFO:Importing untrained model
2025-06-04 15:23:56,957:INFO:Declaring custom model
2025-06-04 15:23:56,958:INFO:Gradient Boosting Regressor Imported successfully
2025-06-04 15:23:56,958:INFO:Starting cross validation
2025-06-04 15:23:56,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-04 15:24:01,588:INFO:Calculating mean and std
2025-06-04 15:24:01,590:INFO:Creating metrics dataframe
2025-06-04 15:24:01,595:INFO:Finalizing model
2025-06-04 15:24:02,877:INFO:Uploading results into container
2025-06-04 15:24:02,877:INFO:Uploading model into container now
2025-06-04 15:24:02,879:INFO:_master_model_container: 20
2025-06-04 15:24:02,879:INFO:_display_container: 4
2025-06-04 15:24:02,879:INFO:GradientBoostingRegressor(random_state=123)
2025-06-04 15:24:02,879:INFO:create_model() successfully completed......................................
2025-06-04 15:24:02,973:INFO:SubProcess create_model() end ==================================
2025-06-04 15:24:02,974:INFO:GradientBoostingRegressor(random_state=123) result for RMSE is 1260.5197
2025-06-04 15:24:02,975:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) result for RMSE is 1216.7124
2025-06-04 15:24:02,976:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) is best model
2025-06-04 15:24:02,976:INFO:choose_better completed
2025-06-04 15:24:02,992:INFO:_master_model_container: 20
2025-06-04 15:24:02,992:INFO:_display_container: 3
2025-06-04 15:24:02,995:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-04 15:24:02,996:INFO:tune_model() successfully completed......................................
2025-06-04 15:24:49,600:INFO:Initializing finalize_model()
2025-06-04 15:24:49,601:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-04 15:24:49,607:INFO:Finalizing GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-04 15:24:49,686:INFO:Initializing create_model()
2025-06-04 15:24:49,692:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-04 15:24:49,693:INFO:Checking exceptions
2025-06-04 15:24:49,772:INFO:Importing libraries
2025-06-04 15:24:49,773:INFO:Copying training dataset
2025-06-04 15:24:49,781:INFO:Defining folds
2025-06-04 15:24:49,782:INFO:Declaring metric variables
2025-06-04 15:24:49,783:INFO:Importing untrained model
2025-06-04 15:24:49,784:INFO:Declaring custom model
2025-06-04 15:24:49,791:INFO:Gradient Boosting Regressor Imported successfully
2025-06-04 15:24:49,799:INFO:Cross validation set to False
2025-06-04 15:24:49,799:INFO:Fitting Model
2025-06-04 15:24:52,497:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-04 15:24:52,497:INFO:create_model() successfully completed......................................
2025-06-04 15:24:52,647:INFO:_master_model_container: 20
2025-06-04 15:24:52,648:INFO:_display_container: 3
2025-06-04 15:24:52,659:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-04 15:24:52,659:INFO:finalize_model() successfully completed......................................
2025-06-04 15:24:52,822:INFO:Initializing save_model()
2025-06-04 15:24:52,822:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), model_name=bigmart_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-04 15:24:52,822:INFO:Adding model into prep_pipe
2025-06-04 15:24:52,823:WARNING:Only Model saved as it was a pipeline.
2025-06-04 15:24:52,856:INFO:bigmart_best_model.pkl saved in current working directory
2025-06-04 15:24:52,873:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-04 15:24:52,873:INFO:save_model() successfully completed......................................
2025-06-04 15:25:16,995:INFO:Initializing predict_model()
2025-06-04 15:25:16,996:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000256517B3730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002565148AB00>)
2025-06-04 15:25:16,996:INFO:Checking exceptions
2025-06-04 15:25:16,996:INFO:Preloading libraries
2025-06-04 15:25:17,001:INFO:Set up data.
2025-06-04 15:25:17,028:INFO:Set up index.
2025-06-04 15:25:17,135:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-06-04 21:42:51,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:42:51,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:42:51,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:42:51,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:42:52,176:INFO:Initializing load_model()
2025-06-04 21:42:52,177:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:44:07,643:INFO:Initializing load_model()
2025-06-04 21:44:07,643:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:44:08,340:INFO:Initializing load_model()
2025-06-04 21:44:08,342:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:44:10,376:INFO:Initializing load_model()
2025-06-04 21:44:10,385:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:44:11,027:INFO:Initializing load_model()
2025-06-04 21:44:11,028:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:44:31,292:INFO:Initializing load_model()
2025-06-04 21:44:31,294:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:44:32,553:INFO:Initializing load_model()
2025-06-04 21:44:32,556:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:44:39,715:INFO:Initializing load_model()
2025-06-04 21:44:39,716:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:44:46,889:INFO:Initializing load_model()
2025-06-04 21:44:46,889:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:45:01,681:INFO:Initializing load_model()
2025-06-04 21:45:01,682:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:45:03,389:INFO:Initializing load_model()
2025-06-04 21:45:03,394:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:45:03,670:INFO:Initializing predict_model()
2025-06-04 21:45:03,671:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000208F93ABB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000208F71FFB50>)
2025-06-04 21:45:03,671:INFO:Checking exceptions
2025-06-04 21:45:03,672:INFO:Preloading libraries
2025-06-04 21:45:03,684:INFO:Set up data.
2025-06-04 21:45:03,723:INFO:Set up index.
2025-06-04 21:52:49,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:52:49,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:52:49,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:52:49,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:52:49,850:INFO:Initializing load_model()
2025-06-04 21:52:49,850:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:53:19,118:INFO:Initializing load_model()
2025-06-04 21:53:19,119:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:53:23,533:INFO:Initializing load_model()
2025-06-04 21:53:23,534:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:53:26,552:INFO:Initializing load_model()
2025-06-04 21:53:26,561:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:53:30,327:INFO:Initializing load_model()
2025-06-04 21:53:30,328:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:53:38,187:INFO:Initializing load_model()
2025-06-04 21:53:38,188:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:53:47,712:INFO:Initializing load_model()
2025-06-04 21:53:47,714:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:53:54,887:INFO:Initializing load_model()
2025-06-04 21:53:54,894:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:53:58,813:INFO:Initializing load_model()
2025-06-04 21:53:58,813:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:54:05,394:INFO:Initializing load_model()
2025-06-04 21:54:05,395:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:54:06,415:INFO:Initializing load_model()
2025-06-04 21:54:06,416:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:54:06,633:INFO:Initializing predict_model()
2025-06-04 21:54:06,633:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020180E2C0A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000201810A36D0>)
2025-06-04 21:54:06,634:INFO:Checking exceptions
2025-06-04 21:54:06,634:INFO:Preloading libraries
2025-06-04 21:54:06,636:INFO:Set up data.
2025-06-04 21:54:06,656:INFO:Set up index.
2025-06-04 21:58:45,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:58:45,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:58:45,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:58:45,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-04 21:58:45,608:INFO:Initializing load_model()
2025-06-04 21:58:45,608:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:09,046:INFO:Initializing load_model()
2025-06-04 21:59:09,051:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:15,738:INFO:Initializing load_model()
2025-06-04 21:59:15,738:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:24,924:INFO:Initializing load_model()
2025-06-04 21:59:24,925:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:28,797:INFO:Initializing load_model()
2025-06-04 21:59:28,799:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:29,432:INFO:Initializing load_model()
2025-06-04 21:59:29,434:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:30,021:INFO:Initializing load_model()
2025-06-04 21:59:30,023:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:39,355:INFO:Initializing load_model()
2025-06-04 21:59:39,359:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:50,684:INFO:Initializing load_model()
2025-06-04 21:59:50,684:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:54,016:INFO:Initializing load_model()
2025-06-04 21:59:54,016:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 21:59:58,621:INFO:Initializing load_model()
2025-06-04 21:59:58,622:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:00:02,787:INFO:Initializing load_model()
2025-06-04 22:00:02,788:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:00:07,496:INFO:Initializing load_model()
2025-06-04 22:00:07,496:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:00:08,584:INFO:Initializing load_model()
2025-06-04 22:00:08,586:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:00:08,982:INFO:Initializing predict_model()
2025-06-04 22:00:08,982:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B9A550430>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B84CABAC0>)
2025-06-04 22:00:08,982:INFO:Checking exceptions
2025-06-04 22:00:08,982:INFO:Preloading libraries
2025-06-04 22:00:08,983:INFO:Set up data.
2025-06-04 22:00:09,011:INFO:Set up index.
2025-06-04 22:15:29,159:INFO:Initializing load_model()
2025-06-04 22:15:29,159:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:15:39,799:INFO:Initializing load_model()
2025-06-04 22:15:39,803:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:15:44,104:INFO:Initializing load_model()
2025-06-04 22:15:44,106:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:15:46,562:INFO:Initializing load_model()
2025-06-04 22:15:46,566:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:15:51,690:INFO:Initializing load_model()
2025-06-04 22:15:51,691:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:16:04,684:INFO:Initializing load_model()
2025-06-04 22:16:04,685:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:16:06,900:INFO:Initializing load_model()
2025-06-04 22:16:06,903:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:16:10,951:INFO:Initializing load_model()
2025-06-04 22:16:10,952:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:16:13,455:INFO:Initializing load_model()
2025-06-04 22:16:13,457:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:16:14,258:INFO:Initializing load_model()
2025-06-04 22:16:14,259:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-04 22:16:14,626:INFO:Initializing predict_model()
2025-06-04 22:16:14,626:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020B9A4B3D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B84CABA30>)
2025-06-04 22:16:14,627:INFO:Checking exceptions
2025-06-04 22:16:14,627:INFO:Preloading libraries
2025-06-04 22:16:14,631:INFO:Set up data.
2025-06-04 22:16:14,643:INFO:Set up index.
2025-06-05 11:15:58,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:15:58,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:15:58,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:15:58,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:15:58,595:INFO:Initializing load_model()
2025-06-05 11:15:58,595:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:13,160:INFO:Initializing load_model()
2025-06-05 11:16:13,160:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:16,346:INFO:Initializing load_model()
2025-06-05 11:16:16,347:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:19,685:INFO:Initializing load_model()
2025-06-05 11:16:19,685:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:26,719:INFO:Initializing load_model()
2025-06-05 11:16:26,719:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:31,703:INFO:Initializing load_model()
2025-06-05 11:16:31,703:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:33,834:INFO:Initializing load_model()
2025-06-05 11:16:33,834:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:37,833:INFO:Initializing load_model()
2025-06-05 11:16:37,835:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:41,179:INFO:Initializing load_model()
2025-06-05 11:16:41,180:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:42,434:INFO:Initializing load_model()
2025-06-05 11:16:42,435:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:16:42,679:INFO:Initializing predict_model()
2025-06-05 11:16:42,679:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8143C6B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D814702C20>)
2025-06-05 11:16:42,679:INFO:Checking exceptions
2025-06-05 11:16:42,679:INFO:Preloading libraries
2025-06-05 11:16:42,679:INFO:Set up data.
2025-06-05 11:16:42,687:INFO:Set up index.
2025-06-05 11:29:10,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:29:10,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:29:10,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:29:10,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:29:16,608:INFO:PyCaret RegressionExperiment
2025-06-05 11:29:16,608:INFO:Logging name: reg-default-name
2025-06-05 11:29:16,608:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-05 11:29:16,608:INFO:version 3.3.2
2025-06-05 11:29:16,608:INFO:Initializing setup()
2025-06-05 11:29:16,610:INFO:self.USI: 57c9
2025-06-05 11:29:16,610:INFO:self._variable_keys: {'_available_plots', 'exp_id', 'logging_param', 'fold_groups_param', 'data', 'y_train', 'transform_target_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'X_train', 'target_param', '_ml_usecase', 'html_param', 'X_test', 'fold_generator', 'pipeline', 'exp_name_log', 'gpu_param', 'USI', 'memory', 'y_test', 'idx', 'n_jobs_param', 'y', 'seed', 'X'}
2025-06-05 11:29:16,610:INFO:Checking environment
2025-06-05 11:29:16,610:INFO:python_version: 3.10.11
2025-06-05 11:29:16,610:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-05 11:29:16,610:INFO:machine: AMD64
2025-06-05 11:29:16,610:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-05 11:29:16,615:INFO:Memory: svmem(total=8316121088, available=1208401920, percent=85.5, used=7107719168, free=1208401920)
2025-06-05 11:29:16,615:INFO:Physical Core: 2
2025-06-05 11:29:16,616:INFO:Logical Core: 4
2025-06-05 11:29:16,616:INFO:Checking libraries
2025-06-05 11:29:16,616:INFO:System:
2025-06-05 11:29:16,616:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-05 11:29:16,616:INFO:executable: c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\Scripts\python.exe
2025-06-05 11:29:16,616:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-05 11:29:16,616:INFO:PyCaret required dependencies:
2025-06-05 11:29:16,683:INFO:                 pip: 25.1.1
2025-06-05 11:29:16,683:INFO:          setuptools: 65.5.0
2025-06-05 11:29:16,683:INFO:             pycaret: 3.3.2
2025-06-05 11:29:16,684:INFO:             IPython: 8.37.0
2025-06-05 11:29:16,684:INFO:          ipywidgets: 8.1.7
2025-06-05 11:29:16,684:INFO:                tqdm: 4.67.1
2025-06-05 11:29:16,684:INFO:               numpy: 1.26.4
2025-06-05 11:29:16,684:INFO:              pandas: 2.1.4
2025-06-05 11:29:16,684:INFO:              jinja2: 3.1.6
2025-06-05 11:29:16,684:INFO:               scipy: 1.11.4
2025-06-05 11:29:16,684:INFO:              joblib: 1.3.2
2025-06-05 11:29:16,684:INFO:             sklearn: 1.4.2
2025-06-05 11:29:16,684:INFO:                pyod: 2.0.5
2025-06-05 11:29:16,684:INFO:            imblearn: 0.13.0
2025-06-05 11:29:16,684:INFO:   category_encoders: 2.7.0
2025-06-05 11:29:16,684:INFO:            lightgbm: 4.6.0
2025-06-05 11:29:16,684:INFO:               numba: 0.61.2
2025-06-05 11:29:16,684:INFO:            requests: 2.32.3
2025-06-05 11:29:16,684:INFO:          matplotlib: 3.7.5
2025-06-05 11:29:16,684:INFO:          scikitplot: 0.3.7
2025-06-05 11:29:16,684:INFO:         yellowbrick: 1.5
2025-06-05 11:29:16,684:INFO:              plotly: 5.24.1
2025-06-05 11:29:16,684:INFO:    plotly-resampler: Not installed
2025-06-05 11:29:16,684:INFO:             kaleido: 0.2.1
2025-06-05 11:29:16,684:INFO:           schemdraw: 0.15
2025-06-05 11:29:16,684:INFO:         statsmodels: 0.14.4
2025-06-05 11:29:16,684:INFO:              sktime: 0.26.0
2025-06-05 11:29:16,684:INFO:               tbats: 1.1.3
2025-06-05 11:29:16,684:INFO:            pmdarima: 2.0.4
2025-06-05 11:29:16,685:INFO:              psutil: 7.0.0
2025-06-05 11:29:16,685:INFO:          markupsafe: 3.0.2
2025-06-05 11:29:16,685:INFO:             pickle5: Not installed
2025-06-05 11:29:16,685:INFO:         cloudpickle: 3.1.1
2025-06-05 11:29:16,685:INFO:         deprecation: 2.1.0
2025-06-05 11:29:16,685:INFO:              xxhash: 3.5.0
2025-06-05 11:29:16,685:INFO:           wurlitzer: Not installed
2025-06-05 11:29:16,685:INFO:PyCaret optional dependencies:
2025-06-05 11:29:16,715:INFO:                shap: Not installed
2025-06-05 11:29:16,715:INFO:           interpret: Not installed
2025-06-05 11:29:16,715:INFO:                umap: Not installed
2025-06-05 11:29:16,716:INFO:     ydata_profiling: Not installed
2025-06-05 11:29:16,716:INFO:  explainerdashboard: Not installed
2025-06-05 11:29:16,716:INFO:             autoviz: Not installed
2025-06-05 11:29:16,716:INFO:           fairlearn: Not installed
2025-06-05 11:29:16,716:INFO:          deepchecks: Not installed
2025-06-05 11:29:16,716:INFO:             xgboost: Not installed
2025-06-05 11:29:16,716:INFO:            catboost: Not installed
2025-06-05 11:29:16,716:INFO:              kmodes: Not installed
2025-06-05 11:29:16,716:INFO:             mlxtend: Not installed
2025-06-05 11:29:16,716:INFO:       statsforecast: Not installed
2025-06-05 11:29:16,716:INFO:        tune_sklearn: Not installed
2025-06-05 11:29:16,716:INFO:                 ray: Not installed
2025-06-05 11:29:16,716:INFO:            hyperopt: 0.2.7
2025-06-05 11:29:16,716:INFO:              optuna: 4.3.0
2025-06-05 11:29:16,716:INFO:               skopt: 0.10.2
2025-06-05 11:29:16,716:INFO:              mlflow: Not installed
2025-06-05 11:29:16,716:INFO:              gradio: Not installed
2025-06-05 11:29:16,716:INFO:             fastapi: Not installed
2025-06-05 11:29:16,716:INFO:             uvicorn: Not installed
2025-06-05 11:29:16,716:INFO:              m2cgen: Not installed
2025-06-05 11:29:16,716:INFO:           evidently: Not installed
2025-06-05 11:29:16,716:INFO:               fugue: Not installed
2025-06-05 11:29:16,717:INFO:           streamlit: 1.45.1
2025-06-05 11:29:16,717:INFO:             prophet: Not installed
2025-06-05 11:29:16,717:INFO:None
2025-06-05 11:29:16,717:INFO:Set up data.
2025-06-05 11:29:16,728:INFO:Set up folding strategy.
2025-06-05 11:29:16,728:INFO:Set up train/test split.
2025-06-05 11:29:16,744:INFO:Set up index.
2025-06-05 11:29:16,745:INFO:Assigning column types.
2025-06-05 11:29:16,757:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-05 11:29:16,758:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-05 11:29:16,763:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-05 11:29:16,771:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:16,858:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:16,924:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:16,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:16,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:16,925:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-05 11:29:16,932:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-05 11:29:16,939:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,106:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-05 11:29:17,117:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,121:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,208:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,290:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,300:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,404:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,469:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-05 11:29:17,482:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,559:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,656:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,851:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:17,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:17,975:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-05 11:29:18,159:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:18,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:18,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:18,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:18,472:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:18,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:18,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:18,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:18,554:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-05 11:29:18,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:18,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:18,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:18,825:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:18,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:18,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:18,910:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-05 11:29:19,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:19,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:19,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:19,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:19,244:INFO:Preparing preprocessing pipeline...
2025-06-05 11:29:19,244:INFO:Set up simple imputation.
2025-06-05 11:29:19,251:INFO:Set up encoding of categorical features.
2025-06-05 11:29:19,340:INFO:Finished creating preprocessing pipeline.
2025-06-05 11:29:19,348:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))])
2025-06-05 11:29:19,348:INFO:Creating final display dataframe.
2025-06-05 11:29:19,620:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Item_Outlet_Sales
2                   Target type         Regression
3           Original data shape         (8523, 12)
4        Transformed data shape         (8523, 12)
5   Transformed train set shape         (5966, 12)
6    Transformed test set shape         (2557, 12)
7              Numeric features                 10
8          Categorical features                  1
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13     Maximum one-hot encoding                 25
14              Encoding method               None
15               Fold Generator              KFold
16                  Fold Number                 10
17                     CPU Jobs                 -1
18                      Use GPU              False
19               Log Experiment              False
20              Experiment Name   reg-default-name
21                          USI               57c9
2025-06-05 11:29:19,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:19,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:19,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:19,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:19,948:INFO:setup() successfully completed in 3.35s...............
2025-06-05 11:29:28,762:INFO:PyCaret RegressionExperiment
2025-06-05 11:29:28,762:INFO:Logging name: reg-default-name
2025-06-05 11:29:28,763:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-05 11:29:28,763:INFO:version 3.3.2
2025-06-05 11:29:28,763:INFO:Initializing setup()
2025-06-05 11:29:28,763:INFO:self.USI: 5c1e
2025-06-05 11:29:28,763:INFO:self._variable_keys: {'_available_plots', 'exp_id', 'logging_param', 'fold_groups_param', 'data', 'y_train', 'transform_target_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'X_train', 'target_param', '_ml_usecase', 'html_param', 'X_test', 'fold_generator', 'pipeline', 'exp_name_log', 'gpu_param', 'USI', 'memory', 'y_test', 'idx', 'n_jobs_param', 'y', 'seed', 'X'}
2025-06-05 11:29:28,763:INFO:Checking environment
2025-06-05 11:29:28,763:INFO:python_version: 3.10.11
2025-06-05 11:29:28,763:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-05 11:29:28,763:INFO:machine: AMD64
2025-06-05 11:29:28,764:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-05 11:29:28,768:INFO:Memory: svmem(total=8316121088, available=1196126208, percent=85.6, used=7119994880, free=1196126208)
2025-06-05 11:29:28,768:INFO:Physical Core: 2
2025-06-05 11:29:28,768:INFO:Logical Core: 4
2025-06-05 11:29:28,768:INFO:Checking libraries
2025-06-05 11:29:28,768:INFO:System:
2025-06-05 11:29:28,768:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-05 11:29:28,768:INFO:executable: c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\Scripts\python.exe
2025-06-05 11:29:28,770:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-05 11:29:28,770:INFO:PyCaret required dependencies:
2025-06-05 11:29:28,770:INFO:                 pip: 25.1.1
2025-06-05 11:29:28,770:INFO:          setuptools: 65.5.0
2025-06-05 11:29:28,770:INFO:             pycaret: 3.3.2
2025-06-05 11:29:28,770:INFO:             IPython: 8.37.0
2025-06-05 11:29:28,770:INFO:          ipywidgets: 8.1.7
2025-06-05 11:29:28,770:INFO:                tqdm: 4.67.1
2025-06-05 11:29:28,770:INFO:               numpy: 1.26.4
2025-06-05 11:29:28,770:INFO:              pandas: 2.1.4
2025-06-05 11:29:28,770:INFO:              jinja2: 3.1.6
2025-06-05 11:29:28,770:INFO:               scipy: 1.11.4
2025-06-05 11:29:28,771:INFO:              joblib: 1.3.2
2025-06-05 11:29:28,771:INFO:             sklearn: 1.4.2
2025-06-05 11:29:28,771:INFO:                pyod: 2.0.5
2025-06-05 11:29:28,771:INFO:            imblearn: 0.13.0
2025-06-05 11:29:28,771:INFO:   category_encoders: 2.7.0
2025-06-05 11:29:28,771:INFO:            lightgbm: 4.6.0
2025-06-05 11:29:28,771:INFO:               numba: 0.61.2
2025-06-05 11:29:28,771:INFO:            requests: 2.32.3
2025-06-05 11:29:28,771:INFO:          matplotlib: 3.7.5
2025-06-05 11:29:28,771:INFO:          scikitplot: 0.3.7
2025-06-05 11:29:28,771:INFO:         yellowbrick: 1.5
2025-06-05 11:29:28,771:INFO:              plotly: 5.24.1
2025-06-05 11:29:28,771:INFO:    plotly-resampler: Not installed
2025-06-05 11:29:28,771:INFO:             kaleido: 0.2.1
2025-06-05 11:29:28,771:INFO:           schemdraw: 0.15
2025-06-05 11:29:28,771:INFO:         statsmodels: 0.14.4
2025-06-05 11:29:28,771:INFO:              sktime: 0.26.0
2025-06-05 11:29:28,772:INFO:               tbats: 1.1.3
2025-06-05 11:29:28,772:INFO:            pmdarima: 2.0.4
2025-06-05 11:29:28,772:INFO:              psutil: 7.0.0
2025-06-05 11:29:28,772:INFO:          markupsafe: 3.0.2
2025-06-05 11:29:28,772:INFO:             pickle5: Not installed
2025-06-05 11:29:28,772:INFO:         cloudpickle: 3.1.1
2025-06-05 11:29:28,772:INFO:         deprecation: 2.1.0
2025-06-05 11:29:28,772:INFO:              xxhash: 3.5.0
2025-06-05 11:29:28,772:INFO:           wurlitzer: Not installed
2025-06-05 11:29:28,772:INFO:PyCaret optional dependencies:
2025-06-05 11:29:28,773:INFO:                shap: Not installed
2025-06-05 11:29:28,773:INFO:           interpret: Not installed
2025-06-05 11:29:28,773:INFO:                umap: Not installed
2025-06-05 11:29:28,773:INFO:     ydata_profiling: Not installed
2025-06-05 11:29:28,773:INFO:  explainerdashboard: Not installed
2025-06-05 11:29:28,773:INFO:             autoviz: Not installed
2025-06-05 11:29:28,773:INFO:           fairlearn: Not installed
2025-06-05 11:29:28,773:INFO:          deepchecks: Not installed
2025-06-05 11:29:28,773:INFO:             xgboost: Not installed
2025-06-05 11:29:28,773:INFO:            catboost: Not installed
2025-06-05 11:29:28,773:INFO:              kmodes: Not installed
2025-06-05 11:29:28,773:INFO:             mlxtend: Not installed
2025-06-05 11:29:28,773:INFO:       statsforecast: Not installed
2025-06-05 11:29:28,773:INFO:        tune_sklearn: Not installed
2025-06-05 11:29:28,774:INFO:                 ray: Not installed
2025-06-05 11:29:28,774:INFO:            hyperopt: 0.2.7
2025-06-05 11:29:28,774:INFO:              optuna: 4.3.0
2025-06-05 11:29:28,774:INFO:               skopt: 0.10.2
2025-06-05 11:29:28,774:INFO:              mlflow: Not installed
2025-06-05 11:29:28,774:INFO:              gradio: Not installed
2025-06-05 11:29:28,774:INFO:             fastapi: Not installed
2025-06-05 11:29:28,774:INFO:             uvicorn: Not installed
2025-06-05 11:29:28,774:INFO:              m2cgen: Not installed
2025-06-05 11:29:28,774:INFO:           evidently: Not installed
2025-06-05 11:29:28,774:INFO:               fugue: Not installed
2025-06-05 11:29:28,774:INFO:           streamlit: 1.45.1
2025-06-05 11:29:28,774:INFO:             prophet: Not installed
2025-06-05 11:29:28,775:INFO:None
2025-06-05 11:29:28,775:INFO:Set up data.
2025-06-05 11:29:28,793:INFO:Set up folding strategy.
2025-06-05 11:29:28,793:INFO:Set up train/test split.
2025-06-05 11:29:28,808:INFO:Set up index.
2025-06-05 11:29:28,811:INFO:Assigning column types.
2025-06-05 11:29:28,822:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-05 11:29:28,823:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-05 11:29:28,830:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-05 11:29:28,840:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:28,943:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,006:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,008:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,016:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,022:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,100:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,165:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,166:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-05 11:29:29,172:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,180:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,259:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,320:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,331:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,337:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,492:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-05 11:29:29,509:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,588:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,659:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,742:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,830:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-05 11:29:29,925:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:29,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:29,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,086:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:30,175:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-05 11:29:30,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,176:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-05 11:29:30,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:30,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,543:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-05 11:29:30,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,608:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-05 11:29:30,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:30,939:INFO:Preparing preprocessing pipeline...
2025-06-05 11:29:30,939:INFO:Set up simple imputation.
2025-06-05 11:29:30,943:INFO:Set up encoding of categorical features.
2025-06-05 11:29:31,030:INFO:Finished creating preprocessing pipeline.
2025-06-05 11:29:31,040:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))])
2025-06-05 11:29:31,040:INFO:Creating final display dataframe.
2025-06-05 11:29:31,304:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Item_Outlet_Sales
2                   Target type         Regression
3           Original data shape         (8523, 12)
4        Transformed data shape         (8523, 12)
5   Transformed train set shape         (5966, 12)
6    Transformed test set shape         (2557, 12)
7              Numeric features                 10
8          Categorical features                  1
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13     Maximum one-hot encoding                 25
14              Encoding method               None
15               Fold Generator              KFold
16                  Fold Number                 10
17                     CPU Jobs                 -1
18                      Use GPU              False
19               Log Experiment              False
20              Experiment Name   reg-default-name
21                          USI               5c1e
2025-06-05 11:29:31,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:31,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:31,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:31,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-05 11:29:31,621:INFO:setup() successfully completed in 2.86s...............
2025-06-05 11:29:34,522:INFO:Initializing compare_models()
2025-06-05 11:29:34,522:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-05 11:29:34,522:INFO:Checking exceptions
2025-06-05 11:29:34,529:INFO:Preparing display monitor
2025-06-05 11:29:34,616:INFO:Initializing Linear Regression
2025-06-05 11:29:34,616:INFO:Total runtime is 0.0 minutes
2025-06-05 11:29:34,686:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:34,688:INFO:Initializing create_model()
2025-06-05 11:29:34,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:34,689:INFO:Checking exceptions
2025-06-05 11:29:34,689:INFO:Importing libraries
2025-06-05 11:29:34,690:INFO:Copying training dataset
2025-06-05 11:29:34,720:INFO:Defining folds
2025-06-05 11:29:34,720:INFO:Declaring metric variables
2025-06-05 11:29:34,727:INFO:Importing untrained model
2025-06-05 11:29:34,735:INFO:Linear Regression Imported successfully
2025-06-05 11:29:34,795:INFO:Starting cross validation
2025-06-05 11:29:34,812:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:45,768:INFO:Calculating mean and std
2025-06-05 11:29:45,773:INFO:Creating metrics dataframe
2025-06-05 11:29:45,780:INFO:Uploading results into container
2025-06-05 11:29:45,782:INFO:Uploading model into container now
2025-06-05 11:29:45,783:INFO:_master_model_container: 1
2025-06-05 11:29:45,783:INFO:_display_container: 2
2025-06-05 11:29:45,783:INFO:LinearRegression(n_jobs=-1)
2025-06-05 11:29:45,785:INFO:create_model() successfully completed......................................
2025-06-05 11:29:45,939:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:45,940:INFO:Creating metrics dataframe
2025-06-05 11:29:45,964:INFO:Initializing Lasso Regression
2025-06-05 11:29:45,964:INFO:Total runtime is 0.1891359249750773 minutes
2025-06-05 11:29:45,974:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:45,978:INFO:Initializing create_model()
2025-06-05 11:29:45,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:45,980:INFO:Checking exceptions
2025-06-05 11:29:45,981:INFO:Importing libraries
2025-06-05 11:29:45,981:INFO:Copying training dataset
2025-06-05 11:29:46,014:INFO:Defining folds
2025-06-05 11:29:46,014:INFO:Declaring metric variables
2025-06-05 11:29:46,030:INFO:Importing untrained model
2025-06-05 11:29:46,050:INFO:Lasso Regression Imported successfully
2025-06-05 11:29:46,085:INFO:Starting cross validation
2025-06-05 11:29:46,087:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:46,688:INFO:Calculating mean and std
2025-06-05 11:29:46,690:INFO:Creating metrics dataframe
2025-06-05 11:29:46,699:INFO:Uploading results into container
2025-06-05 11:29:46,700:INFO:Uploading model into container now
2025-06-05 11:29:46,701:INFO:_master_model_container: 2
2025-06-05 11:29:46,701:INFO:_display_container: 2
2025-06-05 11:29:46,702:INFO:Lasso(random_state=123)
2025-06-05 11:29:46,702:INFO:create_model() successfully completed......................................
2025-06-05 11:29:46,811:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:46,812:INFO:Creating metrics dataframe
2025-06-05 11:29:46,820:INFO:Initializing Ridge Regression
2025-06-05 11:29:46,821:INFO:Total runtime is 0.20342402458190917 minutes
2025-06-05 11:29:46,827:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:46,827:INFO:Initializing create_model()
2025-06-05 11:29:46,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:46,829:INFO:Checking exceptions
2025-06-05 11:29:46,830:INFO:Importing libraries
2025-06-05 11:29:46,830:INFO:Copying training dataset
2025-06-05 11:29:46,850:INFO:Defining folds
2025-06-05 11:29:46,851:INFO:Declaring metric variables
2025-06-05 11:29:46,866:INFO:Importing untrained model
2025-06-05 11:29:46,877:INFO:Ridge Regression Imported successfully
2025-06-05 11:29:46,891:INFO:Starting cross validation
2025-06-05 11:29:46,899:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:47,641:INFO:Calculating mean and std
2025-06-05 11:29:47,644:INFO:Creating metrics dataframe
2025-06-05 11:29:47,652:INFO:Uploading results into container
2025-06-05 11:29:47,653:INFO:Uploading model into container now
2025-06-05 11:29:47,653:INFO:_master_model_container: 3
2025-06-05 11:29:47,654:INFO:_display_container: 2
2025-06-05 11:29:47,655:INFO:Ridge(random_state=123)
2025-06-05 11:29:47,655:INFO:create_model() successfully completed......................................
2025-06-05 11:29:47,743:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:47,743:INFO:Creating metrics dataframe
2025-06-05 11:29:47,753:INFO:Initializing Elastic Net
2025-06-05 11:29:47,753:INFO:Total runtime is 0.2189463416735331 minutes
2025-06-05 11:29:47,758:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:47,761:INFO:Initializing create_model()
2025-06-05 11:29:47,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:47,762:INFO:Checking exceptions
2025-06-05 11:29:47,763:INFO:Importing libraries
2025-06-05 11:29:47,763:INFO:Copying training dataset
2025-06-05 11:29:47,779:INFO:Defining folds
2025-06-05 11:29:47,780:INFO:Declaring metric variables
2025-06-05 11:29:47,788:INFO:Importing untrained model
2025-06-05 11:29:47,795:INFO:Elastic Net Imported successfully
2025-06-05 11:29:47,817:INFO:Starting cross validation
2025-06-05 11:29:47,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:48,383:INFO:Calculating mean and std
2025-06-05 11:29:48,384:INFO:Creating metrics dataframe
2025-06-05 11:29:48,386:INFO:Uploading results into container
2025-06-05 11:29:48,387:INFO:Uploading model into container now
2025-06-05 11:29:48,389:INFO:_master_model_container: 4
2025-06-05 11:29:48,390:INFO:_display_container: 2
2025-06-05 11:29:48,390:INFO:ElasticNet(random_state=123)
2025-06-05 11:29:48,390:INFO:create_model() successfully completed......................................
2025-06-05 11:29:48,484:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:48,484:INFO:Creating metrics dataframe
2025-06-05 11:29:48,493:INFO:Initializing Least Angle Regression
2025-06-05 11:29:48,495:INFO:Total runtime is 0.23131118218104044 minutes
2025-06-05 11:29:48,502:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:48,502:INFO:Initializing create_model()
2025-06-05 11:29:48,504:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:48,505:INFO:Checking exceptions
2025-06-05 11:29:48,505:INFO:Importing libraries
2025-06-05 11:29:48,505:INFO:Copying training dataset
2025-06-05 11:29:48,519:INFO:Defining folds
2025-06-05 11:29:48,522:INFO:Declaring metric variables
2025-06-05 11:29:48,533:INFO:Importing untrained model
2025-06-05 11:29:48,538:INFO:Least Angle Regression Imported successfully
2025-06-05 11:29:48,556:INFO:Starting cross validation
2025-06-05 11:29:48,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:49,104:INFO:Calculating mean and std
2025-06-05 11:29:49,106:INFO:Creating metrics dataframe
2025-06-05 11:29:49,113:INFO:Uploading results into container
2025-06-05 11:29:49,116:INFO:Uploading model into container now
2025-06-05 11:29:49,117:INFO:_master_model_container: 5
2025-06-05 11:29:49,117:INFO:_display_container: 2
2025-06-05 11:29:49,118:INFO:Lars(random_state=123)
2025-06-05 11:29:49,118:INFO:create_model() successfully completed......................................
2025-06-05 11:29:49,203:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:49,203:INFO:Creating metrics dataframe
2025-06-05 11:29:49,215:INFO:Initializing Lasso Least Angle Regression
2025-06-05 11:29:49,215:INFO:Total runtime is 0.24331766764322915 minutes
2025-06-05 11:29:49,221:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:49,221:INFO:Initializing create_model()
2025-06-05 11:29:49,221:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:49,221:INFO:Checking exceptions
2025-06-05 11:29:49,221:INFO:Importing libraries
2025-06-05 11:29:49,221:INFO:Copying training dataset
2025-06-05 11:29:49,236:INFO:Defining folds
2025-06-05 11:29:49,236:INFO:Declaring metric variables
2025-06-05 11:29:49,252:INFO:Importing untrained model
2025-06-05 11:29:49,263:INFO:Lasso Least Angle Regression Imported successfully
2025-06-05 11:29:49,284:INFO:Starting cross validation
2025-06-05 11:29:49,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:49,843:INFO:Calculating mean and std
2025-06-05 11:29:49,846:INFO:Creating metrics dataframe
2025-06-05 11:29:49,854:INFO:Uploading results into container
2025-06-05 11:29:49,855:INFO:Uploading model into container now
2025-06-05 11:29:49,855:INFO:_master_model_container: 6
2025-06-05 11:29:49,855:INFO:_display_container: 2
2025-06-05 11:29:49,856:INFO:LassoLars(random_state=123)
2025-06-05 11:29:49,856:INFO:create_model() successfully completed......................................
2025-06-05 11:29:49,941:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:49,943:INFO:Creating metrics dataframe
2025-06-05 11:29:49,955:INFO:Initializing Orthogonal Matching Pursuit
2025-06-05 11:29:49,955:INFO:Total runtime is 0.2556527098019918 minutes
2025-06-05 11:29:49,963:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:49,963:INFO:Initializing create_model()
2025-06-05 11:29:49,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:49,964:INFO:Checking exceptions
2025-06-05 11:29:49,964:INFO:Importing libraries
2025-06-05 11:29:49,964:INFO:Copying training dataset
2025-06-05 11:29:49,982:INFO:Defining folds
2025-06-05 11:29:49,982:INFO:Declaring metric variables
2025-06-05 11:29:49,988:INFO:Importing untrained model
2025-06-05 11:29:50,002:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-05 11:29:50,021:INFO:Starting cross validation
2025-06-05 11:29:50,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:50,562:INFO:Calculating mean and std
2025-06-05 11:29:50,564:INFO:Creating metrics dataframe
2025-06-05 11:29:50,572:INFO:Uploading results into container
2025-06-05 11:29:50,573:INFO:Uploading model into container now
2025-06-05 11:29:50,574:INFO:_master_model_container: 7
2025-06-05 11:29:50,574:INFO:_display_container: 2
2025-06-05 11:29:50,574:INFO:OrthogonalMatchingPursuit()
2025-06-05 11:29:50,574:INFO:create_model() successfully completed......................................
2025-06-05 11:29:50,667:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:50,668:INFO:Creating metrics dataframe
2025-06-05 11:29:50,681:INFO:Initializing Bayesian Ridge
2025-06-05 11:29:50,681:INFO:Total runtime is 0.26774797439575193 minutes
2025-06-05 11:29:50,688:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:50,688:INFO:Initializing create_model()
2025-06-05 11:29:50,690:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:50,690:INFO:Checking exceptions
2025-06-05 11:29:50,690:INFO:Importing libraries
2025-06-05 11:29:50,690:INFO:Copying training dataset
2025-06-05 11:29:50,703:INFO:Defining folds
2025-06-05 11:29:50,703:INFO:Declaring metric variables
2025-06-05 11:29:50,718:INFO:Importing untrained model
2025-06-05 11:29:50,726:INFO:Bayesian Ridge Imported successfully
2025-06-05 11:29:50,742:INFO:Starting cross validation
2025-06-05 11:29:50,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:51,306:INFO:Calculating mean and std
2025-06-05 11:29:51,311:INFO:Creating metrics dataframe
2025-06-05 11:29:51,319:INFO:Uploading results into container
2025-06-05 11:29:51,321:INFO:Uploading model into container now
2025-06-05 11:29:51,321:INFO:_master_model_container: 8
2025-06-05 11:29:51,321:INFO:_display_container: 2
2025-06-05 11:29:51,321:INFO:BayesianRidge()
2025-06-05 11:29:51,321:INFO:create_model() successfully completed......................................
2025-06-05 11:29:51,411:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:51,411:INFO:Creating metrics dataframe
2025-06-05 11:29:51,420:INFO:Initializing Passive Aggressive Regressor
2025-06-05 11:29:51,422:INFO:Total runtime is 0.28010094165802 minutes
2025-06-05 11:29:51,431:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:51,432:INFO:Initializing create_model()
2025-06-05 11:29:51,432:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:51,432:INFO:Checking exceptions
2025-06-05 11:29:51,432:INFO:Importing libraries
2025-06-05 11:29:51,432:INFO:Copying training dataset
2025-06-05 11:29:51,446:INFO:Defining folds
2025-06-05 11:29:51,447:INFO:Declaring metric variables
2025-06-05 11:29:51,463:INFO:Importing untrained model
2025-06-05 11:29:51,471:INFO:Passive Aggressive Regressor Imported successfully
2025-06-05 11:29:51,487:INFO:Starting cross validation
2025-06-05 11:29:51,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:52,071:INFO:Calculating mean and std
2025-06-05 11:29:52,073:INFO:Creating metrics dataframe
2025-06-05 11:29:52,080:INFO:Uploading results into container
2025-06-05 11:29:52,082:INFO:Uploading model into container now
2025-06-05 11:29:52,083:INFO:_master_model_container: 9
2025-06-05 11:29:52,083:INFO:_display_container: 2
2025-06-05 11:29:52,083:INFO:PassiveAggressiveRegressor(random_state=123)
2025-06-05 11:29:52,083:INFO:create_model() successfully completed......................................
2025-06-05 11:29:52,174:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:52,174:INFO:Creating metrics dataframe
2025-06-05 11:29:52,186:INFO:Initializing Huber Regressor
2025-06-05 11:29:52,186:INFO:Total runtime is 0.29283692836761477 minutes
2025-06-05 11:29:52,191:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:52,191:INFO:Initializing create_model()
2025-06-05 11:29:52,193:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:52,194:INFO:Checking exceptions
2025-06-05 11:29:52,194:INFO:Importing libraries
2025-06-05 11:29:52,194:INFO:Copying training dataset
2025-06-05 11:29:52,212:INFO:Defining folds
2025-06-05 11:29:52,213:INFO:Declaring metric variables
2025-06-05 11:29:52,220:INFO:Importing untrained model
2025-06-05 11:29:52,229:INFO:Huber Regressor Imported successfully
2025-06-05 11:29:52,296:INFO:Starting cross validation
2025-06-05 11:29:52,300:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:52,731:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:52,782:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:52,783:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:52,847:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:53,199:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:53,222:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:53,235:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:53,278:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:53,518:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:53,546:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 11:29:53,587:INFO:Calculating mean and std
2025-06-05 11:29:53,589:INFO:Creating metrics dataframe
2025-06-05 11:29:53,596:INFO:Uploading results into container
2025-06-05 11:29:53,596:INFO:Uploading model into container now
2025-06-05 11:29:53,596:INFO:_master_model_container: 10
2025-06-05 11:29:53,598:INFO:_display_container: 2
2025-06-05 11:29:53,598:INFO:HuberRegressor()
2025-06-05 11:29:53,599:INFO:create_model() successfully completed......................................
2025-06-05 11:29:53,687:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:53,687:INFO:Creating metrics dataframe
2025-06-05 11:29:53,699:INFO:Initializing K Neighbors Regressor
2025-06-05 11:29:53,699:INFO:Total runtime is 0.31805128256479903 minutes
2025-06-05 11:29:53,707:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:53,707:INFO:Initializing create_model()
2025-06-05 11:29:53,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:53,707:INFO:Checking exceptions
2025-06-05 11:29:53,707:INFO:Importing libraries
2025-06-05 11:29:53,707:INFO:Copying training dataset
2025-06-05 11:29:53,719:INFO:Defining folds
2025-06-05 11:29:53,719:INFO:Declaring metric variables
2025-06-05 11:29:53,735:INFO:Importing untrained model
2025-06-05 11:29:53,748:INFO:K Neighbors Regressor Imported successfully
2025-06-05 11:29:53,769:INFO:Starting cross validation
2025-06-05 11:29:53,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:54,480:INFO:Calculating mean and std
2025-06-05 11:29:54,482:INFO:Creating metrics dataframe
2025-06-05 11:29:54,490:INFO:Uploading results into container
2025-06-05 11:29:54,495:INFO:Uploading model into container now
2025-06-05 11:29:54,498:INFO:_master_model_container: 11
2025-06-05 11:29:54,498:INFO:_display_container: 2
2025-06-05 11:29:54,499:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-05 11:29:54,499:INFO:create_model() successfully completed......................................
2025-06-05 11:29:54,673:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:54,673:INFO:Creating metrics dataframe
2025-06-05 11:29:54,703:INFO:Initializing Decision Tree Regressor
2025-06-05 11:29:54,703:INFO:Total runtime is 0.3347853024800619 minutes
2025-06-05 11:29:54,720:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:54,721:INFO:Initializing create_model()
2025-06-05 11:29:54,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:54,726:INFO:Checking exceptions
2025-06-05 11:29:54,728:INFO:Importing libraries
2025-06-05 11:29:54,728:INFO:Copying training dataset
2025-06-05 11:29:54,799:INFO:Defining folds
2025-06-05 11:29:54,800:INFO:Declaring metric variables
2025-06-05 11:29:54,814:INFO:Importing untrained model
2025-06-05 11:29:54,846:INFO:Decision Tree Regressor Imported successfully
2025-06-05 11:29:54,918:INFO:Starting cross validation
2025-06-05 11:29:54,920:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:29:56,071:INFO:Calculating mean and std
2025-06-05 11:29:56,078:INFO:Creating metrics dataframe
2025-06-05 11:29:56,084:INFO:Uploading results into container
2025-06-05 11:29:56,085:INFO:Uploading model into container now
2025-06-05 11:29:56,085:INFO:_master_model_container: 12
2025-06-05 11:29:56,086:INFO:_display_container: 2
2025-06-05 11:29:56,086:INFO:DecisionTreeRegressor(random_state=123)
2025-06-05 11:29:56,086:INFO:create_model() successfully completed......................................
2025-06-05 11:29:56,173:INFO:SubProcess create_model() end ==================================
2025-06-05 11:29:56,173:INFO:Creating metrics dataframe
2025-06-05 11:29:56,186:INFO:Initializing Random Forest Regressor
2025-06-05 11:29:56,186:INFO:Total runtime is 0.35949811140696214 minutes
2025-06-05 11:29:56,192:INFO:SubProcess create_model() called ==================================
2025-06-05 11:29:56,194:INFO:Initializing create_model()
2025-06-05 11:29:56,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:29:56,195:INFO:Checking exceptions
2025-06-05 11:29:56,196:INFO:Importing libraries
2025-06-05 11:29:56,196:INFO:Copying training dataset
2025-06-05 11:29:56,204:INFO:Defining folds
2025-06-05 11:29:56,204:INFO:Declaring metric variables
2025-06-05 11:29:56,217:INFO:Importing untrained model
2025-06-05 11:29:56,231:INFO:Random Forest Regressor Imported successfully
2025-06-05 11:29:56,252:INFO:Starting cross validation
2025-06-05 11:29:56,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:30:20,926:INFO:Calculating mean and std
2025-06-05 11:30:20,932:INFO:Creating metrics dataframe
2025-06-05 11:30:20,940:INFO:Uploading results into container
2025-06-05 11:30:20,947:INFO:Uploading model into container now
2025-06-05 11:30:20,948:INFO:_master_model_container: 13
2025-06-05 11:30:20,948:INFO:_display_container: 2
2025-06-05 11:30:20,949:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-06-05 11:30:20,949:INFO:create_model() successfully completed......................................
2025-06-05 11:30:21,097:INFO:SubProcess create_model() end ==================================
2025-06-05 11:30:21,097:INFO:Creating metrics dataframe
2025-06-05 11:30:21,125:INFO:Initializing Extra Trees Regressor
2025-06-05 11:30:21,125:INFO:Total runtime is 0.7751559098561606 minutes
2025-06-05 11:30:21,134:INFO:SubProcess create_model() called ==================================
2025-06-05 11:30:21,136:INFO:Initializing create_model()
2025-06-05 11:30:21,136:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:30:21,137:INFO:Checking exceptions
2025-06-05 11:30:21,137:INFO:Importing libraries
2025-06-05 11:30:21,137:INFO:Copying training dataset
2025-06-05 11:30:21,165:INFO:Defining folds
2025-06-05 11:30:21,166:INFO:Declaring metric variables
2025-06-05 11:30:21,179:INFO:Importing untrained model
2025-06-05 11:30:21,187:INFO:Extra Trees Regressor Imported successfully
2025-06-05 11:30:21,217:INFO:Starting cross validation
2025-06-05 11:30:21,220:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:30:34,083:INFO:Calculating mean and std
2025-06-05 11:30:34,093:INFO:Creating metrics dataframe
2025-06-05 11:30:34,103:INFO:Uploading results into container
2025-06-05 11:30:34,106:INFO:Uploading model into container now
2025-06-05 11:30:34,107:INFO:_master_model_container: 14
2025-06-05 11:30:34,107:INFO:_display_container: 2
2025-06-05 11:30:34,108:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-06-05 11:30:34,108:INFO:create_model() successfully completed......................................
2025-06-05 11:30:34,251:INFO:SubProcess create_model() end ==================================
2025-06-05 11:30:34,252:INFO:Creating metrics dataframe
2025-06-05 11:30:34,277:INFO:Initializing AdaBoost Regressor
2025-06-05 11:30:34,277:INFO:Total runtime is 0.9943506995836895 minutes
2025-06-05 11:30:34,288:INFO:SubProcess create_model() called ==================================
2025-06-05 11:30:34,288:INFO:Initializing create_model()
2025-06-05 11:30:34,289:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:30:34,289:INFO:Checking exceptions
2025-06-05 11:30:34,289:INFO:Importing libraries
2025-06-05 11:30:34,289:INFO:Copying training dataset
2025-06-05 11:30:34,315:INFO:Defining folds
2025-06-05 11:30:34,315:INFO:Declaring metric variables
2025-06-05 11:30:34,329:INFO:Importing untrained model
2025-06-05 11:30:34,340:INFO:AdaBoost Regressor Imported successfully
2025-06-05 11:30:34,361:INFO:Starting cross validation
2025-06-05 11:30:34,365:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:30:37,015:INFO:Calculating mean and std
2025-06-05 11:30:37,017:INFO:Creating metrics dataframe
2025-06-05 11:30:37,032:INFO:Uploading results into container
2025-06-05 11:30:37,033:INFO:Uploading model into container now
2025-06-05 11:30:37,034:INFO:_master_model_container: 15
2025-06-05 11:30:37,035:INFO:_display_container: 2
2025-06-05 11:30:37,035:INFO:AdaBoostRegressor(random_state=123)
2025-06-05 11:30:37,035:INFO:create_model() successfully completed......................................
2025-06-05 11:30:37,141:INFO:SubProcess create_model() end ==================================
2025-06-05 11:30:37,142:INFO:Creating metrics dataframe
2025-06-05 11:30:37,166:INFO:Initializing Gradient Boosting Regressor
2025-06-05 11:30:37,166:INFO:Total runtime is 1.0424945791562399 minutes
2025-06-05 11:30:37,384:INFO:SubProcess create_model() called ==================================
2025-06-05 11:30:37,384:INFO:Initializing create_model()
2025-06-05 11:30:37,387:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:30:37,388:INFO:Checking exceptions
2025-06-05 11:30:37,388:INFO:Importing libraries
2025-06-05 11:30:37,388:INFO:Copying training dataset
2025-06-05 11:30:37,411:INFO:Defining folds
2025-06-05 11:30:37,411:INFO:Declaring metric variables
2025-06-05 11:30:37,485:INFO:Importing untrained model
2025-06-05 11:30:37,509:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 11:30:37,539:INFO:Starting cross validation
2025-06-05 11:30:37,542:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:30:46,152:INFO:Calculating mean and std
2025-06-05 11:30:46,157:INFO:Creating metrics dataframe
2025-06-05 11:30:46,164:INFO:Uploading results into container
2025-06-05 11:30:46,167:INFO:Uploading model into container now
2025-06-05 11:30:46,170:INFO:_master_model_container: 16
2025-06-05 11:30:46,170:INFO:_display_container: 2
2025-06-05 11:30:46,171:INFO:GradientBoostingRegressor(random_state=123)
2025-06-05 11:30:46,172:INFO:create_model() successfully completed......................................
2025-06-05 11:30:46,328:INFO:SubProcess create_model() end ==================================
2025-06-05 11:30:46,330:INFO:Creating metrics dataframe
2025-06-05 11:30:46,364:INFO:Initializing Light Gradient Boosting Machine
2025-06-05 11:30:46,364:INFO:Total runtime is 1.195796859264374 minutes
2025-06-05 11:30:46,375:INFO:SubProcess create_model() called ==================================
2025-06-05 11:30:46,376:INFO:Initializing create_model()
2025-06-05 11:30:46,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:30:46,377:INFO:Checking exceptions
2025-06-05 11:30:46,377:INFO:Importing libraries
2025-06-05 11:30:46,377:INFO:Copying training dataset
2025-06-05 11:30:46,411:INFO:Defining folds
2025-06-05 11:30:46,412:INFO:Declaring metric variables
2025-06-05 11:30:46,421:INFO:Importing untrained model
2025-06-05 11:30:46,439:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-05 11:30:46,473:INFO:Starting cross validation
2025-06-05 11:30:46,476:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:30:50,837:INFO:Calculating mean and std
2025-06-05 11:30:50,843:INFO:Creating metrics dataframe
2025-06-05 11:30:50,855:INFO:Uploading results into container
2025-06-05 11:30:50,857:INFO:Uploading model into container now
2025-06-05 11:30:50,859:INFO:_master_model_container: 17
2025-06-05 11:30:50,859:INFO:_display_container: 2
2025-06-05 11:30:50,860:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-06-05 11:30:50,861:INFO:create_model() successfully completed......................................
2025-06-05 11:30:51,127:INFO:SubProcess create_model() end ==================================
2025-06-05 11:30:51,128:INFO:Creating metrics dataframe
2025-06-05 11:30:51,198:INFO:Initializing Dummy Regressor
2025-06-05 11:30:51,198:INFO:Total runtime is 1.2763610164324444 minutes
2025-06-05 11:30:51,220:INFO:SubProcess create_model() called ==================================
2025-06-05 11:30:51,221:INFO:Initializing create_model()
2025-06-05 11:30:51,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001687363B7C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:30:51,223:INFO:Checking exceptions
2025-06-05 11:30:51,223:INFO:Importing libraries
2025-06-05 11:30:51,224:INFO:Copying training dataset
2025-06-05 11:30:51,277:INFO:Defining folds
2025-06-05 11:30:51,278:INFO:Declaring metric variables
2025-06-05 11:30:51,300:INFO:Importing untrained model
2025-06-05 11:30:51,350:INFO:Dummy Regressor Imported successfully
2025-06-05 11:30:51,387:INFO:Starting cross validation
2025-06-05 11:30:51,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:30:52,174:INFO:Calculating mean and std
2025-06-05 11:30:52,181:INFO:Creating metrics dataframe
2025-06-05 11:30:52,196:INFO:Uploading results into container
2025-06-05 11:30:52,197:INFO:Uploading model into container now
2025-06-05 11:30:52,204:INFO:_master_model_container: 18
2025-06-05 11:30:52,205:INFO:_display_container: 2
2025-06-05 11:30:52,205:INFO:DummyRegressor()
2025-06-05 11:30:52,205:INFO:create_model() successfully completed......................................
2025-06-05 11:30:52,397:INFO:SubProcess create_model() end ==================================
2025-06-05 11:30:52,397:INFO:Creating metrics dataframe
2025-06-05 11:30:52,504:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-05 11:30:52,599:INFO:Initializing create_model()
2025-06-05 11:30:52,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:30:52,602:INFO:Checking exceptions
2025-06-05 11:30:52,607:INFO:Importing libraries
2025-06-05 11:30:52,608:INFO:Copying training dataset
2025-06-05 11:30:52,663:INFO:Defining folds
2025-06-05 11:30:52,663:INFO:Declaring metric variables
2025-06-05 11:30:52,663:INFO:Importing untrained model
2025-06-05 11:30:52,663:INFO:Declaring custom model
2025-06-05 11:30:52,665:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 11:30:52,670:INFO:Cross validation set to False
2025-06-05 11:30:52,670:INFO:Fitting Model
2025-06-05 11:30:55,032:INFO:GradientBoostingRegressor(random_state=123)
2025-06-05 11:30:55,033:INFO:create_model() successfully completed......................................
2025-06-05 11:30:55,361:INFO:_master_model_container: 18
2025-06-05 11:30:55,362:INFO:_display_container: 2
2025-06-05 11:30:55,364:INFO:GradientBoostingRegressor(random_state=123)
2025-06-05 11:30:55,364:INFO:compare_models() successfully completed......................................
2025-06-05 11:31:13,062:INFO:Initializing tune_model()
2025-06-05 11:31:13,062:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>)
2025-06-05 11:31:13,063:INFO:Checking exceptions
2025-06-05 11:31:13,064:INFO:Soft dependency imported: skopt: 0.10.2
2025-06-05 11:31:13,283:INFO:Copying training dataset
2025-06-05 11:31:13,330:INFO:Checking base model
2025-06-05 11:31:13,330:INFO:Base model : Gradient Boosting Regressor
2025-06-05 11:31:13,359:INFO:Declaring metric variables
2025-06-05 11:31:13,372:INFO:Defining Hyperparameters
2025-06-05 11:31:13,678:INFO:Tuning with n_jobs=-1
2025-06-05 11:31:13,727:INFO:Initializing skopt.BayesSearchCV
2025-06-05 11:32:32,761:INFO:best_params: OrderedDict([('actual_estimator__learning_rate', 0.0238190072917794), ('actual_estimator__max_depth', 3), ('actual_estimator__max_features', 0.4284489606984907), ('actual_estimator__min_impurity_decrease', 0.002646746704757545), ('actual_estimator__min_samples_leaf', 5), ('actual_estimator__min_samples_split', 9), ('actual_estimator__n_estimators', 239), ('actual_estimator__subsample', 0.7687727671549709)])
2025-06-05 11:32:32,762:INFO:Hyperparameter search completed
2025-06-05 11:32:32,762:INFO:SubProcess create_model() called ==================================
2025-06-05 11:32:32,763:INFO:Initializing create_model()
2025-06-05 11:32:32,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016873161960>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'learning_rate': 0.0238190072917794, 'max_depth': 3, 'max_features': 0.4284489606984907, 'min_impurity_decrease': 0.002646746704757545, 'min_samples_leaf': 5, 'min_samples_split': 9, 'n_estimators': 239, 'subsample': 0.7687727671549709})
2025-06-05 11:32:32,767:INFO:Checking exceptions
2025-06-05 11:32:32,767:INFO:Importing libraries
2025-06-05 11:32:32,767:INFO:Copying training dataset
2025-06-05 11:32:32,796:INFO:Defining folds
2025-06-05 11:32:32,796:INFO:Declaring metric variables
2025-06-05 11:32:32,803:INFO:Importing untrained model
2025-06-05 11:32:32,805:INFO:Declaring custom model
2025-06-05 11:32:32,816:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 11:32:32,843:INFO:Starting cross validation
2025-06-05 11:32:32,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:32:40,521:INFO:Calculating mean and std
2025-06-05 11:32:40,525:INFO:Creating metrics dataframe
2025-06-05 11:32:40,548:INFO:Finalizing model
2025-06-05 11:32:43,014:INFO:Uploading results into container
2025-06-05 11:32:43,016:INFO:Uploading model into container now
2025-06-05 11:32:43,017:INFO:_master_model_container: 19
2025-06-05 11:32:43,019:INFO:_display_container: 3
2025-06-05 11:32:43,023:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-05 11:32:43,023:INFO:create_model() successfully completed......................................
2025-06-05 11:32:43,188:INFO:SubProcess create_model() end ==================================
2025-06-05 11:32:43,189:INFO:choose_better activated
2025-06-05 11:32:43,200:INFO:SubProcess create_model() called ==================================
2025-06-05 11:32:43,201:INFO:Initializing create_model()
2025-06-05 11:32:43,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:32:43,202:INFO:Checking exceptions
2025-06-05 11:32:43,207:INFO:Importing libraries
2025-06-05 11:32:43,207:INFO:Copying training dataset
2025-06-05 11:32:43,233:INFO:Defining folds
2025-06-05 11:32:43,234:INFO:Declaring metric variables
2025-06-05 11:32:43,234:INFO:Importing untrained model
2025-06-05 11:32:43,234:INFO:Declaring custom model
2025-06-05 11:32:43,235:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 11:32:43,235:INFO:Starting cross validation
2025-06-05 11:32:43,237:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 11:32:51,189:INFO:Calculating mean and std
2025-06-05 11:32:51,190:INFO:Creating metrics dataframe
2025-06-05 11:32:51,192:INFO:Finalizing model
2025-06-05 11:32:53,590:INFO:Uploading results into container
2025-06-05 11:32:53,592:INFO:Uploading model into container now
2025-06-05 11:32:53,593:INFO:_master_model_container: 20
2025-06-05 11:32:53,593:INFO:_display_container: 4
2025-06-05 11:32:53,594:INFO:GradientBoostingRegressor(random_state=123)
2025-06-05 11:32:53,594:INFO:create_model() successfully completed......................................
2025-06-05 11:32:53,726:INFO:SubProcess create_model() end ==================================
2025-06-05 11:32:53,726:INFO:GradientBoostingRegressor(random_state=123) result for RMSE is 1260.5197
2025-06-05 11:32:53,729:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) result for RMSE is 1216.7124
2025-06-05 11:32:53,730:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) is best model
2025-06-05 11:32:53,730:INFO:choose_better completed
2025-06-05 11:32:53,764:INFO:_master_model_container: 20
2025-06-05 11:32:53,764:INFO:_display_container: 3
2025-06-05 11:32:53,766:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-05 11:32:53,767:INFO:tune_model() successfully completed......................................
2025-06-05 11:33:19,089:INFO:Initializing finalize_model()
2025-06-05 11:33:19,090:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-05 11:33:19,091:INFO:Finalizing GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-05 11:33:19,105:INFO:Initializing create_model()
2025-06-05 11:33:19,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 11:33:19,105:INFO:Checking exceptions
2025-06-05 11:33:19,110:INFO:Importing libraries
2025-06-05 11:33:19,110:INFO:Copying training dataset
2025-06-05 11:33:19,111:INFO:Defining folds
2025-06-05 11:33:19,112:INFO:Declaring metric variables
2025-06-05 11:33:19,112:INFO:Importing untrained model
2025-06-05 11:33:19,112:INFO:Declaring custom model
2025-06-05 11:33:19,114:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 11:33:19,118:INFO:Cross validation set to False
2025-06-05 11:33:19,118:INFO:Fitting Model
2025-06-05 11:33:22,344:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-05 11:33:22,344:INFO:create_model() successfully completed......................................
2025-06-05 11:33:22,492:INFO:_master_model_container: 20
2025-06-05 11:33:22,492:INFO:_display_container: 3
2025-06-05 11:33:22,524:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-05 11:33:22,524:INFO:finalize_model() successfully completed......................................
2025-06-05 11:33:22,692:INFO:Initializing save_model()
2025-06-05 11:33:22,692:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), model_name=bigmart_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-05 11:33:22,692:INFO:Adding model into prep_pipe
2025-06-05 11:33:22,693:WARNING:Only Model saved as it was a pipeline.
2025-06-05 11:33:22,734:INFO:bigmart_best_model.pkl saved in current working directory
2025-06-05 11:33:22,760:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-05 11:33:22,760:INFO:save_model() successfully completed......................................
2025-06-05 11:35:02,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:35:02,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:35:02,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:35:02,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:35:03,164:INFO:Initializing load_model()
2025-06-05 11:35:03,165:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:20,221:INFO:Initializing load_model()
2025-06-05 11:35:20,222:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:22,507:INFO:Initializing load_model()
2025-06-05 11:35:22,507:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:24,895:INFO:Initializing load_model()
2025-06-05 11:35:24,895:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:30,219:INFO:Initializing load_model()
2025-06-05 11:35:30,220:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:38,838:INFO:Initializing load_model()
2025-06-05 11:35:38,839:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:44,824:INFO:Initializing load_model()
2025-06-05 11:35:44,824:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:51,791:INFO:Initializing load_model()
2025-06-05 11:35:51,793:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:54,357:INFO:Initializing load_model()
2025-06-05 11:35:54,357:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:55,553:INFO:Initializing load_model()
2025-06-05 11:35:55,554:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:35:55,998:INFO:Initializing predict_model()
2025-06-05 11:35:55,999:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C20EAC9B70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C22362A7A0>)
2025-06-05 11:35:55,999:INFO:Checking exceptions
2025-06-05 11:35:55,999:INFO:Preloading libraries
2025-06-05 11:35:56,000:INFO:Set up data.
2025-06-05 11:35:56,023:INFO:Set up index.
2025-06-05 11:42:04,861:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:42:04,861:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:42:04,861:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:42:04,861:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 11:42:05,441:INFO:Initializing load_model()
2025-06-05 11:42:05,441:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:42:43,987:INFO:Initializing load_model()
2025-06-05 11:42:43,988:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:42:44,306:WARNING:C:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\app.py:59: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  full_df = pd.concat([combined_df, input_data], ignore_index=True)

2025-06-05 11:42:51,673:INFO:Initializing load_model()
2025-06-05 11:42:51,674:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:42:56,363:INFO:Initializing load_model()
2025-06-05 11:42:56,364:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:00,338:INFO:Initializing load_model()
2025-06-05 11:43:00,339:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:05,104:INFO:Initializing load_model()
2025-06-05 11:43:05,105:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:10,944:INFO:Initializing load_model()
2025-06-05 11:43:10,946:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:15,168:INFO:Initializing load_model()
2025-06-05 11:43:15,169:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:23,046:INFO:Initializing load_model()
2025-06-05 11:43:23,046:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:26,484:INFO:Initializing load_model()
2025-06-05 11:43:26,484:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:27,781:INFO:Initializing load_model()
2025-06-05 11:43:27,783:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:49,264:INFO:Initializing load_model()
2025-06-05 11:43:49,270:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:51,430:INFO:Initializing load_model()
2025-06-05 11:43:51,431:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:55,797:INFO:Initializing load_model()
2025-06-05 11:43:55,799:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:56,313:INFO:Initializing load_model()
2025-06-05 11:43:56,314:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 11:43:58,659:INFO:Initializing load_model()
2025-06-05 11:43:58,660:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:00:51,770:INFO:Initializing compare_models()
2025-06-05 12:00:51,773:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-05 12:00:51,774:INFO:Checking exceptions
2025-06-05 12:00:51,820:INFO:Preparing display monitor
2025-06-05 12:00:51,916:INFO:Initializing Linear Regression
2025-06-05 12:00:51,917:INFO:Total runtime is 1.6641616821289062e-05 minutes
2025-06-05 12:00:51,938:INFO:SubProcess create_model() called ==================================
2025-06-05 12:00:51,940:INFO:Initializing create_model()
2025-06-05 12:00:51,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:00:51,941:INFO:Checking exceptions
2025-06-05 12:00:51,944:INFO:Importing libraries
2025-06-05 12:00:51,944:INFO:Copying training dataset
2025-06-05 12:00:51,985:INFO:Defining folds
2025-06-05 12:00:51,986:INFO:Declaring metric variables
2025-06-05 12:00:52,002:INFO:Importing untrained model
2025-06-05 12:00:52,018:INFO:Linear Regression Imported successfully
2025-06-05 12:00:52,040:INFO:Starting cross validation
2025-06-05 12:00:52,048:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:00,456:INFO:Calculating mean and std
2025-06-05 12:01:00,460:INFO:Creating metrics dataframe
2025-06-05 12:01:00,469:INFO:Uploading results into container
2025-06-05 12:01:00,474:INFO:Uploading model into container now
2025-06-05 12:01:00,483:INFO:_master_model_container: 21
2025-06-05 12:01:00,487:INFO:_display_container: 4
2025-06-05 12:01:00,494:INFO:LinearRegression(n_jobs=-1)
2025-06-05 12:01:00,495:INFO:create_model() successfully completed......................................
2025-06-05 12:01:00,875:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:00,875:INFO:Creating metrics dataframe
2025-06-05 12:01:00,884:INFO:Initializing Lasso Regression
2025-06-05 12:01:00,884:INFO:Total runtime is 0.1494803587595622 minutes
2025-06-05 12:01:00,892:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:00,894:INFO:Initializing create_model()
2025-06-05 12:01:00,894:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:00,894:INFO:Checking exceptions
2025-06-05 12:01:00,894:INFO:Importing libraries
2025-06-05 12:01:00,894:INFO:Copying training dataset
2025-06-05 12:01:00,918:INFO:Defining folds
2025-06-05 12:01:00,918:INFO:Declaring metric variables
2025-06-05 12:01:00,932:INFO:Importing untrained model
2025-06-05 12:01:00,948:INFO:Lasso Regression Imported successfully
2025-06-05 12:01:00,971:INFO:Starting cross validation
2025-06-05 12:01:00,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:01,468:INFO:Calculating mean and std
2025-06-05 12:01:01,471:INFO:Creating metrics dataframe
2025-06-05 12:01:01,475:INFO:Uploading results into container
2025-06-05 12:01:01,476:INFO:Uploading model into container now
2025-06-05 12:01:01,476:INFO:_master_model_container: 22
2025-06-05 12:01:01,477:INFO:_display_container: 4
2025-06-05 12:01:01,478:INFO:Lasso(random_state=123)
2025-06-05 12:01:01,479:INFO:create_model() successfully completed......................................
2025-06-05 12:01:01,574:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:01,574:INFO:Creating metrics dataframe
2025-06-05 12:01:01,586:INFO:Initializing Ridge Regression
2025-06-05 12:01:01,587:INFO:Total runtime is 0.16117490132649742 minutes
2025-06-05 12:01:01,595:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:01,595:INFO:Initializing create_model()
2025-06-05 12:01:01,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:01,596:INFO:Checking exceptions
2025-06-05 12:01:01,596:INFO:Importing libraries
2025-06-05 12:01:01,596:INFO:Copying training dataset
2025-06-05 12:01:01,613:INFO:Defining folds
2025-06-05 12:01:01,613:INFO:Declaring metric variables
2025-06-05 12:01:01,626:INFO:Importing untrained model
2025-06-05 12:01:01,638:INFO:Ridge Regression Imported successfully
2025-06-05 12:01:01,660:INFO:Starting cross validation
2025-06-05 12:01:01,662:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:02,249:INFO:Calculating mean and std
2025-06-05 12:01:02,251:INFO:Creating metrics dataframe
2025-06-05 12:01:02,260:INFO:Uploading results into container
2025-06-05 12:01:02,260:INFO:Uploading model into container now
2025-06-05 12:01:02,261:INFO:_master_model_container: 23
2025-06-05 12:01:02,261:INFO:_display_container: 4
2025-06-05 12:01:02,261:INFO:Ridge(random_state=123)
2025-06-05 12:01:02,261:INFO:create_model() successfully completed......................................
2025-06-05 12:01:02,363:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:02,363:INFO:Creating metrics dataframe
2025-06-05 12:01:02,376:INFO:Initializing Elastic Net
2025-06-05 12:01:02,376:INFO:Total runtime is 0.174331271648407 minutes
2025-06-05 12:01:02,382:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:02,383:INFO:Initializing create_model()
2025-06-05 12:01:02,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:02,383:INFO:Checking exceptions
2025-06-05 12:01:02,384:INFO:Importing libraries
2025-06-05 12:01:02,384:INFO:Copying training dataset
2025-06-05 12:01:02,398:INFO:Defining folds
2025-06-05 12:01:02,398:INFO:Declaring metric variables
2025-06-05 12:01:02,414:INFO:Importing untrained model
2025-06-05 12:01:02,427:INFO:Elastic Net Imported successfully
2025-06-05 12:01:02,450:INFO:Starting cross validation
2025-06-05 12:01:02,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:03,058:INFO:Calculating mean and std
2025-06-05 12:01:03,060:INFO:Creating metrics dataframe
2025-06-05 12:01:03,073:INFO:Uploading results into container
2025-06-05 12:01:03,076:INFO:Uploading model into container now
2025-06-05 12:01:03,078:INFO:_master_model_container: 24
2025-06-05 12:01:03,078:INFO:_display_container: 4
2025-06-05 12:01:03,078:INFO:ElasticNet(random_state=123)
2025-06-05 12:01:03,079:INFO:create_model() successfully completed......................................
2025-06-05 12:01:03,189:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:03,189:INFO:Creating metrics dataframe
2025-06-05 12:01:03,200:INFO:Initializing Least Angle Regression
2025-06-05 12:01:03,200:INFO:Total runtime is 0.18807595968246463 minutes
2025-06-05 12:01:03,209:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:03,209:INFO:Initializing create_model()
2025-06-05 12:01:03,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:03,209:INFO:Checking exceptions
2025-06-05 12:01:03,210:INFO:Importing libraries
2025-06-05 12:01:03,210:INFO:Copying training dataset
2025-06-05 12:01:03,221:INFO:Defining folds
2025-06-05 12:01:03,221:INFO:Declaring metric variables
2025-06-05 12:01:03,241:INFO:Importing untrained model
2025-06-05 12:01:03,253:INFO:Least Angle Regression Imported successfully
2025-06-05 12:01:03,295:INFO:Starting cross validation
2025-06-05 12:01:03,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:04,369:INFO:Calculating mean and std
2025-06-05 12:01:04,384:INFO:Creating metrics dataframe
2025-06-05 12:01:04,390:INFO:Uploading results into container
2025-06-05 12:01:04,391:INFO:Uploading model into container now
2025-06-05 12:01:04,391:INFO:_master_model_container: 25
2025-06-05 12:01:04,392:INFO:_display_container: 4
2025-06-05 12:01:04,392:INFO:Lars(random_state=123)
2025-06-05 12:01:04,392:INFO:create_model() successfully completed......................................
2025-06-05 12:01:04,547:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:04,547:INFO:Creating metrics dataframe
2025-06-05 12:01:04,561:INFO:Initializing Lasso Least Angle Regression
2025-06-05 12:01:04,561:INFO:Total runtime is 0.21074792941411338 minutes
2025-06-05 12:01:04,566:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:04,566:INFO:Initializing create_model()
2025-06-05 12:01:04,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:04,566:INFO:Checking exceptions
2025-06-05 12:01:04,566:INFO:Importing libraries
2025-06-05 12:01:04,566:INFO:Copying training dataset
2025-06-05 12:01:04,582:INFO:Defining folds
2025-06-05 12:01:04,582:INFO:Declaring metric variables
2025-06-05 12:01:04,592:INFO:Importing untrained model
2025-06-05 12:01:04,599:INFO:Lasso Least Angle Regression Imported successfully
2025-06-05 12:01:04,610:INFO:Starting cross validation
2025-06-05 12:01:04,612:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:05,311:INFO:Calculating mean and std
2025-06-05 12:01:05,313:INFO:Creating metrics dataframe
2025-06-05 12:01:05,315:INFO:Uploading results into container
2025-06-05 12:01:05,316:INFO:Uploading model into container now
2025-06-05 12:01:05,316:INFO:_master_model_container: 26
2025-06-05 12:01:05,316:INFO:_display_container: 4
2025-06-05 12:01:05,317:INFO:LassoLars(random_state=123)
2025-06-05 12:01:05,319:INFO:create_model() successfully completed......................................
2025-06-05 12:01:05,421:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:05,422:INFO:Creating metrics dataframe
2025-06-05 12:01:05,438:INFO:Initializing Orthogonal Matching Pursuit
2025-06-05 12:01:05,438:INFO:Total runtime is 0.22536750237147016 minutes
2025-06-05 12:01:05,443:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:05,444:INFO:Initializing create_model()
2025-06-05 12:01:05,444:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:05,444:INFO:Checking exceptions
2025-06-05 12:01:05,444:INFO:Importing libraries
2025-06-05 12:01:05,445:INFO:Copying training dataset
2025-06-05 12:01:05,457:INFO:Defining folds
2025-06-05 12:01:05,457:INFO:Declaring metric variables
2025-06-05 12:01:05,474:INFO:Importing untrained model
2025-06-05 12:01:05,487:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-05 12:01:05,512:INFO:Starting cross validation
2025-06-05 12:01:05,515:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:05,983:INFO:Calculating mean and std
2025-06-05 12:01:05,987:INFO:Creating metrics dataframe
2025-06-05 12:01:05,995:INFO:Uploading results into container
2025-06-05 12:01:05,996:INFO:Uploading model into container now
2025-06-05 12:01:05,996:INFO:_master_model_container: 27
2025-06-05 12:01:05,996:INFO:_display_container: 4
2025-06-05 12:01:05,997:INFO:OrthogonalMatchingPursuit()
2025-06-05 12:01:05,997:INFO:create_model() successfully completed......................................
2025-06-05 12:01:06,106:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:06,106:INFO:Creating metrics dataframe
2025-06-05 12:01:06,121:INFO:Initializing Bayesian Ridge
2025-06-05 12:01:06,121:INFO:Total runtime is 0.23675345182418825 minutes
2025-06-05 12:01:06,128:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:06,128:INFO:Initializing create_model()
2025-06-05 12:01:06,128:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:06,128:INFO:Checking exceptions
2025-06-05 12:01:06,128:INFO:Importing libraries
2025-06-05 12:01:06,129:INFO:Copying training dataset
2025-06-05 12:01:06,138:INFO:Defining folds
2025-06-05 12:01:06,138:INFO:Declaring metric variables
2025-06-05 12:01:06,147:INFO:Importing untrained model
2025-06-05 12:01:06,163:INFO:Bayesian Ridge Imported successfully
2025-06-05 12:01:06,182:INFO:Starting cross validation
2025-06-05 12:01:06,189:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:06,921:INFO:Calculating mean and std
2025-06-05 12:01:06,923:INFO:Creating metrics dataframe
2025-06-05 12:01:06,927:INFO:Uploading results into container
2025-06-05 12:01:06,928:INFO:Uploading model into container now
2025-06-05 12:01:06,929:INFO:_master_model_container: 28
2025-06-05 12:01:06,929:INFO:_display_container: 4
2025-06-05 12:01:06,930:INFO:BayesianRidge()
2025-06-05 12:01:06,930:INFO:create_model() successfully completed......................................
2025-06-05 12:01:07,033:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:07,034:INFO:Creating metrics dataframe
2025-06-05 12:01:07,050:INFO:Initializing Passive Aggressive Regressor
2025-06-05 12:01:07,050:INFO:Total runtime is 0.25224672555923466 minutes
2025-06-05 12:01:07,061:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:07,061:INFO:Initializing create_model()
2025-06-05 12:01:07,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:07,061:INFO:Checking exceptions
2025-06-05 12:01:07,062:INFO:Importing libraries
2025-06-05 12:01:07,062:INFO:Copying training dataset
2025-06-05 12:01:07,079:INFO:Defining folds
2025-06-05 12:01:07,079:INFO:Declaring metric variables
2025-06-05 12:01:07,087:INFO:Importing untrained model
2025-06-05 12:01:07,114:INFO:Passive Aggressive Regressor Imported successfully
2025-06-05 12:01:07,161:INFO:Starting cross validation
2025-06-05 12:01:07,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:07,890:INFO:Calculating mean and std
2025-06-05 12:01:07,892:INFO:Creating metrics dataframe
2025-06-05 12:01:07,898:INFO:Uploading results into container
2025-06-05 12:01:07,899:INFO:Uploading model into container now
2025-06-05 12:01:07,900:INFO:_master_model_container: 29
2025-06-05 12:01:07,901:INFO:_display_container: 4
2025-06-05 12:01:07,902:INFO:PassiveAggressiveRegressor(random_state=123)
2025-06-05 12:01:07,903:INFO:create_model() successfully completed......................................
2025-06-05 12:01:08,002:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:08,002:INFO:Creating metrics dataframe
2025-06-05 12:01:08,015:INFO:Initializing Huber Regressor
2025-06-05 12:01:08,015:INFO:Total runtime is 0.26832054853439335 minutes
2025-06-05 12:01:08,022:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:08,022:INFO:Initializing create_model()
2025-06-05 12:01:08,024:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:08,024:INFO:Checking exceptions
2025-06-05 12:01:08,024:INFO:Importing libraries
2025-06-05 12:01:08,024:INFO:Copying training dataset
2025-06-05 12:01:08,041:INFO:Defining folds
2025-06-05 12:01:08,043:INFO:Declaring metric variables
2025-06-05 12:01:08,071:INFO:Importing untrained model
2025-06-05 12:01:08,082:INFO:Huber Regressor Imported successfully
2025-06-05 12:01:08,103:INFO:Starting cross validation
2025-06-05 12:01:08,108:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:08,537:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:08,578:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:08,592:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:08,607:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:08,848:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:08,894:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:08,924:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:08,926:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:09,106:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:09,143:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-05 12:01:09,186:INFO:Calculating mean and std
2025-06-05 12:01:09,190:INFO:Creating metrics dataframe
2025-06-05 12:01:09,202:INFO:Uploading results into container
2025-06-05 12:01:09,204:INFO:Uploading model into container now
2025-06-05 12:01:09,206:INFO:_master_model_container: 30
2025-06-05 12:01:09,206:INFO:_display_container: 4
2025-06-05 12:01:09,207:INFO:HuberRegressor()
2025-06-05 12:01:09,207:INFO:create_model() successfully completed......................................
2025-06-05 12:01:09,355:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:09,355:INFO:Creating metrics dataframe
2025-06-05 12:01:09,366:INFO:Initializing K Neighbors Regressor
2025-06-05 12:01:09,366:INFO:Total runtime is 0.29083487987518314 minutes
2025-06-05 12:01:09,374:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:09,375:INFO:Initializing create_model()
2025-06-05 12:01:09,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:09,376:INFO:Checking exceptions
2025-06-05 12:01:09,376:INFO:Importing libraries
2025-06-05 12:01:09,377:INFO:Copying training dataset
2025-06-05 12:01:09,386:INFO:Defining folds
2025-06-05 12:01:09,387:INFO:Declaring metric variables
2025-06-05 12:01:09,396:INFO:Importing untrained model
2025-06-05 12:01:09,409:INFO:K Neighbors Regressor Imported successfully
2025-06-05 12:01:09,436:INFO:Starting cross validation
2025-06-05 12:01:09,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:10,216:INFO:Calculating mean and std
2025-06-05 12:01:10,218:INFO:Creating metrics dataframe
2025-06-05 12:01:10,227:INFO:Uploading results into container
2025-06-05 12:01:10,228:INFO:Uploading model into container now
2025-06-05 12:01:10,228:INFO:_master_model_container: 31
2025-06-05 12:01:10,229:INFO:_display_container: 4
2025-06-05 12:01:10,229:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-05 12:01:10,229:INFO:create_model() successfully completed......................................
2025-06-05 12:01:10,368:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:10,368:INFO:Creating metrics dataframe
2025-06-05 12:01:10,403:INFO:Initializing Decision Tree Regressor
2025-06-05 12:01:10,403:INFO:Total runtime is 0.3081155339876811 minutes
2025-06-05 12:01:10,412:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:10,413:INFO:Initializing create_model()
2025-06-05 12:01:10,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:10,413:INFO:Checking exceptions
2025-06-05 12:01:10,413:INFO:Importing libraries
2025-06-05 12:01:10,413:INFO:Copying training dataset
2025-06-05 12:01:10,432:INFO:Defining folds
2025-06-05 12:01:10,433:INFO:Declaring metric variables
2025-06-05 12:01:10,447:INFO:Importing untrained model
2025-06-05 12:01:10,459:INFO:Decision Tree Regressor Imported successfully
2025-06-05 12:01:10,478:INFO:Starting cross validation
2025-06-05 12:01:10,480:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:11,446:INFO:Calculating mean and std
2025-06-05 12:01:11,448:INFO:Creating metrics dataframe
2025-06-05 12:01:11,451:INFO:Uploading results into container
2025-06-05 12:01:11,454:INFO:Uploading model into container now
2025-06-05 12:01:11,456:INFO:_master_model_container: 32
2025-06-05 12:01:11,456:INFO:_display_container: 4
2025-06-05 12:01:11,457:INFO:DecisionTreeRegressor(random_state=123)
2025-06-05 12:01:11,457:INFO:create_model() successfully completed......................................
2025-06-05 12:01:11,561:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:11,561:INFO:Creating metrics dataframe
2025-06-05 12:01:11,577:INFO:Initializing Random Forest Regressor
2025-06-05 12:01:11,578:INFO:Total runtime is 0.3277022202809652 minutes
2025-06-05 12:01:11,582:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:11,582:INFO:Initializing create_model()
2025-06-05 12:01:11,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:11,582:INFO:Checking exceptions
2025-06-05 12:01:11,584:INFO:Importing libraries
2025-06-05 12:01:11,584:INFO:Copying training dataset
2025-06-05 12:01:11,594:INFO:Defining folds
2025-06-05 12:01:11,594:INFO:Declaring metric variables
2025-06-05 12:01:11,605:INFO:Importing untrained model
2025-06-05 12:01:11,615:INFO:Random Forest Regressor Imported successfully
2025-06-05 12:01:11,629:INFO:Starting cross validation
2025-06-05 12:01:11,632:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:24,930:INFO:Calculating mean and std
2025-06-05 12:01:24,933:INFO:Creating metrics dataframe
2025-06-05 12:01:24,937:INFO:Uploading results into container
2025-06-05 12:01:24,939:INFO:Uploading model into container now
2025-06-05 12:01:24,939:INFO:_master_model_container: 33
2025-06-05 12:01:24,939:INFO:_display_container: 4
2025-06-05 12:01:24,940:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-06-05 12:01:24,942:INFO:create_model() successfully completed......................................
2025-06-05 12:01:25,047:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:25,047:INFO:Creating metrics dataframe
2025-06-05 12:01:25,063:INFO:Initializing Extra Trees Regressor
2025-06-05 12:01:25,063:INFO:Total runtime is 0.5524546066919963 minutes
2025-06-05 12:01:25,072:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:25,072:INFO:Initializing create_model()
2025-06-05 12:01:25,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:25,073:INFO:Checking exceptions
2025-06-05 12:01:25,073:INFO:Importing libraries
2025-06-05 12:01:25,073:INFO:Copying training dataset
2025-06-05 12:01:25,084:INFO:Defining folds
2025-06-05 12:01:25,084:INFO:Declaring metric variables
2025-06-05 12:01:25,095:INFO:Importing untrained model
2025-06-05 12:01:25,105:INFO:Extra Trees Regressor Imported successfully
2025-06-05 12:01:25,115:INFO:Starting cross validation
2025-06-05 12:01:25,119:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:32,585:INFO:Calculating mean and std
2025-06-05 12:01:32,587:INFO:Creating metrics dataframe
2025-06-05 12:01:32,590:INFO:Uploading results into container
2025-06-05 12:01:32,591:INFO:Uploading model into container now
2025-06-05 12:01:32,592:INFO:_master_model_container: 34
2025-06-05 12:01:32,592:INFO:_display_container: 4
2025-06-05 12:01:32,595:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-06-05 12:01:32,595:INFO:create_model() successfully completed......................................
2025-06-05 12:01:32,692:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:32,692:INFO:Creating metrics dataframe
2025-06-05 12:01:32,713:INFO:Initializing AdaBoost Regressor
2025-06-05 12:01:32,713:INFO:Total runtime is 0.6799546162287395 minutes
2025-06-05 12:01:32,724:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:32,724:INFO:Initializing create_model()
2025-06-05 12:01:32,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:32,724:INFO:Checking exceptions
2025-06-05 12:01:32,724:INFO:Importing libraries
2025-06-05 12:01:32,726:INFO:Copying training dataset
2025-06-05 12:01:32,740:INFO:Defining folds
2025-06-05 12:01:32,741:INFO:Declaring metric variables
2025-06-05 12:01:32,753:INFO:Importing untrained model
2025-06-05 12:01:32,760:INFO:AdaBoost Regressor Imported successfully
2025-06-05 12:01:32,777:INFO:Starting cross validation
2025-06-05 12:01:32,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:34,622:INFO:Calculating mean and std
2025-06-05 12:01:34,627:INFO:Creating metrics dataframe
2025-06-05 12:01:34,636:INFO:Uploading results into container
2025-06-05 12:01:34,642:INFO:Uploading model into container now
2025-06-05 12:01:34,645:INFO:_master_model_container: 35
2025-06-05 12:01:34,645:INFO:_display_container: 4
2025-06-05 12:01:34,646:INFO:AdaBoostRegressor(random_state=123)
2025-06-05 12:01:34,646:INFO:create_model() successfully completed......................................
2025-06-05 12:01:34,774:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:34,775:INFO:Creating metrics dataframe
2025-06-05 12:01:34,789:INFO:Initializing Gradient Boosting Regressor
2025-06-05 12:01:34,789:INFO:Total runtime is 0.7145499706268311 minutes
2025-06-05 12:01:34,795:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:34,795:INFO:Initializing create_model()
2025-06-05 12:01:34,795:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:34,795:INFO:Checking exceptions
2025-06-05 12:01:34,796:INFO:Importing libraries
2025-06-05 12:01:34,796:INFO:Copying training dataset
2025-06-05 12:01:34,806:INFO:Defining folds
2025-06-05 12:01:34,806:INFO:Declaring metric variables
2025-06-05 12:01:34,818:INFO:Importing untrained model
2025-06-05 12:01:34,824:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 12:01:34,840:INFO:Starting cross validation
2025-06-05 12:01:34,841:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:39,539:INFO:Calculating mean and std
2025-06-05 12:01:39,542:INFO:Creating metrics dataframe
2025-06-05 12:01:39,552:INFO:Uploading results into container
2025-06-05 12:01:39,552:INFO:Uploading model into container now
2025-06-05 12:01:39,554:INFO:_master_model_container: 36
2025-06-05 12:01:39,554:INFO:_display_container: 4
2025-06-05 12:01:39,555:INFO:GradientBoostingRegressor(random_state=123)
2025-06-05 12:01:39,555:INFO:create_model() successfully completed......................................
2025-06-05 12:01:39,655:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:39,655:INFO:Creating metrics dataframe
2025-06-05 12:01:39,671:INFO:Initializing Light Gradient Boosting Machine
2025-06-05 12:01:39,671:INFO:Total runtime is 0.7959272543589275 minutes
2025-06-05 12:01:39,678:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:39,678:INFO:Initializing create_model()
2025-06-05 12:01:39,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:39,679:INFO:Checking exceptions
2025-06-05 12:01:39,679:INFO:Importing libraries
2025-06-05 12:01:39,679:INFO:Copying training dataset
2025-06-05 12:01:39,692:INFO:Defining folds
2025-06-05 12:01:39,692:INFO:Declaring metric variables
2025-06-05 12:01:39,705:INFO:Importing untrained model
2025-06-05 12:01:39,711:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-05 12:01:39,727:INFO:Starting cross validation
2025-06-05 12:01:39,729:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:41,634:INFO:Calculating mean and std
2025-06-05 12:01:41,636:INFO:Creating metrics dataframe
2025-06-05 12:01:41,642:INFO:Uploading results into container
2025-06-05 12:01:41,644:INFO:Uploading model into container now
2025-06-05 12:01:41,645:INFO:_master_model_container: 37
2025-06-05 12:01:41,645:INFO:_display_container: 4
2025-06-05 12:01:41,645:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-06-05 12:01:41,645:INFO:create_model() successfully completed......................................
2025-06-05 12:01:41,752:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:41,752:INFO:Creating metrics dataframe
2025-06-05 12:01:41,772:INFO:Initializing Dummy Regressor
2025-06-05 12:01:41,773:INFO:Total runtime is 0.830954921245575 minutes
2025-06-05 12:01:41,782:INFO:SubProcess create_model() called ==================================
2025-06-05 12:01:41,782:INFO:Initializing create_model()
2025-06-05 12:01:41,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000168794C4580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:41,784:INFO:Checking exceptions
2025-06-05 12:01:41,784:INFO:Importing libraries
2025-06-05 12:01:41,784:INFO:Copying training dataset
2025-06-05 12:01:41,800:INFO:Defining folds
2025-06-05 12:01:41,801:INFO:Declaring metric variables
2025-06-05 12:01:41,813:INFO:Importing untrained model
2025-06-05 12:01:41,824:INFO:Dummy Regressor Imported successfully
2025-06-05 12:01:41,841:INFO:Starting cross validation
2025-06-05 12:01:41,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 12:01:42,396:INFO:Calculating mean and std
2025-06-05 12:01:42,399:INFO:Creating metrics dataframe
2025-06-05 12:01:42,407:INFO:Uploading results into container
2025-06-05 12:01:42,408:INFO:Uploading model into container now
2025-06-05 12:01:42,409:INFO:_master_model_container: 38
2025-06-05 12:01:42,409:INFO:_display_container: 4
2025-06-05 12:01:42,409:INFO:DummyRegressor()
2025-06-05 12:01:42,410:INFO:create_model() successfully completed......................................
2025-06-05 12:01:42,513:INFO:SubProcess create_model() end ==================================
2025-06-05 12:01:42,513:INFO:Creating metrics dataframe
2025-06-05 12:01:42,551:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-05 12:01:42,585:INFO:Initializing create_model()
2025-06-05 12:01:42,585:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 12:01:42,586:INFO:Checking exceptions
2025-06-05 12:01:42,590:INFO:Importing libraries
2025-06-05 12:01:42,590:INFO:Copying training dataset
2025-06-05 12:01:42,606:INFO:Defining folds
2025-06-05 12:01:42,606:INFO:Declaring metric variables
2025-06-05 12:01:42,607:INFO:Importing untrained model
2025-06-05 12:01:42,607:INFO:Declaring custom model
2025-06-05 12:01:42,608:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 12:01:42,609:INFO:Cross validation set to False
2025-06-05 12:01:42,609:INFO:Fitting Model
2025-06-05 12:01:44,318:INFO:GradientBoostingRegressor(random_state=123)
2025-06-05 12:01:44,318:INFO:create_model() successfully completed......................................
2025-06-05 12:01:44,519:INFO:_master_model_container: 38
2025-06-05 12:01:44,519:INFO:_display_container: 4
2025-06-05 12:01:44,520:INFO:GradientBoostingRegressor(random_state=123)
2025-06-05 12:01:44,520:INFO:compare_models() successfully completed......................................
2025-06-05 12:02:06,347:INFO:Initializing load_model()
2025-06-05 12:02:06,352:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:34:50,047:INFO:Initializing load_model()
2025-06-05 12:34:50,076:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:34:59,669:INFO:Initializing load_model()
2025-06-05 12:34:59,672:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:04,065:INFO:Initializing load_model()
2025-06-05 12:35:04,067:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:04,447:INFO:Initializing load_model()
2025-06-05 12:35:04,623:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:04,638:INFO:Initializing load_model()
2025-06-05 12:35:04,639:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:04,741:INFO:Initializing load_model()
2025-06-05 12:35:04,742:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:05,148:INFO:Initializing load_model()
2025-06-05 12:35:05,150:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:05,158:INFO:Initializing load_model()
2025-06-05 12:35:05,159:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:05,231:INFO:Initializing load_model()
2025-06-05 12:35:05,242:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:05,557:INFO:Initializing load_model()
2025-06-05 12:35:05,563:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:05,578:INFO:Initializing load_model()
2025-06-05 12:35:05,579:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:06,532:INFO:Initializing load_model()
2025-06-05 12:35:06,532:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:07,014:INFO:Initializing load_model()
2025-06-05 12:35:07,021:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:07,323:INFO:Initializing load_model()
2025-06-05 12:35:07,325:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:07,329:INFO:Initializing load_model()
2025-06-05 12:35:07,329:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:07,674:INFO:Initializing load_model()
2025-06-05 12:35:07,847:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:07,856:INFO:Initializing load_model()
2025-06-05 12:35:07,856:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:08,054:INFO:Initializing load_model()
2025-06-05 12:35:08,055:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:10,255:INFO:Initializing load_model()
2025-06-05 12:35:10,256:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:10,698:INFO:Initializing load_model()
2025-06-05 12:35:10,699:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:11,067:INFO:Initializing load_model()
2025-06-05 12:35:11,239:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:11,258:INFO:Initializing load_model()
2025-06-05 12:35:11,263:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:11,928:INFO:Initializing load_model()
2025-06-05 12:35:11,928:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:12,231:INFO:Initializing load_model()
2025-06-05 12:35:12,231:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:12,258:INFO:Initializing load_model()
2025-06-05 12:35:12,261:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:12,590:INFO:Initializing load_model()
2025-06-05 12:35:12,591:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:12,628:INFO:Initializing load_model()
2025-06-05 12:35:12,629:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:12,832:INFO:Initializing load_model()
2025-06-05 12:35:12,833:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:13,144:INFO:Initializing load_model()
2025-06-05 12:35:13,145:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:13,182:INFO:Initializing load_model()
2025-06-05 12:35:13,183:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:13,424:INFO:Initializing load_model()
2025-06-05 12:35:13,430:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:13,560:INFO:Initializing load_model()
2025-06-05 12:35:13,563:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:13,794:INFO:Initializing load_model()
2025-06-05 12:35:13,797:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:17,099:INFO:Initializing load_model()
2025-06-05 12:35:17,100:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:20,179:INFO:Initializing load_model()
2025-06-05 12:35:20,181:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:20,560:INFO:Initializing load_model()
2025-06-05 12:35:20,562:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:20,593:INFO:Initializing load_model()
2025-06-05 12:35:20,596:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:23,008:INFO:Initializing load_model()
2025-06-05 12:35:23,008:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:23,448:INFO:Initializing load_model()
2025-06-05 12:35:23,448:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:23,702:INFO:Initializing load_model()
2025-06-05 12:35:23,703:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:23,952:INFO:Initializing load_model()
2025-06-05 12:35:23,952:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:24,211:INFO:Initializing load_model()
2025-06-05 12:35:24,212:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:24,220:INFO:Initializing load_model()
2025-06-05 12:35:24,221:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:24,468:INFO:Initializing load_model()
2025-06-05 12:35:24,469:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:24,653:INFO:Initializing load_model()
2025-06-05 12:35:24,654:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:24,857:INFO:Initializing load_model()
2025-06-05 12:35:24,859:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:25,047:INFO:Initializing load_model()
2025-06-05 12:35:25,047:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:25,277:INFO:Initializing load_model()
2025-06-05 12:35:25,278:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:25,465:INFO:Initializing load_model()
2025-06-05 12:35:25,465:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:25,689:INFO:Initializing load_model()
2025-06-05 12:35:25,690:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:25,873:INFO:Initializing load_model()
2025-06-05 12:35:25,874:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:26,092:INFO:Initializing load_model()
2025-06-05 12:35:26,093:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:26,303:INFO:Initializing load_model()
2025-06-05 12:35:26,303:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:26,551:INFO:Initializing load_model()
2025-06-05 12:35:26,553:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:26,595:INFO:Initializing load_model()
2025-06-05 12:35:26,764:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:26,779:INFO:Initializing load_model()
2025-06-05 12:35:26,784:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:27,055:INFO:Initializing load_model()
2025-06-05 12:35:27,057:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:27,275:INFO:Initializing load_model()
2025-06-05 12:35:27,278:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:27,432:INFO:Initializing load_model()
2025-06-05 12:35:27,435:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:27,510:INFO:Initializing load_model()
2025-06-05 12:35:27,511:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:27,832:INFO:Initializing load_model()
2025-06-05 12:35:27,835:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:28,019:INFO:Initializing load_model()
2025-06-05 12:35:28,022:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:28,236:INFO:Initializing load_model()
2025-06-05 12:35:28,243:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:28,446:INFO:Initializing load_model()
2025-06-05 12:35:28,447:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:28,629:INFO:Initializing load_model()
2025-06-05 12:35:28,629:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:28,672:INFO:Initializing load_model()
2025-06-05 12:35:28,675:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:28,910:INFO:Initializing load_model()
2025-06-05 12:35:28,910:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:29,128:INFO:Initializing load_model()
2025-06-05 12:35:29,130:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:29,358:INFO:Initializing load_model()
2025-06-05 12:35:29,358:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:29,564:INFO:Initializing load_model()
2025-06-05 12:35:29,568:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:29,627:INFO:Initializing load_model()
2025-06-05 12:35:29,771:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:29,952:INFO:Initializing load_model()
2025-06-05 12:35:29,955:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:30,170:INFO:Initializing load_model()
2025-06-05 12:35:30,175:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:30,391:INFO:Initializing load_model()
2025-06-05 12:35:30,392:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:33,362:INFO:Initializing load_model()
2025-06-05 12:35:33,363:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:36,987:INFO:Initializing load_model()
2025-06-05 12:35:36,988:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:40,590:INFO:Initializing load_model()
2025-06-05 12:35:40,590:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:47,542:INFO:Initializing load_model()
2025-06-05 12:35:47,542:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:50,675:INFO:Initializing load_model()
2025-06-05 12:35:50,677:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:35:58,173:INFO:Initializing load_model()
2025-06-05 12:35:58,174:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:36:01,253:INFO:Initializing load_model()
2025-06-05 12:36:01,256:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:36:02,353:INFO:Initializing load_model()
2025-06-05 12:36:02,353:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 12:37:50,364:INFO:Initializing load_model()
2025-06-05 12:37:50,368:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:07:48,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:07:48,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:07:48,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:07:48,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:07:49,461:INFO:Initializing load_model()
2025-06-05 16:07:49,462:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:08:32,027:INFO:Initializing load_model()
2025-06-05 16:08:32,030:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:08:35,473:INFO:Initializing load_model()
2025-06-05 16:08:35,477:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:08:37,964:INFO:Initializing load_model()
2025-06-05 16:08:37,964:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:08:41,243:INFO:Initializing load_model()
2025-06-05 16:08:41,258:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:08:44,434:INFO:Initializing load_model()
2025-06-05 16:08:44,435:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:08:49,414:INFO:Initializing load_model()
2025-06-05 16:08:49,415:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:08:51,282:INFO:Initializing load_model()
2025-06-05 16:08:51,283:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:08:54,180:INFO:Initializing load_model()
2025-06-05 16:08:54,180:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:09:00,022:INFO:Initializing load_model()
2025-06-05 16:09:00,053:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:09:01,053:INFO:Initializing load_model()
2025-06-05 16:09:01,054:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:09:01,277:INFO:Initializing predict_model()
2025-06-05 16:09:01,277:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190F44FD030>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F479BEB0>)
2025-06-05 16:09:01,278:INFO:Checking exceptions
2025-06-05 16:09:01,278:INFO:Preloading libraries
2025-06-05 16:09:01,279:INFO:Set up data.
2025-06-05 16:09:01,298:INFO:Set up index.
2025-06-05 16:13:23,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:13:23,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:13:23,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:13:23,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:13:23,769:INFO:Initializing load_model()
2025-06-05 16:13:23,770:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:31,133:INFO:Initializing load_model()
2025-06-05 16:13:31,135:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:38,126:INFO:Initializing load_model()
2025-06-05 16:13:38,126:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:40,952:INFO:Initializing load_model()
2025-06-05 16:13:40,956:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:44,997:INFO:Initializing load_model()
2025-06-05 16:13:44,998:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:48,330:INFO:Initializing load_model()
2025-06-05 16:13:48,331:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:50,495:INFO:Initializing load_model()
2025-06-05 16:13:50,496:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:53,857:INFO:Initializing load_model()
2025-06-05 16:13:53,860:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:57,127:INFO:Initializing load_model()
2025-06-05 16:13:57,128:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:59,231:INFO:Initializing load_model()
2025-06-05 16:13:59,232:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:13:59,435:INFO:Initializing predict_model()
2025-06-05 16:13:59,439:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020CD7DFE9B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020CD80A6C20>)
2025-06-05 16:13:59,442:INFO:Checking exceptions
2025-06-05 16:13:59,442:INFO:Preloading libraries
2025-06-05 16:13:59,443:INFO:Set up data.
2025-06-05 16:13:59,466:INFO:Set up index.
2025-06-05 16:21:17,362:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:21:17,362:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:21:17,362:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:21:17,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:21:17,817:INFO:Initializing load_model()
2025-06-05 16:21:17,817:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:21:32,952:INFO:Initializing load_model()
2025-06-05 16:21:32,967:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:21:33,120:INFO:Initializing predict_model()
2025-06-05 16:21:33,120:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5C9202110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C5C94B67A0>)
2025-06-05 16:21:33,121:INFO:Checking exceptions
2025-06-05 16:21:33,121:INFO:Preloading libraries
2025-06-05 16:21:33,122:INFO:Set up data.
2025-06-05 16:21:33,141:INFO:Set up index.
2025-06-05 16:25:22,116:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:25:22,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:25:22,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:25:22,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:25:22,523:INFO:Initializing load_model()
2025-06-05 16:25:22,523:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:25:32,242:INFO:Initializing load_model()
2025-06-05 16:25:32,244:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:25:32,484:INFO:Initializing predict_model()
2025-06-05 16:25:32,484:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1AD982410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F1ABC96E60>)
2025-06-05 16:25:32,487:INFO:Checking exceptions
2025-06-05 16:25:32,488:INFO:Preloading libraries
2025-06-05 16:25:32,489:INFO:Set up data.
2025-06-05 16:25:32,525:INFO:Set up index.
2025-06-05 16:26:11,458:INFO:Initializing load_model()
2025-06-05 16:26:11,461:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:26:11,632:INFO:Initializing predict_model()
2025-06-05 16:26:11,632:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1AD96B130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F1ADCCE4D0>)
2025-06-05 16:26:11,633:INFO:Checking exceptions
2025-06-05 16:26:11,633:INFO:Preloading libraries
2025-06-05 16:26:11,634:INFO:Set up data.
2025-06-05 16:26:11,646:INFO:Set up index.
2025-06-05 16:35:13,449:INFO:Initializing load_model()
2025-06-05 16:35:13,450:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:35:13,633:INFO:Initializing predict_model()
2025-06-05 16:35:13,634:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1AD948850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F199113F40>)
2025-06-05 16:35:13,638:INFO:Checking exceptions
2025-06-05 16:35:13,639:INFO:Preloading libraries
2025-06-05 16:35:13,646:INFO:Set up data.
2025-06-05 16:35:13,678:INFO:Set up index.
2025-06-05 16:36:12,326:INFO:Initializing load_model()
2025-06-05 16:36:12,328:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:36:12,490:INFO:Initializing predict_model()
2025-06-05 16:36:12,491:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1AD8FF5B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F197F49240>)
2025-06-05 16:36:12,491:INFO:Checking exceptions
2025-06-05 16:36:12,491:INFO:Preloading libraries
2025-06-05 16:36:12,492:INFO:Set up data.
2025-06-05 16:36:12,513:INFO:Set up index.
2025-06-05 16:36:31,185:INFO:Initializing load_model()
2025-06-05 16:36:31,186:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:36:31,350:INFO:Initializing predict_model()
2025-06-05 16:36:31,351:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F1AD8FF460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F197F492D0>)
2025-06-05 16:36:31,351:INFO:Checking exceptions
2025-06-05 16:36:31,352:INFO:Preloading libraries
2025-06-05 16:36:31,352:INFO:Set up data.
2025-06-05 16:36:31,365:INFO:Set up index.
2025-06-05 16:48:50,276:INFO:Initializing tune_model()
2025-06-05 16:48:50,282:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>)
2025-06-05 16:48:50,283:INFO:Checking exceptions
2025-06-05 16:48:50,291:INFO:Soft dependency imported: skopt: 0.10.2
2025-06-05 16:48:50,619:INFO:Copying training dataset
2025-06-05 16:48:50,638:INFO:Checking base model
2025-06-05 16:48:50,642:INFO:Base model : Gradient Boosting Regressor
2025-06-05 16:48:50,659:INFO:Declaring metric variables
2025-06-05 16:48:50,677:INFO:Defining Hyperparameters
2025-06-05 16:48:51,327:INFO:Tuning with n_jobs=-1
2025-06-05 16:48:51,355:INFO:Initializing skopt.BayesSearchCV
2025-06-05 16:49:42,973:INFO:best_params: OrderedDict([('actual_estimator__learning_rate', 0.0238190072917794), ('actual_estimator__max_depth', 3), ('actual_estimator__max_features', 0.4284489606984907), ('actual_estimator__min_impurity_decrease', 0.002646746704757545), ('actual_estimator__min_samples_leaf', 5), ('actual_estimator__min_samples_split', 9), ('actual_estimator__n_estimators', 239), ('actual_estimator__subsample', 0.7687727671549709)])
2025-06-05 16:49:42,974:INFO:Hyperparameter search completed
2025-06-05 16:49:42,974:INFO:SubProcess create_model() called ==================================
2025-06-05 16:49:42,975:INFO:Initializing create_model()
2025-06-05 16:49:42,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016877516CE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'learning_rate': 0.0238190072917794, 'max_depth': 3, 'max_features': 0.4284489606984907, 'min_impurity_decrease': 0.002646746704757545, 'min_samples_leaf': 5, 'min_samples_split': 9, 'n_estimators': 239, 'subsample': 0.7687727671549709})
2025-06-05 16:49:42,975:INFO:Checking exceptions
2025-06-05 16:49:42,975:INFO:Importing libraries
2025-06-05 16:49:42,975:INFO:Copying training dataset
2025-06-05 16:49:42,992:INFO:Defining folds
2025-06-05 16:49:42,992:INFO:Declaring metric variables
2025-06-05 16:49:43,001:INFO:Importing untrained model
2025-06-05 16:49:43,002:INFO:Declaring custom model
2025-06-05 16:49:43,026:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 16:49:43,041:INFO:Starting cross validation
2025-06-05 16:49:43,045:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 16:49:48,214:INFO:Calculating mean and std
2025-06-05 16:49:48,217:INFO:Creating metrics dataframe
2025-06-05 16:49:48,248:INFO:Finalizing model
2025-06-05 16:49:49,641:INFO:Uploading results into container
2025-06-05 16:49:49,651:INFO:Uploading model into container now
2025-06-05 16:49:49,652:INFO:_master_model_container: 39
2025-06-05 16:49:49,652:INFO:_display_container: 5
2025-06-05 16:49:49,654:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-05 16:49:49,654:INFO:create_model() successfully completed......................................
2025-06-05 16:49:49,753:INFO:SubProcess create_model() end ==================================
2025-06-05 16:49:49,754:INFO:choose_better activated
2025-06-05 16:49:49,758:INFO:SubProcess create_model() called ==================================
2025-06-05 16:49:49,759:INFO:Initializing create_model()
2025-06-05 16:49:49,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 16:49:49,761:INFO:Checking exceptions
2025-06-05 16:49:49,766:INFO:Importing libraries
2025-06-05 16:49:49,766:INFO:Copying training dataset
2025-06-05 16:49:49,774:INFO:Defining folds
2025-06-05 16:49:49,774:INFO:Declaring metric variables
2025-06-05 16:49:49,774:INFO:Importing untrained model
2025-06-05 16:49:49,774:INFO:Declaring custom model
2025-06-05 16:49:49,775:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 16:49:49,775:INFO:Starting cross validation
2025-06-05 16:49:49,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-05 16:49:55,181:INFO:Calculating mean and std
2025-06-05 16:49:55,182:INFO:Creating metrics dataframe
2025-06-05 16:49:55,185:INFO:Finalizing model
2025-06-05 16:49:56,433:INFO:Uploading results into container
2025-06-05 16:49:56,434:INFO:Uploading model into container now
2025-06-05 16:49:56,434:INFO:_master_model_container: 40
2025-06-05 16:49:56,435:INFO:_display_container: 6
2025-06-05 16:49:56,435:INFO:GradientBoostingRegressor(random_state=123)
2025-06-05 16:49:56,435:INFO:create_model() successfully completed......................................
2025-06-05 16:49:56,531:INFO:SubProcess create_model() end ==================================
2025-06-05 16:49:56,532:INFO:GradientBoostingRegressor(random_state=123) result for R2 is 0.4411
2025-06-05 16:49:56,534:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) result for R2 is 0.4797
2025-06-05 16:49:56,534:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) is best model
2025-06-05 16:49:56,535:INFO:choose_better completed
2025-06-05 16:49:56,572:INFO:_master_model_container: 40
2025-06-05 16:49:56,572:INFO:_display_container: 5
2025-06-05 16:49:56,573:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-05 16:49:56,574:INFO:tune_model() successfully completed......................................
2025-06-05 16:50:22,581:INFO:Initializing finalize_model()
2025-06-05 16:50:22,581:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-05 16:50:22,582:INFO:Finalizing GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-05 16:50:22,593:INFO:Initializing create_model()
2025-06-05 16:50:22,594:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016877C6FAF0>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-05 16:50:22,594:INFO:Checking exceptions
2025-06-05 16:50:22,597:INFO:Importing libraries
2025-06-05 16:50:22,597:INFO:Copying training dataset
2025-06-05 16:50:22,598:INFO:Defining folds
2025-06-05 16:50:22,598:INFO:Declaring metric variables
2025-06-05 16:50:22,599:INFO:Importing untrained model
2025-06-05 16:50:22,599:INFO:Declaring custom model
2025-06-05 16:50:22,600:INFO:Gradient Boosting Regressor Imported successfully
2025-06-05 16:50:22,601:INFO:Cross validation set to False
2025-06-05 16:50:22,601:INFO:Fitting Model
2025-06-05 16:50:24,762:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-05 16:50:24,762:INFO:create_model() successfully completed......................................
2025-06-05 16:50:24,864:INFO:_master_model_container: 40
2025-06-05 16:50:24,864:INFO:_display_container: 5
2025-06-05 16:50:24,879:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-05 16:50:24,879:INFO:finalize_model() successfully completed......................................
2025-06-05 16:50:25,000:INFO:Initializing save_model()
2025-06-05 16:50:25,000:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), model_name=bigmart_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-05 16:50:25,000:INFO:Adding model into prep_pipe
2025-06-05 16:50:25,000:WARNING:Only Model saved as it was a pipeline.
2025-06-05 16:50:25,033:INFO:bigmart_best_model.pkl saved in current working directory
2025-06-05 16:50:25,048:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-05 16:50:25,048:INFO:save_model() successfully completed......................................
2025-06-05 16:50:58,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:50:58,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:50:58,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:50:58,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-05 16:50:58,521:INFO:Initializing load_model()
2025-06-05 16:50:58,522:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:51:23,888:INFO:Initializing load_model()
2025-06-05 16:51:23,889:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-05 16:51:24,091:INFO:Initializing predict_model()
2025-06-05 16:51:24,092:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018E1B6FC280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E1B9925F0>)
2025-06-05 16:51:24,092:INFO:Checking exceptions
2025-06-05 16:51:24,092:INFO:Preloading libraries
2025-06-05 16:51:24,093:INFO:Set up data.
2025-06-05 16:51:24,108:INFO:Set up index.
2025-06-10 12:42:37,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 12:42:37,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 12:42:37,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 12:42:37,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 12:42:38,137:INFO:Initializing load_model()
2025-06-10 12:42:38,138:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-10 12:43:18,923:INFO:Initializing load_model()
2025-06-10 12:43:18,924:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-10 12:43:19,120:INFO:Initializing predict_model()
2025-06-10 12:43:19,121:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002058DB188B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002058DDB23B0>)
2025-06-10 12:43:19,122:INFO:Checking exceptions
2025-06-10 12:43:19,122:INFO:Preloading libraries
2025-06-10 12:43:19,123:INFO:Set up data.
2025-06-10 12:43:19,145:INFO:Set up index.
2025-06-11 12:01:02,322:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:01:02,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:01:02,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:01:02,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:01:02,665:INFO:Initializing load_model()
2025-06-11 12:01:02,665:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-11 12:01:08,258:INFO:Initializing load_model()
2025-06-11 12:01:08,258:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-11 12:01:08,434:INFO:Initializing predict_model()
2025-06-11 12:01:08,435:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C5845E3340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C570BC9AB0>)
2025-06-11 12:01:08,442:INFO:Checking exceptions
2025-06-11 12:01:08,442:INFO:Preloading libraries
2025-06-11 12:01:08,443:INFO:Set up data.
2025-06-11 12:01:08,465:INFO:Set up index.
2025-06-11 12:12:36,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:12:36,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:12:36,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:12:36,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:12:44,572:INFO:PyCaret RegressionExperiment
2025-06-11 12:12:44,573:INFO:Logging name: reg-default-name
2025-06-11 12:12:44,574:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-11 12:12:44,574:INFO:version 3.3.2
2025-06-11 12:12:44,574:INFO:Initializing setup()
2025-06-11 12:12:44,574:INFO:self.USI: 2a9b
2025-06-11 12:12:44,574:INFO:self._variable_keys: {'y_train', 'target_param', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'gpu_n_jobs_param', 'USI', 'memory', 'fold_generator', 'y_test', 'seed', 'pipeline', 'n_jobs_param', 'X', 'logging_param', 'fold_groups_param', 'X_train', 'transform_target_param', 'exp_id', 'X_test', '_available_plots', '_ml_usecase', 'log_plots_param', 'idx', 'html_param', 'data', 'y'}
2025-06-11 12:12:44,574:INFO:Checking environment
2025-06-11 12:12:44,574:INFO:python_version: 3.10.11
2025-06-11 12:12:44,575:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-11 12:12:44,575:INFO:machine: AMD64
2025-06-11 12:12:44,575:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-11 12:12:44,580:INFO:Memory: svmem(total=8316121088, available=1105100800, percent=86.7, used=7211020288, free=1105100800)
2025-06-11 12:12:44,580:INFO:Physical Core: 2
2025-06-11 12:12:44,581:INFO:Logical Core: 4
2025-06-11 12:12:44,581:INFO:Checking libraries
2025-06-11 12:12:44,581:INFO:System:
2025-06-11 12:12:44,581:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-11 12:12:44,581:INFO:executable: c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\Scripts\python.exe
2025-06-11 12:12:44,581:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-11 12:12:44,581:INFO:PyCaret required dependencies:
2025-06-11 12:12:44,641:INFO:                 pip: 25.1.1
2025-06-11 12:12:44,641:INFO:          setuptools: 65.5.0
2025-06-11 12:12:44,641:INFO:             pycaret: 3.3.2
2025-06-11 12:12:44,641:INFO:             IPython: 8.37.0
2025-06-11 12:12:44,641:INFO:          ipywidgets: 8.1.7
2025-06-11 12:12:44,641:INFO:                tqdm: 4.67.1
2025-06-11 12:12:44,641:INFO:               numpy: 1.26.4
2025-06-11 12:12:44,642:INFO:              pandas: 2.1.4
2025-06-11 12:12:44,642:INFO:              jinja2: 3.1.6
2025-06-11 12:12:44,642:INFO:               scipy: 1.11.4
2025-06-11 12:12:44,642:INFO:              joblib: 1.3.2
2025-06-11 12:12:44,642:INFO:             sklearn: 1.4.2
2025-06-11 12:12:44,642:INFO:                pyod: 2.0.5
2025-06-11 12:12:44,642:INFO:            imblearn: 0.13.0
2025-06-11 12:12:44,642:INFO:   category_encoders: 2.7.0
2025-06-11 12:12:44,642:INFO:            lightgbm: 4.6.0
2025-06-11 12:12:44,642:INFO:               numba: 0.61.2
2025-06-11 12:12:44,642:INFO:            requests: 2.32.3
2025-06-11 12:12:44,642:INFO:          matplotlib: 3.7.5
2025-06-11 12:12:44,642:INFO:          scikitplot: 0.3.7
2025-06-11 12:12:44,642:INFO:         yellowbrick: 1.5
2025-06-11 12:12:44,642:INFO:              plotly: 5.24.1
2025-06-11 12:12:44,642:INFO:    plotly-resampler: Not installed
2025-06-11 12:12:44,643:INFO:             kaleido: 0.2.1
2025-06-11 12:12:44,643:INFO:           schemdraw: 0.15
2025-06-11 12:12:44,643:INFO:         statsmodels: 0.14.4
2025-06-11 12:12:44,643:INFO:              sktime: 0.26.0
2025-06-11 12:12:44,643:INFO:               tbats: 1.1.3
2025-06-11 12:12:44,643:INFO:            pmdarima: 2.0.4
2025-06-11 12:12:44,643:INFO:              psutil: 7.0.0
2025-06-11 12:12:44,643:INFO:          markupsafe: 3.0.2
2025-06-11 12:12:44,643:INFO:             pickle5: Not installed
2025-06-11 12:12:44,643:INFO:         cloudpickle: 3.1.1
2025-06-11 12:12:44,643:INFO:         deprecation: 2.1.0
2025-06-11 12:12:44,643:INFO:              xxhash: 3.5.0
2025-06-11 12:12:44,643:INFO:           wurlitzer: Not installed
2025-06-11 12:12:44,643:INFO:PyCaret optional dependencies:
2025-06-11 12:12:44,695:INFO:                shap: Not installed
2025-06-11 12:12:44,695:INFO:           interpret: Not installed
2025-06-11 12:12:44,695:INFO:                umap: Not installed
2025-06-11 12:12:44,695:INFO:     ydata_profiling: Not installed
2025-06-11 12:12:44,695:INFO:  explainerdashboard: Not installed
2025-06-11 12:12:44,695:INFO:             autoviz: Not installed
2025-06-11 12:12:44,695:INFO:           fairlearn: Not installed
2025-06-11 12:12:44,695:INFO:          deepchecks: Not installed
2025-06-11 12:12:44,695:INFO:             xgboost: Not installed
2025-06-11 12:12:44,695:INFO:            catboost: Not installed
2025-06-11 12:12:44,696:INFO:              kmodes: Not installed
2025-06-11 12:12:44,696:INFO:             mlxtend: Not installed
2025-06-11 12:12:44,696:INFO:       statsforecast: Not installed
2025-06-11 12:12:44,696:INFO:        tune_sklearn: Not installed
2025-06-11 12:12:44,696:INFO:                 ray: Not installed
2025-06-11 12:12:44,696:INFO:            hyperopt: 0.2.7
2025-06-11 12:12:44,696:INFO:              optuna: 4.3.0
2025-06-11 12:12:44,697:INFO:               skopt: 0.10.2
2025-06-11 12:12:44,697:INFO:              mlflow: Not installed
2025-06-11 12:12:44,697:INFO:              gradio: Not installed
2025-06-11 12:12:44,697:INFO:             fastapi: Not installed
2025-06-11 12:12:44,697:INFO:             uvicorn: Not installed
2025-06-11 12:12:44,697:INFO:              m2cgen: Not installed
2025-06-11 12:12:44,697:INFO:           evidently: Not installed
2025-06-11 12:12:44,697:INFO:               fugue: Not installed
2025-06-11 12:12:44,697:INFO:           streamlit: 1.45.1
2025-06-11 12:12:44,697:INFO:             prophet: Not installed
2025-06-11 12:12:44,697:INFO:None
2025-06-11 12:12:44,697:INFO:Set up data.
2025-06-11 12:12:44,711:INFO:Set up folding strategy.
2025-06-11 12:12:44,711:INFO:Set up train/test split.
2025-06-11 12:12:44,739:INFO:Set up index.
2025-06-11 12:12:44,740:INFO:Assigning column types.
2025-06-11 12:12:44,750:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-11 12:12:44,750:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-11 12:12:44,758:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 12:12:44,780:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 12:12:44,859:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:44,913:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 12:12:44,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:44,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:44,915:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-11 12:12:44,923:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 12:12:44,929:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 12:12:44,999:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:45,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:45,048:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-11 12:12:45,053:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,058:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,116:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,174:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:45,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:45,188:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,196:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,411:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,411:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:45,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:45,413:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-11 12:12:45,435:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,550:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,655:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 12:12:45,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:45,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:45,813:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,172:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,228:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,229:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-11 12:12:46,304:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,351:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,526:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-11 12:12:46,668:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,848:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 12:12:46,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:46,893:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-11 12:12:47,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:47,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:47,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:47,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:47,139:INFO:Preparing preprocessing pipeline...
2025-06-11 12:12:47,139:INFO:Set up simple imputation.
2025-06-11 12:12:47,144:INFO:Set up encoding of categorical features.
2025-06-11 12:12:47,205:INFO:Finished creating preprocessing pipeline.
2025-06-11 12:12:47,212:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))])
2025-06-11 12:12:47,213:INFO:Creating final display dataframe.
2025-06-11 12:12:47,411:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Item_Outlet_Sales
2                   Target type         Regression
3           Original data shape         (8523, 12)
4        Transformed data shape         (8523, 12)
5   Transformed train set shape         (5966, 12)
6    Transformed test set shape         (2557, 12)
7              Numeric features                 10
8          Categorical features                  1
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13     Maximum one-hot encoding                 25
14              Encoding method               None
15               Fold Generator              KFold
16                  Fold Number                 10
17                     CPU Jobs                 -1
18                      Use GPU              False
19               Log Experiment              False
20              Experiment Name   reg-default-name
21                          USI               2a9b
2025-06-11 12:12:47,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:47,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:47,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:47,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 12:12:47,690:INFO:setup() successfully completed in 3.13s...............
2025-06-11 12:12:49,124:INFO:Initializing compare_models()
2025-06-11 12:12:49,124:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-11 12:12:49,124:INFO:Checking exceptions
2025-06-11 12:12:49,130:INFO:Preparing display monitor
2025-06-11 12:12:49,180:INFO:Initializing Linear Regression
2025-06-11 12:12:49,180:INFO:Total runtime is 0.0 minutes
2025-06-11 12:12:49,190:INFO:SubProcess create_model() called ==================================
2025-06-11 12:12:49,191:INFO:Initializing create_model()
2025-06-11 12:12:49,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:12:49,192:INFO:Checking exceptions
2025-06-11 12:12:49,192:INFO:Importing libraries
2025-06-11 12:12:49,192:INFO:Copying training dataset
2025-06-11 12:12:49,220:INFO:Defining folds
2025-06-11 12:12:49,220:INFO:Declaring metric variables
2025-06-11 12:12:49,230:INFO:Importing untrained model
2025-06-11 12:12:49,242:INFO:Linear Regression Imported successfully
2025-06-11 12:12:49,265:INFO:Starting cross validation
2025-06-11 12:12:49,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:12:56,831:INFO:Calculating mean and std
2025-06-11 12:12:56,833:INFO:Creating metrics dataframe
2025-06-11 12:12:56,836:INFO:Uploading results into container
2025-06-11 12:12:56,837:INFO:Uploading model into container now
2025-06-11 12:12:56,837:INFO:_master_model_container: 1
2025-06-11 12:12:56,838:INFO:_display_container: 2
2025-06-11 12:12:56,838:INFO:LinearRegression(n_jobs=-1)
2025-06-11 12:12:56,839:INFO:create_model() successfully completed......................................
2025-06-11 12:12:56,931:INFO:SubProcess create_model() end ==================================
2025-06-11 12:12:56,931:INFO:Creating metrics dataframe
2025-06-11 12:12:56,938:INFO:Initializing Lasso Regression
2025-06-11 12:12:56,938:INFO:Total runtime is 0.12928805748621622 minutes
2025-06-11 12:12:56,942:INFO:SubProcess create_model() called ==================================
2025-06-11 12:12:56,942:INFO:Initializing create_model()
2025-06-11 12:12:56,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:12:56,942:INFO:Checking exceptions
2025-06-11 12:12:56,942:INFO:Importing libraries
2025-06-11 12:12:56,943:INFO:Copying training dataset
2025-06-11 12:12:56,961:INFO:Defining folds
2025-06-11 12:12:56,962:INFO:Declaring metric variables
2025-06-11 12:12:56,977:INFO:Importing untrained model
2025-06-11 12:12:56,987:INFO:Lasso Regression Imported successfully
2025-06-11 12:12:57,002:INFO:Starting cross validation
2025-06-11 12:12:57,004:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:12:57,488:INFO:Calculating mean and std
2025-06-11 12:12:57,490:INFO:Creating metrics dataframe
2025-06-11 12:12:57,492:INFO:Uploading results into container
2025-06-11 12:12:57,492:INFO:Uploading model into container now
2025-06-11 12:12:57,493:INFO:_master_model_container: 2
2025-06-11 12:12:57,494:INFO:_display_container: 2
2025-06-11 12:12:57,495:INFO:Lasso(random_state=123)
2025-06-11 12:12:57,495:INFO:create_model() successfully completed......................................
2025-06-11 12:12:57,568:INFO:SubProcess create_model() end ==================================
2025-06-11 12:12:57,568:INFO:Creating metrics dataframe
2025-06-11 12:12:57,576:INFO:Initializing Ridge Regression
2025-06-11 12:12:57,576:INFO:Total runtime is 0.13993348677953082 minutes
2025-06-11 12:12:57,583:INFO:SubProcess create_model() called ==================================
2025-06-11 12:12:57,583:INFO:Initializing create_model()
2025-06-11 12:12:57,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:12:57,583:INFO:Checking exceptions
2025-06-11 12:12:57,583:INFO:Importing libraries
2025-06-11 12:12:57,583:INFO:Copying training dataset
2025-06-11 12:12:57,591:INFO:Defining folds
2025-06-11 12:12:57,592:INFO:Declaring metric variables
2025-06-11 12:12:57,602:INFO:Importing untrained model
2025-06-11 12:12:57,608:INFO:Ridge Regression Imported successfully
2025-06-11 12:12:57,623:INFO:Starting cross validation
2025-06-11 12:12:57,624:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:12:58,161:INFO:Calculating mean and std
2025-06-11 12:12:58,164:INFO:Creating metrics dataframe
2025-06-11 12:12:58,170:INFO:Uploading results into container
2025-06-11 12:12:58,173:INFO:Uploading model into container now
2025-06-11 12:12:58,174:INFO:_master_model_container: 3
2025-06-11 12:12:58,174:INFO:_display_container: 2
2025-06-11 12:12:58,174:INFO:Ridge(random_state=123)
2025-06-11 12:12:58,174:INFO:create_model() successfully completed......................................
2025-06-11 12:12:58,267:INFO:SubProcess create_model() end ==================================
2025-06-11 12:12:58,267:INFO:Creating metrics dataframe
2025-06-11 12:12:58,277:INFO:Initializing Elastic Net
2025-06-11 12:12:58,277:INFO:Total runtime is 0.15160468022028603 minutes
2025-06-11 12:12:58,285:INFO:SubProcess create_model() called ==================================
2025-06-11 12:12:58,286:INFO:Initializing create_model()
2025-06-11 12:12:58,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:12:58,286:INFO:Checking exceptions
2025-06-11 12:12:58,288:INFO:Importing libraries
2025-06-11 12:12:58,288:INFO:Copying training dataset
2025-06-11 12:12:58,314:INFO:Defining folds
2025-06-11 12:12:58,314:INFO:Declaring metric variables
2025-06-11 12:12:58,321:INFO:Importing untrained model
2025-06-11 12:12:58,332:INFO:Elastic Net Imported successfully
2025-06-11 12:12:58,353:INFO:Starting cross validation
2025-06-11 12:12:58,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:12:58,742:INFO:Calculating mean and std
2025-06-11 12:12:58,745:INFO:Creating metrics dataframe
2025-06-11 12:12:58,749:INFO:Uploading results into container
2025-06-11 12:12:58,751:INFO:Uploading model into container now
2025-06-11 12:12:58,752:INFO:_master_model_container: 4
2025-06-11 12:12:58,752:INFO:_display_container: 2
2025-06-11 12:12:58,753:INFO:ElasticNet(random_state=123)
2025-06-11 12:12:58,754:INFO:create_model() successfully completed......................................
2025-06-11 12:12:58,870:INFO:SubProcess create_model() end ==================================
2025-06-11 12:12:58,870:INFO:Creating metrics dataframe
2025-06-11 12:12:58,883:INFO:Initializing Least Angle Regression
2025-06-11 12:12:58,883:INFO:Total runtime is 0.16171799898147582 minutes
2025-06-11 12:12:58,890:INFO:SubProcess create_model() called ==================================
2025-06-11 12:12:58,891:INFO:Initializing create_model()
2025-06-11 12:12:58,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:12:58,891:INFO:Checking exceptions
2025-06-11 12:12:58,891:INFO:Importing libraries
2025-06-11 12:12:58,891:INFO:Copying training dataset
2025-06-11 12:12:58,906:INFO:Defining folds
2025-06-11 12:12:58,907:INFO:Declaring metric variables
2025-06-11 12:12:58,921:INFO:Importing untrained model
2025-06-11 12:12:58,932:INFO:Least Angle Regression Imported successfully
2025-06-11 12:12:58,950:INFO:Starting cross validation
2025-06-11 12:12:58,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:12:59,383:INFO:Calculating mean and std
2025-06-11 12:12:59,384:INFO:Creating metrics dataframe
2025-06-11 12:12:59,386:INFO:Uploading results into container
2025-06-11 12:12:59,388:INFO:Uploading model into container now
2025-06-11 12:12:59,391:INFO:_master_model_container: 5
2025-06-11 12:12:59,391:INFO:_display_container: 2
2025-06-11 12:12:59,391:INFO:Lars(random_state=123)
2025-06-11 12:12:59,391:INFO:create_model() successfully completed......................................
2025-06-11 12:12:59,468:INFO:SubProcess create_model() end ==================================
2025-06-11 12:12:59,468:INFO:Creating metrics dataframe
2025-06-11 12:12:59,475:INFO:Initializing Lasso Least Angle Regression
2025-06-11 12:12:59,475:INFO:Total runtime is 0.17158435583114623 minutes
2025-06-11 12:12:59,481:INFO:SubProcess create_model() called ==================================
2025-06-11 12:12:59,482:INFO:Initializing create_model()
2025-06-11 12:12:59,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:12:59,482:INFO:Checking exceptions
2025-06-11 12:12:59,482:INFO:Importing libraries
2025-06-11 12:12:59,484:INFO:Copying training dataset
2025-06-11 12:12:59,491:INFO:Defining folds
2025-06-11 12:12:59,491:INFO:Declaring metric variables
2025-06-11 12:12:59,501:INFO:Importing untrained model
2025-06-11 12:12:59,506:INFO:Lasso Least Angle Regression Imported successfully
2025-06-11 12:12:59,517:INFO:Starting cross validation
2025-06-11 12:12:59,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:12:59,887:INFO:Calculating mean and std
2025-06-11 12:12:59,888:INFO:Creating metrics dataframe
2025-06-11 12:12:59,891:INFO:Uploading results into container
2025-06-11 12:12:59,891:INFO:Uploading model into container now
2025-06-11 12:12:59,892:INFO:_master_model_container: 6
2025-06-11 12:12:59,893:INFO:_display_container: 2
2025-06-11 12:12:59,893:INFO:LassoLars(random_state=123)
2025-06-11 12:12:59,895:INFO:create_model() successfully completed......................................
2025-06-11 12:12:59,968:INFO:SubProcess create_model() end ==================================
2025-06-11 12:12:59,970:INFO:Creating metrics dataframe
2025-06-11 12:12:59,976:INFO:Initializing Orthogonal Matching Pursuit
2025-06-11 12:12:59,976:INFO:Total runtime is 0.17992884318033853 minutes
2025-06-11 12:12:59,983:INFO:SubProcess create_model() called ==================================
2025-06-11 12:12:59,984:INFO:Initializing create_model()
2025-06-11 12:12:59,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:12:59,984:INFO:Checking exceptions
2025-06-11 12:12:59,984:INFO:Importing libraries
2025-06-11 12:12:59,984:INFO:Copying training dataset
2025-06-11 12:12:59,992:INFO:Defining folds
2025-06-11 12:12:59,992:INFO:Declaring metric variables
2025-06-11 12:12:59,998:INFO:Importing untrained model
2025-06-11 12:13:00,007:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-11 12:13:00,022:INFO:Starting cross validation
2025-06-11 12:13:00,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:00,375:INFO:Calculating mean and std
2025-06-11 12:13:00,376:INFO:Creating metrics dataframe
2025-06-11 12:13:00,385:INFO:Uploading results into container
2025-06-11 12:13:00,385:INFO:Uploading model into container now
2025-06-11 12:13:00,386:INFO:_master_model_container: 7
2025-06-11 12:13:00,386:INFO:_display_container: 2
2025-06-11 12:13:00,386:INFO:OrthogonalMatchingPursuit()
2025-06-11 12:13:00,386:INFO:create_model() successfully completed......................................
2025-06-11 12:13:00,458:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:00,458:INFO:Creating metrics dataframe
2025-06-11 12:13:00,465:INFO:Initializing Bayesian Ridge
2025-06-11 12:13:00,465:INFO:Total runtime is 0.18808053731918334 minutes
2025-06-11 12:13:00,468:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:00,470:INFO:Initializing create_model()
2025-06-11 12:13:00,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:00,472:INFO:Checking exceptions
2025-06-11 12:13:00,472:INFO:Importing libraries
2025-06-11 12:13:00,472:INFO:Copying training dataset
2025-06-11 12:13:00,481:INFO:Defining folds
2025-06-11 12:13:00,481:INFO:Declaring metric variables
2025-06-11 12:13:00,488:INFO:Importing untrained model
2025-06-11 12:13:00,494:INFO:Bayesian Ridge Imported successfully
2025-06-11 12:13:00,508:INFO:Starting cross validation
2025-06-11 12:13:00,508:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:00,874:INFO:Calculating mean and std
2025-06-11 12:13:00,875:INFO:Creating metrics dataframe
2025-06-11 12:13:00,882:INFO:Uploading results into container
2025-06-11 12:13:00,884:INFO:Uploading model into container now
2025-06-11 12:13:00,884:INFO:_master_model_container: 8
2025-06-11 12:13:00,884:INFO:_display_container: 2
2025-06-11 12:13:00,884:INFO:BayesianRidge()
2025-06-11 12:13:00,884:INFO:create_model() successfully completed......................................
2025-06-11 12:13:00,955:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:00,955:INFO:Creating metrics dataframe
2025-06-11 12:13:00,963:INFO:Initializing Passive Aggressive Regressor
2025-06-11 12:13:00,963:INFO:Total runtime is 0.196372389793396 minutes
2025-06-11 12:13:00,966:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:00,967:INFO:Initializing create_model()
2025-06-11 12:13:00,967:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:00,967:INFO:Checking exceptions
2025-06-11 12:13:00,967:INFO:Importing libraries
2025-06-11 12:13:00,967:INFO:Copying training dataset
2025-06-11 12:13:00,982:INFO:Defining folds
2025-06-11 12:13:00,982:INFO:Declaring metric variables
2025-06-11 12:13:00,985:INFO:Importing untrained model
2025-06-11 12:13:00,996:INFO:Passive Aggressive Regressor Imported successfully
2025-06-11 12:13:01,008:INFO:Starting cross validation
2025-06-11 12:13:01,010:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:01,470:INFO:Calculating mean and std
2025-06-11 12:13:01,472:INFO:Creating metrics dataframe
2025-06-11 12:13:01,478:INFO:Uploading results into container
2025-06-11 12:13:01,482:INFO:Uploading model into container now
2025-06-11 12:13:01,482:INFO:_master_model_container: 9
2025-06-11 12:13:01,482:INFO:_display_container: 2
2025-06-11 12:13:01,482:INFO:PassiveAggressiveRegressor(random_state=123)
2025-06-11 12:13:01,482:INFO:create_model() successfully completed......................................
2025-06-11 12:13:01,552:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:01,552:INFO:Creating metrics dataframe
2025-06-11 12:13:01,562:INFO:Initializing Huber Regressor
2025-06-11 12:13:01,562:INFO:Total runtime is 0.20635555585225424 minutes
2025-06-11 12:13:01,567:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:01,569:INFO:Initializing create_model()
2025-06-11 12:13:01,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:01,569:INFO:Checking exceptions
2025-06-11 12:13:01,570:INFO:Importing libraries
2025-06-11 12:13:01,570:INFO:Copying training dataset
2025-06-11 12:13:01,578:INFO:Defining folds
2025-06-11 12:13:01,578:INFO:Declaring metric variables
2025-06-11 12:13:01,589:INFO:Importing untrained model
2025-06-11 12:13:01,595:INFO:Huber Regressor Imported successfully
2025-06-11 12:13:01,608:INFO:Starting cross validation
2025-06-11 12:13:01,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:01,854:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:01,858:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:01,891:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:01,891:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:02,118:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:02,121:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:02,171:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:02,176:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:02,307:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 12:13:02,346:INFO:Calculating mean and std
2025-06-11 12:13:02,347:INFO:Creating metrics dataframe
2025-06-11 12:13:02,352:INFO:Uploading results into container
2025-06-11 12:13:02,353:INFO:Uploading model into container now
2025-06-11 12:13:02,353:INFO:_master_model_container: 10
2025-06-11 12:13:02,354:INFO:_display_container: 2
2025-06-11 12:13:02,355:INFO:HuberRegressor()
2025-06-11 12:13:02,355:INFO:create_model() successfully completed......................................
2025-06-11 12:13:02,428:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:02,428:INFO:Creating metrics dataframe
2025-06-11 12:13:02,437:INFO:Initializing K Neighbors Regressor
2025-06-11 12:13:02,437:INFO:Total runtime is 0.2209423263867696 minutes
2025-06-11 12:13:02,442:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:02,443:INFO:Initializing create_model()
2025-06-11 12:13:02,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:02,443:INFO:Checking exceptions
2025-06-11 12:13:02,443:INFO:Importing libraries
2025-06-11 12:13:02,443:INFO:Copying training dataset
2025-06-11 12:13:02,452:INFO:Defining folds
2025-06-11 12:13:02,452:INFO:Declaring metric variables
2025-06-11 12:13:02,457:INFO:Importing untrained model
2025-06-11 12:13:02,467:INFO:K Neighbors Regressor Imported successfully
2025-06-11 12:13:02,475:INFO:Starting cross validation
2025-06-11 12:13:02,478:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:02,954:INFO:Calculating mean and std
2025-06-11 12:13:02,955:INFO:Creating metrics dataframe
2025-06-11 12:13:02,957:INFO:Uploading results into container
2025-06-11 12:13:02,958:INFO:Uploading model into container now
2025-06-11 12:13:02,959:INFO:_master_model_container: 11
2025-06-11 12:13:02,961:INFO:_display_container: 2
2025-06-11 12:13:02,962:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-11 12:13:02,962:INFO:create_model() successfully completed......................................
2025-06-11 12:13:03,034:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:03,034:INFO:Creating metrics dataframe
2025-06-11 12:13:03,042:INFO:Initializing Decision Tree Regressor
2025-06-11 12:13:03,043:INFO:Total runtime is 0.23105303049087525 minutes
2025-06-11 12:13:03,048:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:03,050:INFO:Initializing create_model()
2025-06-11 12:13:03,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:03,050:INFO:Checking exceptions
2025-06-11 12:13:03,050:INFO:Importing libraries
2025-06-11 12:13:03,050:INFO:Copying training dataset
2025-06-11 12:13:03,056:INFO:Defining folds
2025-06-11 12:13:03,057:INFO:Declaring metric variables
2025-06-11 12:13:03,067:INFO:Importing untrained model
2025-06-11 12:13:03,074:INFO:Decision Tree Regressor Imported successfully
2025-06-11 12:13:03,085:INFO:Starting cross validation
2025-06-11 12:13:03,086:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:03,611:INFO:Calculating mean and std
2025-06-11 12:13:03,613:INFO:Creating metrics dataframe
2025-06-11 12:13:03,617:INFO:Uploading results into container
2025-06-11 12:13:03,618:INFO:Uploading model into container now
2025-06-11 12:13:03,620:INFO:_master_model_container: 12
2025-06-11 12:13:03,620:INFO:_display_container: 2
2025-06-11 12:13:03,620:INFO:DecisionTreeRegressor(random_state=123)
2025-06-11 12:13:03,620:INFO:create_model() successfully completed......................................
2025-06-11 12:13:03,701:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:03,701:INFO:Creating metrics dataframe
2025-06-11 12:13:03,713:INFO:Initializing Random Forest Regressor
2025-06-11 12:13:03,713:INFO:Total runtime is 0.2422162612279256 minutes
2025-06-11 12:13:03,718:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:03,720:INFO:Initializing create_model()
2025-06-11 12:13:03,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:03,720:INFO:Checking exceptions
2025-06-11 12:13:03,720:INFO:Importing libraries
2025-06-11 12:13:03,720:INFO:Copying training dataset
2025-06-11 12:13:03,730:INFO:Defining folds
2025-06-11 12:13:03,730:INFO:Declaring metric variables
2025-06-11 12:13:03,740:INFO:Importing untrained model
2025-06-11 12:13:03,748:INFO:Random Forest Regressor Imported successfully
2025-06-11 12:13:03,760:INFO:Starting cross validation
2025-06-11 12:13:03,762:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:16,888:INFO:Calculating mean and std
2025-06-11 12:13:16,891:INFO:Creating metrics dataframe
2025-06-11 12:13:16,896:INFO:Uploading results into container
2025-06-11 12:13:16,898:INFO:Uploading model into container now
2025-06-11 12:13:16,898:INFO:_master_model_container: 13
2025-06-11 12:13:16,898:INFO:_display_container: 2
2025-06-11 12:13:16,900:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-06-11 12:13:16,901:INFO:create_model() successfully completed......................................
2025-06-11 12:13:17,003:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:17,003:INFO:Creating metrics dataframe
2025-06-11 12:13:17,020:INFO:Initializing Extra Trees Regressor
2025-06-11 12:13:17,020:INFO:Total runtime is 0.46398662726084394 minutes
2025-06-11 12:13:17,025:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:17,027:INFO:Initializing create_model()
2025-06-11 12:13:17,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:17,027:INFO:Checking exceptions
2025-06-11 12:13:17,027:INFO:Importing libraries
2025-06-11 12:13:17,027:INFO:Copying training dataset
2025-06-11 12:13:17,042:INFO:Defining folds
2025-06-11 12:13:17,042:INFO:Declaring metric variables
2025-06-11 12:13:17,054:INFO:Importing untrained model
2025-06-11 12:13:17,064:INFO:Extra Trees Regressor Imported successfully
2025-06-11 12:13:17,079:INFO:Starting cross validation
2025-06-11 12:13:17,082:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:24,898:INFO:Calculating mean and std
2025-06-11 12:13:24,901:INFO:Creating metrics dataframe
2025-06-11 12:13:24,905:INFO:Uploading results into container
2025-06-11 12:13:24,906:INFO:Uploading model into container now
2025-06-11 12:13:24,907:INFO:_master_model_container: 14
2025-06-11 12:13:24,908:INFO:_display_container: 2
2025-06-11 12:13:24,908:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-06-11 12:13:24,908:INFO:create_model() successfully completed......................................
2025-06-11 12:13:25,020:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:25,020:INFO:Creating metrics dataframe
2025-06-11 12:13:25,042:INFO:Initializing AdaBoost Regressor
2025-06-11 12:13:25,043:INFO:Total runtime is 0.5977184653282166 minutes
2025-06-11 12:13:25,050:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:25,051:INFO:Initializing create_model()
2025-06-11 12:13:25,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:25,051:INFO:Checking exceptions
2025-06-11 12:13:25,051:INFO:Importing libraries
2025-06-11 12:13:25,053:INFO:Copying training dataset
2025-06-11 12:13:25,071:INFO:Defining folds
2025-06-11 12:13:25,071:INFO:Declaring metric variables
2025-06-11 12:13:25,083:INFO:Importing untrained model
2025-06-11 12:13:25,090:INFO:AdaBoost Regressor Imported successfully
2025-06-11 12:13:25,106:INFO:Starting cross validation
2025-06-11 12:13:25,110:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:26,896:INFO:Calculating mean and std
2025-06-11 12:13:26,899:INFO:Creating metrics dataframe
2025-06-11 12:13:26,904:INFO:Uploading results into container
2025-06-11 12:13:26,906:INFO:Uploading model into container now
2025-06-11 12:13:26,907:INFO:_master_model_container: 15
2025-06-11 12:13:26,908:INFO:_display_container: 2
2025-06-11 12:13:26,908:INFO:AdaBoostRegressor(random_state=123)
2025-06-11 12:13:26,908:INFO:create_model() successfully completed......................................
2025-06-11 12:13:27,007:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:27,008:INFO:Creating metrics dataframe
2025-06-11 12:13:27,026:INFO:Initializing Gradient Boosting Regressor
2025-06-11 12:13:27,027:INFO:Total runtime is 0.6307655851046244 minutes
2025-06-11 12:13:27,035:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:27,035:INFO:Initializing create_model()
2025-06-11 12:13:27,035:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:27,036:INFO:Checking exceptions
2025-06-11 12:13:27,036:INFO:Importing libraries
2025-06-11 12:13:27,036:INFO:Copying training dataset
2025-06-11 12:13:27,051:INFO:Defining folds
2025-06-11 12:13:27,051:INFO:Declaring metric variables
2025-06-11 12:13:27,063:INFO:Importing untrained model
2025-06-11 12:13:27,069:INFO:Gradient Boosting Regressor Imported successfully
2025-06-11 12:13:27,087:INFO:Starting cross validation
2025-06-11 12:13:27,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:31,541:INFO:Calculating mean and std
2025-06-11 12:13:31,542:INFO:Creating metrics dataframe
2025-06-11 12:13:31,547:INFO:Uploading results into container
2025-06-11 12:13:31,547:INFO:Uploading model into container now
2025-06-11 12:13:31,548:INFO:_master_model_container: 16
2025-06-11 12:13:31,549:INFO:_display_container: 2
2025-06-11 12:13:31,549:INFO:GradientBoostingRegressor(random_state=123)
2025-06-11 12:13:31,551:INFO:create_model() successfully completed......................................
2025-06-11 12:13:31,653:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:31,653:INFO:Creating metrics dataframe
2025-06-11 12:13:31,671:INFO:Initializing Light Gradient Boosting Machine
2025-06-11 12:13:31,671:INFO:Total runtime is 0.7081841111183167 minutes
2025-06-11 12:13:31,680:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:31,680:INFO:Initializing create_model()
2025-06-11 12:13:31,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:31,681:INFO:Checking exceptions
2025-06-11 12:13:31,681:INFO:Importing libraries
2025-06-11 12:13:31,681:INFO:Copying training dataset
2025-06-11 12:13:31,694:INFO:Defining folds
2025-06-11 12:13:31,694:INFO:Declaring metric variables
2025-06-11 12:13:31,704:INFO:Importing untrained model
2025-06-11 12:13:31,718:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-11 12:13:31,737:INFO:Starting cross validation
2025-06-11 12:13:31,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:33,829:INFO:Calculating mean and std
2025-06-11 12:13:33,831:INFO:Creating metrics dataframe
2025-06-11 12:13:33,836:INFO:Uploading results into container
2025-06-11 12:13:33,838:INFO:Uploading model into container now
2025-06-11 12:13:33,840:INFO:_master_model_container: 17
2025-06-11 12:13:33,840:INFO:_display_container: 2
2025-06-11 12:13:33,840:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-06-11 12:13:33,841:INFO:create_model() successfully completed......................................
2025-06-11 12:13:33,988:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:33,988:INFO:Creating metrics dataframe
2025-06-11 12:13:34,000:INFO:Initializing Dummy Regressor
2025-06-11 12:13:34,000:INFO:Total runtime is 0.7469890435536702 minutes
2025-06-11 12:13:34,008:INFO:SubProcess create_model() called ==================================
2025-06-11 12:13:34,008:INFO:Initializing create_model()
2025-06-11 12:13:34,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D64E189BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:34,008:INFO:Checking exceptions
2025-06-11 12:13:34,008:INFO:Importing libraries
2025-06-11 12:13:34,009:INFO:Copying training dataset
2025-06-11 12:13:34,022:INFO:Defining folds
2025-06-11 12:13:34,023:INFO:Declaring metric variables
2025-06-11 12:13:34,033:INFO:Importing untrained model
2025-06-11 12:13:34,041:INFO:Dummy Regressor Imported successfully
2025-06-11 12:13:34,055:INFO:Starting cross validation
2025-06-11 12:13:34,058:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:13:34,440:INFO:Calculating mean and std
2025-06-11 12:13:34,442:INFO:Creating metrics dataframe
2025-06-11 12:13:34,448:INFO:Uploading results into container
2025-06-11 12:13:34,450:INFO:Uploading model into container now
2025-06-11 12:13:34,451:INFO:_master_model_container: 18
2025-06-11 12:13:34,451:INFO:_display_container: 2
2025-06-11 12:13:34,451:INFO:DummyRegressor()
2025-06-11 12:13:34,451:INFO:create_model() successfully completed......................................
2025-06-11 12:13:34,542:INFO:SubProcess create_model() end ==================================
2025-06-11 12:13:34,542:INFO:Creating metrics dataframe
2025-06-11 12:13:34,561:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-11 12:13:34,582:INFO:Initializing create_model()
2025-06-11 12:13:34,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:13:34,583:INFO:Checking exceptions
2025-06-11 12:13:34,586:INFO:Importing libraries
2025-06-11 12:13:34,586:INFO:Copying training dataset
2025-06-11 12:13:34,602:INFO:Defining folds
2025-06-11 12:13:34,602:INFO:Declaring metric variables
2025-06-11 12:13:34,603:INFO:Importing untrained model
2025-06-11 12:13:34,603:INFO:Declaring custom model
2025-06-11 12:13:34,604:INFO:Gradient Boosting Regressor Imported successfully
2025-06-11 12:13:34,606:INFO:Cross validation set to False
2025-06-11 12:13:34,606:INFO:Fitting Model
2025-06-11 12:13:35,643:INFO:GradientBoostingRegressor(random_state=123)
2025-06-11 12:13:35,643:INFO:create_model() successfully completed......................................
2025-06-11 12:13:35,780:INFO:_master_model_container: 18
2025-06-11 12:13:35,780:INFO:_display_container: 2
2025-06-11 12:13:35,782:INFO:GradientBoostingRegressor(random_state=123)
2025-06-11 12:13:35,782:INFO:compare_models() successfully completed......................................
2025-06-11 12:13:39,877:INFO:Initializing tune_model()
2025-06-11 12:13:39,877:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>)
2025-06-11 12:13:39,878:INFO:Checking exceptions
2025-06-11 12:13:39,878:INFO:Soft dependency imported: skopt: 0.10.2
2025-06-11 12:13:39,994:INFO:Copying training dataset
2025-06-11 12:13:40,009:INFO:Checking base model
2025-06-11 12:13:40,009:INFO:Base model : Gradient Boosting Regressor
2025-06-11 12:13:40,019:INFO:Declaring metric variables
2025-06-11 12:13:40,029:INFO:Defining Hyperparameters
2025-06-11 12:13:40,234:INFO:Tuning with n_jobs=-1
2025-06-11 12:13:40,238:INFO:Initializing skopt.BayesSearchCV
2025-06-11 12:14:18,654:INFO:best_params: OrderedDict([('actual_estimator__learning_rate', 0.0238190072917794), ('actual_estimator__max_depth', 3), ('actual_estimator__max_features', 0.4284489606984907), ('actual_estimator__min_impurity_decrease', 0.002646746704757545), ('actual_estimator__min_samples_leaf', 5), ('actual_estimator__min_samples_split', 9), ('actual_estimator__n_estimators', 239), ('actual_estimator__subsample', 0.7687727671549709)])
2025-06-11 12:14:18,655:INFO:Hyperparameter search completed
2025-06-11 12:14:18,655:INFO:SubProcess create_model() called ==================================
2025-06-11 12:14:18,655:INFO:Initializing create_model()
2025-06-11 12:14:18,655:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6473A4520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'learning_rate': 0.0238190072917794, 'max_depth': 3, 'max_features': 0.4284489606984907, 'min_impurity_decrease': 0.002646746704757545, 'min_samples_leaf': 5, 'min_samples_split': 9, 'n_estimators': 239, 'subsample': 0.7687727671549709})
2025-06-11 12:14:18,655:INFO:Checking exceptions
2025-06-11 12:14:18,656:INFO:Importing libraries
2025-06-11 12:14:18,656:INFO:Copying training dataset
2025-06-11 12:14:18,665:INFO:Defining folds
2025-06-11 12:14:18,666:INFO:Declaring metric variables
2025-06-11 12:14:18,672:INFO:Importing untrained model
2025-06-11 12:14:18,673:INFO:Declaring custom model
2025-06-11 12:14:18,680:INFO:Gradient Boosting Regressor Imported successfully
2025-06-11 12:14:18,689:INFO:Starting cross validation
2025-06-11 12:14:18,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:14:22,652:INFO:Calculating mean and std
2025-06-11 12:14:22,653:INFO:Creating metrics dataframe
2025-06-11 12:14:22,659:INFO:Finalizing model
2025-06-11 12:14:23,622:INFO:Uploading results into container
2025-06-11 12:14:23,624:INFO:Uploading model into container now
2025-06-11 12:14:23,626:INFO:_master_model_container: 19
2025-06-11 12:14:23,626:INFO:_display_container: 3
2025-06-11 12:14:23,626:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-11 12:14:23,626:INFO:create_model() successfully completed......................................
2025-06-11 12:14:23,710:INFO:SubProcess create_model() end ==================================
2025-06-11 12:14:23,711:INFO:choose_better activated
2025-06-11 12:14:23,714:INFO:SubProcess create_model() called ==================================
2025-06-11 12:14:23,714:INFO:Initializing create_model()
2025-06-11 12:14:23,714:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:14:23,714:INFO:Checking exceptions
2025-06-11 12:14:23,718:INFO:Importing libraries
2025-06-11 12:14:23,718:INFO:Copying training dataset
2025-06-11 12:14:23,725:INFO:Defining folds
2025-06-11 12:14:23,725:INFO:Declaring metric variables
2025-06-11 12:14:23,725:INFO:Importing untrained model
2025-06-11 12:14:23,725:INFO:Declaring custom model
2025-06-11 12:14:23,726:INFO:Gradient Boosting Regressor Imported successfully
2025-06-11 12:14:23,726:INFO:Starting cross validation
2025-06-11 12:14:23,727:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 12:14:27,645:INFO:Calculating mean and std
2025-06-11 12:14:27,646:INFO:Creating metrics dataframe
2025-06-11 12:14:27,647:INFO:Finalizing model
2025-06-11 12:14:28,634:INFO:Uploading results into container
2025-06-11 12:14:28,635:INFO:Uploading model into container now
2025-06-11 12:14:28,635:INFO:_master_model_container: 20
2025-06-11 12:14:28,635:INFO:_display_container: 4
2025-06-11 12:14:28,636:INFO:GradientBoostingRegressor(random_state=123)
2025-06-11 12:14:28,636:INFO:create_model() successfully completed......................................
2025-06-11 12:14:28,706:INFO:SubProcess create_model() end ==================================
2025-06-11 12:14:28,706:INFO:GradientBoostingRegressor(random_state=123) result for R2 is 0.4411
2025-06-11 12:14:28,707:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) result for R2 is 0.4797
2025-06-11 12:14:28,707:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) is best model
2025-06-11 12:14:28,707:INFO:choose_better completed
2025-06-11 12:14:28,718:INFO:_master_model_container: 20
2025-06-11 12:14:28,718:INFO:_display_container: 3
2025-06-11 12:14:28,720:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-11 12:14:28,720:INFO:tune_model() successfully completed......................................
2025-06-11 12:14:35,366:INFO:Initializing finalize_model()
2025-06-11 12:14:35,367:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-11 12:14:35,368:INFO:Finalizing GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-11 12:14:35,378:INFO:Initializing create_model()
2025-06-11 12:14:35,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D64CE67AC0>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 12:14:35,378:INFO:Checking exceptions
2025-06-11 12:14:35,382:INFO:Importing libraries
2025-06-11 12:14:35,382:INFO:Copying training dataset
2025-06-11 12:14:35,383:INFO:Defining folds
2025-06-11 12:14:35,383:INFO:Declaring metric variables
2025-06-11 12:14:35,384:INFO:Importing untrained model
2025-06-11 12:14:35,384:INFO:Declaring custom model
2025-06-11 12:14:35,385:INFO:Gradient Boosting Regressor Imported successfully
2025-06-11 12:14:35,387:INFO:Cross validation set to False
2025-06-11 12:14:35,387:INFO:Fitting Model
2025-06-11 12:14:36,713:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-11 12:14:36,713:INFO:create_model() successfully completed......................................
2025-06-11 12:14:36,786:INFO:_master_model_container: 20
2025-06-11 12:14:36,786:INFO:_display_container: 3
2025-06-11 12:14:36,794:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-11 12:14:36,794:INFO:finalize_model() successfully completed......................................
2025-06-11 12:14:36,880:INFO:Initializing save_model()
2025-06-11 12:14:36,880:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), model_name=bigmart_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-11 12:14:36,880:INFO:Adding model into prep_pipe
2025-06-11 12:14:36,880:WARNING:Only Model saved as it was a pipeline.
2025-06-11 12:14:36,898:INFO:bigmart_best_model.pkl saved in current working directory
2025-06-11 12:14:36,908:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-11 12:14:36,908:INFO:save_model() successfully completed......................................
2025-06-11 12:15:17,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:15:17,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:15:17,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:15:17,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 12:15:17,348:INFO:Initializing load_model()
2025-06-11 12:15:17,348:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-11 12:15:26,622:INFO:Initializing load_model()
2025-06-11 12:15:26,622:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-11 12:15:26,687:INFO:Initializing predict_model()
2025-06-11 12:15:26,687:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000206CA5163E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP', 'Outlet_Identifier',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['...
                 TransformerWrapper(include=['Item_Identifier'],
                                    transformer=TargetEncoder(cols=['Item_Identifier'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206CA7A6680>)
2025-06-11 12:15:26,687:INFO:Checking exceptions
2025-06-11 12:15:26,688:INFO:Preloading libraries
2025-06-11 12:15:26,688:INFO:Set up data.
2025-06-11 12:15:26,705:INFO:Set up index.
2025-06-13 12:12:17,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:12:17,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:12:17,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:12:17,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:13:45,719:INFO:PyCaret RegressionExperiment
2025-06-13 12:13:45,719:INFO:Logging name: reg-default-name
2025-06-13 12:13:45,719:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-13 12:13:45,721:INFO:version 3.3.2
2025-06-13 12:13:45,721:INFO:Initializing setup()
2025-06-13 12:13:45,721:INFO:self.USI: f12e
2025-06-13 12:13:45,721:INFO:self._variable_keys: {'memory', 'log_plots_param', 'y_test', 'USI', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'target_param', 'gpu_n_jobs_param', 'fold_generator', 'html_param', 'fold_groups_param', 'gpu_param', '_ml_usecase', 'X_train', 'transform_target_param', 'exp_id', 'n_jobs_param', 'data', 'pipeline', 'y', 'X_test', '_available_plots', 'X', 'logging_param', 'seed', 'idx'}
2025-06-13 12:13:45,721:INFO:Checking environment
2025-06-13 12:13:45,722:INFO:python_version: 3.10.11
2025-06-13 12:13:45,722:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-13 12:13:45,722:INFO:machine: AMD64
2025-06-13 12:13:45,722:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-13 12:13:45,728:INFO:Memory: svmem(total=8316121088, available=1097072640, percent=86.8, used=7219048448, free=1097072640)
2025-06-13 12:13:45,728:INFO:Physical Core: 2
2025-06-13 12:13:45,728:INFO:Logical Core: 4
2025-06-13 12:13:45,729:INFO:Checking libraries
2025-06-13 12:13:45,729:INFO:System:
2025-06-13 12:13:45,729:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-13 12:13:45,729:INFO:executable: c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\Scripts\python.exe
2025-06-13 12:13:45,729:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-13 12:13:45,729:INFO:PyCaret required dependencies:
2025-06-13 12:13:45,873:INFO:                 pip: 25.1.1
2025-06-13 12:13:45,873:INFO:          setuptools: 65.5.0
2025-06-13 12:13:45,873:INFO:             pycaret: 3.3.2
2025-06-13 12:13:45,873:INFO:             IPython: 8.37.0
2025-06-13 12:13:45,874:INFO:          ipywidgets: 8.1.7
2025-06-13 12:13:45,874:INFO:                tqdm: 4.67.1
2025-06-13 12:13:45,874:INFO:               numpy: 1.26.4
2025-06-13 12:13:45,874:INFO:              pandas: 2.1.4
2025-06-13 12:13:45,874:INFO:              jinja2: 3.1.6
2025-06-13 12:13:45,874:INFO:               scipy: 1.11.4
2025-06-13 12:13:45,874:INFO:              joblib: 1.3.2
2025-06-13 12:13:45,874:INFO:             sklearn: 1.4.2
2025-06-13 12:13:45,874:INFO:                pyod: 2.0.5
2025-06-13 12:13:45,874:INFO:            imblearn: 0.13.0
2025-06-13 12:13:45,875:INFO:   category_encoders: 2.7.0
2025-06-13 12:13:45,875:INFO:            lightgbm: 4.6.0
2025-06-13 12:13:45,875:INFO:               numba: 0.61.2
2025-06-13 12:13:45,875:INFO:            requests: 2.32.3
2025-06-13 12:13:45,875:INFO:          matplotlib: 3.7.5
2025-06-13 12:13:45,875:INFO:          scikitplot: 0.3.7
2025-06-13 12:13:45,875:INFO:         yellowbrick: 1.5
2025-06-13 12:13:45,875:INFO:              plotly: 5.24.1
2025-06-13 12:13:45,875:INFO:    plotly-resampler: Not installed
2025-06-13 12:13:45,875:INFO:             kaleido: 0.2.1
2025-06-13 12:13:45,876:INFO:           schemdraw: 0.15
2025-06-13 12:13:45,876:INFO:         statsmodels: 0.14.4
2025-06-13 12:13:45,876:INFO:              sktime: 0.26.0
2025-06-13 12:13:45,876:INFO:               tbats: 1.1.3
2025-06-13 12:13:45,876:INFO:            pmdarima: 2.0.4
2025-06-13 12:13:45,876:INFO:              psutil: 7.0.0
2025-06-13 12:13:45,876:INFO:          markupsafe: 3.0.2
2025-06-13 12:13:45,876:INFO:             pickle5: Not installed
2025-06-13 12:13:45,876:INFO:         cloudpickle: 3.1.1
2025-06-13 12:13:45,876:INFO:         deprecation: 2.1.0
2025-06-13 12:13:45,876:INFO:              xxhash: 3.5.0
2025-06-13 12:13:45,876:INFO:           wurlitzer: Not installed
2025-06-13 12:13:45,876:INFO:PyCaret optional dependencies:
2025-06-13 12:13:45,955:INFO:                shap: Not installed
2025-06-13 12:13:45,956:INFO:           interpret: Not installed
2025-06-13 12:13:45,956:INFO:                umap: Not installed
2025-06-13 12:13:45,956:INFO:     ydata_profiling: Not installed
2025-06-13 12:13:45,956:INFO:  explainerdashboard: Not installed
2025-06-13 12:13:45,956:INFO:             autoviz: Not installed
2025-06-13 12:13:45,956:INFO:           fairlearn: Not installed
2025-06-13 12:13:45,956:INFO:          deepchecks: Not installed
2025-06-13 12:13:45,956:INFO:             xgboost: Not installed
2025-06-13 12:13:45,957:INFO:            catboost: Not installed
2025-06-13 12:13:45,957:INFO:              kmodes: Not installed
2025-06-13 12:13:45,957:INFO:             mlxtend: Not installed
2025-06-13 12:13:45,957:INFO:       statsforecast: Not installed
2025-06-13 12:13:45,957:INFO:        tune_sklearn: Not installed
2025-06-13 12:13:45,957:INFO:                 ray: Not installed
2025-06-13 12:13:45,957:INFO:            hyperopt: 0.2.7
2025-06-13 12:13:45,958:INFO:              optuna: 4.3.0
2025-06-13 12:13:45,958:INFO:               skopt: 0.10.2
2025-06-13 12:13:45,958:INFO:              mlflow: Not installed
2025-06-13 12:13:45,959:INFO:              gradio: Not installed
2025-06-13 12:13:45,959:INFO:             fastapi: Not installed
2025-06-13 12:13:45,959:INFO:             uvicorn: Not installed
2025-06-13 12:13:45,959:INFO:              m2cgen: Not installed
2025-06-13 12:13:45,959:INFO:           evidently: Not installed
2025-06-13 12:13:45,959:INFO:               fugue: Not installed
2025-06-13 12:13:45,959:INFO:           streamlit: 1.45.1
2025-06-13 12:13:45,959:INFO:             prophet: Not installed
2025-06-13 12:13:45,960:INFO:None
2025-06-13 12:13:45,960:INFO:Set up data.
2025-06-13 12:13:46,020:INFO:Set up folding strategy.
2025-06-13 12:13:46,020:INFO:Set up train/test split.
2025-06-13 12:13:46,036:INFO:Set up index.
2025-06-13 12:13:46,038:INFO:Assigning column types.
2025-06-13 12:13:46,057:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-13 12:13:46,058:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,070:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,079:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:46,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:46,323:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,335:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,345:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,508:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,591:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:46,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:46,595:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-13 12:13:46,612:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,623:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,751:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:46,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:46,870:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-13 12:13:46,878:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:13:47,151:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:47,350:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:13:47,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:47,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:47,353:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-13 12:13:47,380:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:13:47,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:47,827:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:13:47,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:47,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:47,849:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:13:47,958:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:48,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:13:48,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:48,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:48,079:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-13 12:13:48,216:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:48,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:13:48,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:48,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:48,595:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:48,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:13:48,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:48,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:48,823:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-13 12:13:49,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:49,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:49,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:49,308:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:13:49,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:49,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:49,407:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-13 12:13:49,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:49,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:49,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:49,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:49,894:INFO:Preparing preprocessing pipeline...
2025-06-13 12:13:49,894:INFO:Set up simple imputation.
2025-06-13 12:13:49,945:INFO:Finished creating preprocessing pipeline.
2025-06-13 12:13:49,954:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-06-13 12:13:49,954:INFO:Creating final display dataframe.
2025-06-13 12:13:50,097:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Item_Outlet_Sales
2                   Target type         Regression
3           Original data shape         (8523, 10)
4        Transformed data shape         (8523, 10)
5   Transformed train set shape         (5966, 10)
6    Transformed test set shape         (2557, 10)
7              Numeric features                  9
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator              KFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   reg-default-name
18                          USI               f12e
2025-06-13 12:13:50,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:50,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:50,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:50,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:13:50,547:INFO:setup() successfully completed in 4.84s...............
2025-06-13 12:14:07,900:INFO:Initializing compare_models()
2025-06-13 12:14:07,901:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-13 12:14:07,901:INFO:Checking exceptions
2025-06-13 12:14:07,917:INFO:Preparing display monitor
2025-06-13 12:14:08,029:INFO:Initializing Linear Regression
2025-06-13 12:14:08,030:INFO:Total runtime is 1.666545867919922e-05 minutes
2025-06-13 12:14:08,039:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:08,040:INFO:Initializing create_model()
2025-06-13 12:14:08,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:08,040:INFO:Checking exceptions
2025-06-13 12:14:08,040:INFO:Importing libraries
2025-06-13 12:14:08,040:INFO:Copying training dataset
2025-06-13 12:14:08,098:INFO:Defining folds
2025-06-13 12:14:08,099:INFO:Declaring metric variables
2025-06-13 12:14:08,119:INFO:Importing untrained model
2025-06-13 12:14:08,130:INFO:Linear Regression Imported successfully
2025-06-13 12:14:08,153:INFO:Starting cross validation
2025-06-13 12:14:08,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:16,242:INFO:Calculating mean and std
2025-06-13 12:14:16,246:INFO:Creating metrics dataframe
2025-06-13 12:14:16,258:INFO:Uploading results into container
2025-06-13 12:14:16,259:INFO:Uploading model into container now
2025-06-13 12:14:16,263:INFO:_master_model_container: 1
2025-06-13 12:14:16,263:INFO:_display_container: 2
2025-06-13 12:14:16,264:INFO:LinearRegression(n_jobs=-1)
2025-06-13 12:14:16,264:INFO:create_model() successfully completed......................................
2025-06-13 12:14:16,387:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:16,387:INFO:Creating metrics dataframe
2025-06-13 12:14:16,399:INFO:Initializing Lasso Regression
2025-06-13 12:14:16,399:INFO:Total runtime is 0.1395022710164388 minutes
2025-06-13 12:14:16,408:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:16,409:INFO:Initializing create_model()
2025-06-13 12:14:16,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:16,414:INFO:Checking exceptions
2025-06-13 12:14:16,414:INFO:Importing libraries
2025-06-13 12:14:16,414:INFO:Copying training dataset
2025-06-13 12:14:16,486:INFO:Defining folds
2025-06-13 12:14:16,486:INFO:Declaring metric variables
2025-06-13 12:14:16,506:INFO:Importing untrained model
2025-06-13 12:14:16,523:INFO:Lasso Regression Imported successfully
2025-06-13 12:14:16,583:INFO:Starting cross validation
2025-06-13 12:14:16,585:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:16,820:INFO:Calculating mean and std
2025-06-13 12:14:16,822:INFO:Creating metrics dataframe
2025-06-13 12:14:16,825:INFO:Uploading results into container
2025-06-13 12:14:16,826:INFO:Uploading model into container now
2025-06-13 12:14:16,828:INFO:_master_model_container: 2
2025-06-13 12:14:16,829:INFO:_display_container: 2
2025-06-13 12:14:16,831:INFO:Lasso(random_state=123)
2025-06-13 12:14:16,832:INFO:create_model() successfully completed......................................
2025-06-13 12:14:16,966:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:16,966:INFO:Creating metrics dataframe
2025-06-13 12:14:16,985:INFO:Initializing Ridge Regression
2025-06-13 12:14:16,985:INFO:Total runtime is 0.14926639795303345 minutes
2025-06-13 12:14:16,996:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:16,998:INFO:Initializing create_model()
2025-06-13 12:14:16,999:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:16,999:INFO:Checking exceptions
2025-06-13 12:14:16,999:INFO:Importing libraries
2025-06-13 12:14:16,999:INFO:Copying training dataset
2025-06-13 12:14:17,022:INFO:Defining folds
2025-06-13 12:14:17,022:INFO:Declaring metric variables
2025-06-13 12:14:17,036:INFO:Importing untrained model
2025-06-13 12:14:17,042:INFO:Ridge Regression Imported successfully
2025-06-13 12:14:17,058:INFO:Starting cross validation
2025-06-13 12:14:17,062:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:17,241:INFO:Calculating mean and std
2025-06-13 12:14:17,242:INFO:Creating metrics dataframe
2025-06-13 12:14:17,246:INFO:Uploading results into container
2025-06-13 12:14:17,247:INFO:Uploading model into container now
2025-06-13 12:14:17,248:INFO:_master_model_container: 3
2025-06-13 12:14:17,249:INFO:_display_container: 2
2025-06-13 12:14:17,250:INFO:Ridge(random_state=123)
2025-06-13 12:14:17,250:INFO:create_model() successfully completed......................................
2025-06-13 12:14:17,358:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:17,358:INFO:Creating metrics dataframe
2025-06-13 12:14:17,371:INFO:Initializing Elastic Net
2025-06-13 12:14:17,371:INFO:Total runtime is 0.155702805519104 minutes
2025-06-13 12:14:17,378:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:17,379:INFO:Initializing create_model()
2025-06-13 12:14:17,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:17,379:INFO:Checking exceptions
2025-06-13 12:14:17,379:INFO:Importing libraries
2025-06-13 12:14:17,381:INFO:Copying training dataset
2025-06-13 12:14:17,397:INFO:Defining folds
2025-06-13 12:14:17,397:INFO:Declaring metric variables
2025-06-13 12:14:17,408:INFO:Importing untrained model
2025-06-13 12:14:17,421:INFO:Elastic Net Imported successfully
2025-06-13 12:14:17,444:INFO:Starting cross validation
2025-06-13 12:14:17,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:17,617:INFO:Calculating mean and std
2025-06-13 12:14:17,620:INFO:Creating metrics dataframe
2025-06-13 12:14:17,632:INFO:Uploading results into container
2025-06-13 12:14:17,635:INFO:Uploading model into container now
2025-06-13 12:14:17,635:INFO:_master_model_container: 4
2025-06-13 12:14:17,637:INFO:_display_container: 2
2025-06-13 12:14:17,637:INFO:ElasticNet(random_state=123)
2025-06-13 12:14:17,637:INFO:create_model() successfully completed......................................
2025-06-13 12:14:17,776:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:17,777:INFO:Creating metrics dataframe
2025-06-13 12:14:17,808:INFO:Initializing Least Angle Regression
2025-06-13 12:14:17,809:INFO:Total runtime is 0.16300097703933716 minutes
2025-06-13 12:14:17,834:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:17,838:INFO:Initializing create_model()
2025-06-13 12:14:17,839:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:17,839:INFO:Checking exceptions
2025-06-13 12:14:17,840:INFO:Importing libraries
2025-06-13 12:14:17,840:INFO:Copying training dataset
2025-06-13 12:14:17,908:INFO:Defining folds
2025-06-13 12:14:17,908:INFO:Declaring metric variables
2025-06-13 12:14:17,923:INFO:Importing untrained model
2025-06-13 12:14:17,934:INFO:Least Angle Regression Imported successfully
2025-06-13 12:14:17,952:INFO:Starting cross validation
2025-06-13 12:14:17,955:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:18,132:INFO:Calculating mean and std
2025-06-13 12:14:18,134:INFO:Creating metrics dataframe
2025-06-13 12:14:18,136:INFO:Uploading results into container
2025-06-13 12:14:18,136:INFO:Uploading model into container now
2025-06-13 12:14:18,137:INFO:_master_model_container: 5
2025-06-13 12:14:18,137:INFO:_display_container: 2
2025-06-13 12:14:18,137:INFO:Lars(random_state=123)
2025-06-13 12:14:18,139:INFO:create_model() successfully completed......................................
2025-06-13 12:14:18,264:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:18,264:INFO:Creating metrics dataframe
2025-06-13 12:14:18,275:INFO:Initializing Lasso Least Angle Regression
2025-06-13 12:14:18,275:INFO:Total runtime is 0.1707750956217448 minutes
2025-06-13 12:14:18,283:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:18,284:INFO:Initializing create_model()
2025-06-13 12:14:18,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:18,284:INFO:Checking exceptions
2025-06-13 12:14:18,285:INFO:Importing libraries
2025-06-13 12:14:18,285:INFO:Copying training dataset
2025-06-13 12:14:18,307:INFO:Defining folds
2025-06-13 12:14:18,308:INFO:Declaring metric variables
2025-06-13 12:14:18,316:INFO:Importing untrained model
2025-06-13 12:14:18,326:INFO:Lasso Least Angle Regression Imported successfully
2025-06-13 12:14:18,343:INFO:Starting cross validation
2025-06-13 12:14:18,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:18,540:INFO:Calculating mean and std
2025-06-13 12:14:18,543:INFO:Creating metrics dataframe
2025-06-13 12:14:18,556:INFO:Uploading results into container
2025-06-13 12:14:18,558:INFO:Uploading model into container now
2025-06-13 12:14:18,559:INFO:_master_model_container: 6
2025-06-13 12:14:18,559:INFO:_display_container: 2
2025-06-13 12:14:18,560:INFO:LassoLars(random_state=123)
2025-06-13 12:14:18,560:INFO:create_model() successfully completed......................................
2025-06-13 12:14:18,685:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:18,685:INFO:Creating metrics dataframe
2025-06-13 12:14:18,693:INFO:Initializing Orthogonal Matching Pursuit
2025-06-13 12:14:18,694:INFO:Total runtime is 0.17774713436762493 minutes
2025-06-13 12:14:18,702:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:18,703:INFO:Initializing create_model()
2025-06-13 12:14:18,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:18,704:INFO:Checking exceptions
2025-06-13 12:14:18,704:INFO:Importing libraries
2025-06-13 12:14:18,706:INFO:Copying training dataset
2025-06-13 12:14:18,723:INFO:Defining folds
2025-06-13 12:14:18,724:INFO:Declaring metric variables
2025-06-13 12:14:18,735:INFO:Importing untrained model
2025-06-13 12:14:18,745:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-13 12:14:18,765:INFO:Starting cross validation
2025-06-13 12:14:18,770:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:18,932:INFO:Calculating mean and std
2025-06-13 12:14:18,934:INFO:Creating metrics dataframe
2025-06-13 12:14:18,936:INFO:Uploading results into container
2025-06-13 12:14:18,937:INFO:Uploading model into container now
2025-06-13 12:14:18,937:INFO:_master_model_container: 7
2025-06-13 12:14:18,937:INFO:_display_container: 2
2025-06-13 12:14:18,937:INFO:OrthogonalMatchingPursuit()
2025-06-13 12:14:18,938:INFO:create_model() successfully completed......................................
2025-06-13 12:14:19,032:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:19,032:INFO:Creating metrics dataframe
2025-06-13 12:14:19,049:INFO:Initializing Bayesian Ridge
2025-06-13 12:14:19,049:INFO:Total runtime is 0.18367240031560264 minutes
2025-06-13 12:14:19,055:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:19,055:INFO:Initializing create_model()
2025-06-13 12:14:19,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:19,056:INFO:Checking exceptions
2025-06-13 12:14:19,056:INFO:Importing libraries
2025-06-13 12:14:19,056:INFO:Copying training dataset
2025-06-13 12:14:19,068:INFO:Defining folds
2025-06-13 12:14:19,068:INFO:Declaring metric variables
2025-06-13 12:14:19,082:INFO:Importing untrained model
2025-06-13 12:14:19,091:INFO:Bayesian Ridge Imported successfully
2025-06-13 12:14:19,108:INFO:Starting cross validation
2025-06-13 12:14:19,112:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:19,291:INFO:Calculating mean and std
2025-06-13 12:14:19,294:INFO:Creating metrics dataframe
2025-06-13 12:14:19,303:INFO:Uploading results into container
2025-06-13 12:14:19,305:INFO:Uploading model into container now
2025-06-13 12:14:19,305:INFO:_master_model_container: 8
2025-06-13 12:14:19,306:INFO:_display_container: 2
2025-06-13 12:14:19,306:INFO:BayesianRidge()
2025-06-13 12:14:19,306:INFO:create_model() successfully completed......................................
2025-06-13 12:14:19,449:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:19,449:INFO:Creating metrics dataframe
2025-06-13 12:14:19,466:INFO:Initializing Passive Aggressive Regressor
2025-06-13 12:14:19,467:INFO:Total runtime is 0.19063486258188886 minutes
2025-06-13 12:14:19,473:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:19,474:INFO:Initializing create_model()
2025-06-13 12:14:19,474:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:19,474:INFO:Checking exceptions
2025-06-13 12:14:19,475:INFO:Importing libraries
2025-06-13 12:14:19,475:INFO:Copying training dataset
2025-06-13 12:14:19,485:INFO:Defining folds
2025-06-13 12:14:19,485:INFO:Declaring metric variables
2025-06-13 12:14:19,499:INFO:Importing untrained model
2025-06-13 12:14:19,510:INFO:Passive Aggressive Regressor Imported successfully
2025-06-13 12:14:19,534:INFO:Starting cross validation
2025-06-13 12:14:19,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:19,726:INFO:Calculating mean and std
2025-06-13 12:14:19,729:INFO:Creating metrics dataframe
2025-06-13 12:14:19,735:INFO:Uploading results into container
2025-06-13 12:14:19,737:INFO:Uploading model into container now
2025-06-13 12:14:19,737:INFO:_master_model_container: 9
2025-06-13 12:14:19,737:INFO:_display_container: 2
2025-06-13 12:14:19,739:INFO:PassiveAggressiveRegressor(random_state=123)
2025-06-13 12:14:19,739:INFO:create_model() successfully completed......................................
2025-06-13 12:14:19,858:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:19,859:INFO:Creating metrics dataframe
2025-06-13 12:14:19,872:INFO:Initializing Huber Regressor
2025-06-13 12:14:19,872:INFO:Total runtime is 0.19738477071126304 minutes
2025-06-13 12:14:19,878:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:19,879:INFO:Initializing create_model()
2025-06-13 12:14:19,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:19,879:INFO:Checking exceptions
2025-06-13 12:14:19,879:INFO:Importing libraries
2025-06-13 12:14:19,879:INFO:Copying training dataset
2025-06-13 12:14:19,891:INFO:Defining folds
2025-06-13 12:14:19,891:INFO:Declaring metric variables
2025-06-13 12:14:19,908:INFO:Importing untrained model
2025-06-13 12:14:19,956:INFO:Huber Regressor Imported successfully
2025-06-13 12:14:19,973:INFO:Starting cross validation
2025-06-13 12:14:19,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:20,260:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,269:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,313:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,323:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,494:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,543:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,581:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,589:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,765:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,821:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:14:20,849:INFO:Calculating mean and std
2025-06-13 12:14:20,855:INFO:Creating metrics dataframe
2025-06-13 12:14:20,861:INFO:Uploading results into container
2025-06-13 12:14:20,864:INFO:Uploading model into container now
2025-06-13 12:14:20,868:INFO:_master_model_container: 10
2025-06-13 12:14:20,869:INFO:_display_container: 2
2025-06-13 12:14:20,871:INFO:HuberRegressor()
2025-06-13 12:14:20,873:INFO:create_model() successfully completed......................................
2025-06-13 12:14:21,007:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:21,009:INFO:Creating metrics dataframe
2025-06-13 12:14:21,049:INFO:Initializing K Neighbors Regressor
2025-06-13 12:14:21,049:INFO:Total runtime is 0.2170117457707723 minutes
2025-06-13 12:14:21,057:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:21,057:INFO:Initializing create_model()
2025-06-13 12:14:21,057:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:21,057:INFO:Checking exceptions
2025-06-13 12:14:21,057:INFO:Importing libraries
2025-06-13 12:14:21,058:INFO:Copying training dataset
2025-06-13 12:14:21,074:INFO:Defining folds
2025-06-13 12:14:21,074:INFO:Declaring metric variables
2025-06-13 12:14:21,093:INFO:Importing untrained model
2025-06-13 12:14:21,105:INFO:K Neighbors Regressor Imported successfully
2025-06-13 12:14:21,128:INFO:Starting cross validation
2025-06-13 12:14:21,134:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:21,427:INFO:Calculating mean and std
2025-06-13 12:14:21,429:INFO:Creating metrics dataframe
2025-06-13 12:14:21,436:INFO:Uploading results into container
2025-06-13 12:14:21,437:INFO:Uploading model into container now
2025-06-13 12:14:21,438:INFO:_master_model_container: 11
2025-06-13 12:14:21,438:INFO:_display_container: 2
2025-06-13 12:14:21,439:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-13 12:14:21,439:INFO:create_model() successfully completed......................................
2025-06-13 12:14:21,534:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:21,534:INFO:Creating metrics dataframe
2025-06-13 12:14:21,544:INFO:Initializing Decision Tree Regressor
2025-06-13 12:14:21,544:INFO:Total runtime is 0.225248920917511 minutes
2025-06-13 12:14:21,553:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:21,553:INFO:Initializing create_model()
2025-06-13 12:14:21,554:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:21,554:INFO:Checking exceptions
2025-06-13 12:14:21,554:INFO:Importing libraries
2025-06-13 12:14:21,554:INFO:Copying training dataset
2025-06-13 12:14:21,564:INFO:Defining folds
2025-06-13 12:14:21,565:INFO:Declaring metric variables
2025-06-13 12:14:21,574:INFO:Importing untrained model
2025-06-13 12:14:21,582:INFO:Decision Tree Regressor Imported successfully
2025-06-13 12:14:21,607:INFO:Starting cross validation
2025-06-13 12:14:21,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:21,958:INFO:Calculating mean and std
2025-06-13 12:14:21,963:INFO:Creating metrics dataframe
2025-06-13 12:14:21,986:INFO:Uploading results into container
2025-06-13 12:14:21,988:INFO:Uploading model into container now
2025-06-13 12:14:21,989:INFO:_master_model_container: 12
2025-06-13 12:14:21,989:INFO:_display_container: 2
2025-06-13 12:14:21,991:INFO:DecisionTreeRegressor(random_state=123)
2025-06-13 12:14:21,991:INFO:create_model() successfully completed......................................
2025-06-13 12:14:22,151:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:22,151:INFO:Creating metrics dataframe
2025-06-13 12:14:22,169:INFO:Initializing Random Forest Regressor
2025-06-13 12:14:22,169:INFO:Total runtime is 0.23567241430282596 minutes
2025-06-13 12:14:22,179:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:22,183:INFO:Initializing create_model()
2025-06-13 12:14:22,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:22,184:INFO:Checking exceptions
2025-06-13 12:14:22,184:INFO:Importing libraries
2025-06-13 12:14:22,184:INFO:Copying training dataset
2025-06-13 12:14:22,203:INFO:Defining folds
2025-06-13 12:14:22,203:INFO:Declaring metric variables
2025-06-13 12:14:22,215:INFO:Importing untrained model
2025-06-13 12:14:22,222:INFO:Random Forest Regressor Imported successfully
2025-06-13 12:14:22,237:INFO:Starting cross validation
2025-06-13 12:14:22,239:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:34,112:INFO:Calculating mean and std
2025-06-13 12:14:34,114:INFO:Creating metrics dataframe
2025-06-13 12:14:34,118:INFO:Uploading results into container
2025-06-13 12:14:34,163:INFO:Uploading model into container now
2025-06-13 12:14:34,164:INFO:_master_model_container: 13
2025-06-13 12:14:34,164:INFO:_display_container: 2
2025-06-13 12:14:34,165:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:14:34,165:INFO:create_model() successfully completed......................................
2025-06-13 12:14:34,320:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:34,320:INFO:Creating metrics dataframe
2025-06-13 12:14:34,334:INFO:Initializing Extra Trees Regressor
2025-06-13 12:14:34,334:INFO:Total runtime is 0.43842488527297974 minutes
2025-06-13 12:14:34,342:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:34,343:INFO:Initializing create_model()
2025-06-13 12:14:34,343:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:34,343:INFO:Checking exceptions
2025-06-13 12:14:34,345:INFO:Importing libraries
2025-06-13 12:14:34,346:INFO:Copying training dataset
2025-06-13 12:14:34,358:INFO:Defining folds
2025-06-13 12:14:34,359:INFO:Declaring metric variables
2025-06-13 12:14:34,371:INFO:Importing untrained model
2025-06-13 12:14:34,384:INFO:Extra Trees Regressor Imported successfully
2025-06-13 12:14:34,403:INFO:Starting cross validation
2025-06-13 12:14:34,413:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:41,104:INFO:Calculating mean and std
2025-06-13 12:14:41,106:INFO:Creating metrics dataframe
2025-06-13 12:14:41,116:INFO:Uploading results into container
2025-06-13 12:14:41,119:INFO:Uploading model into container now
2025-06-13 12:14:41,120:INFO:_master_model_container: 14
2025-06-13 12:14:41,120:INFO:_display_container: 2
2025-06-13 12:14:41,120:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:14:41,122:INFO:create_model() successfully completed......................................
2025-06-13 12:14:41,254:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:41,254:INFO:Creating metrics dataframe
2025-06-13 12:14:41,276:INFO:Initializing AdaBoost Regressor
2025-06-13 12:14:41,276:INFO:Total runtime is 0.5541177074114482 minutes
2025-06-13 12:14:41,284:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:41,284:INFO:Initializing create_model()
2025-06-13 12:14:41,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:41,285:INFO:Checking exceptions
2025-06-13 12:14:41,285:INFO:Importing libraries
2025-06-13 12:14:41,285:INFO:Copying training dataset
2025-06-13 12:14:41,304:INFO:Defining folds
2025-06-13 12:14:41,304:INFO:Declaring metric variables
2025-06-13 12:14:41,317:INFO:Importing untrained model
2025-06-13 12:14:41,331:INFO:AdaBoost Regressor Imported successfully
2025-06-13 12:14:41,349:INFO:Starting cross validation
2025-06-13 12:14:41,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:42,498:INFO:Calculating mean and std
2025-06-13 12:14:42,502:INFO:Creating metrics dataframe
2025-06-13 12:14:42,505:INFO:Uploading results into container
2025-06-13 12:14:42,507:INFO:Uploading model into container now
2025-06-13 12:14:42,509:INFO:_master_model_container: 15
2025-06-13 12:14:42,510:INFO:_display_container: 2
2025-06-13 12:14:42,511:INFO:AdaBoostRegressor(random_state=123)
2025-06-13 12:14:42,511:INFO:create_model() successfully completed......................................
2025-06-13 12:14:42,632:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:42,633:INFO:Creating metrics dataframe
2025-06-13 12:14:42,680:INFO:Initializing Gradient Boosting Regressor
2025-06-13 12:14:42,681:INFO:Total runtime is 0.5775376240412394 minutes
2025-06-13 12:14:42,695:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:42,697:INFO:Initializing create_model()
2025-06-13 12:14:42,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:42,700:INFO:Checking exceptions
2025-06-13 12:14:42,701:INFO:Importing libraries
2025-06-13 12:14:42,701:INFO:Copying training dataset
2025-06-13 12:14:42,753:INFO:Defining folds
2025-06-13 12:14:42,754:INFO:Declaring metric variables
2025-06-13 12:14:42,767:INFO:Importing untrained model
2025-06-13 12:14:42,783:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:14:42,803:INFO:Starting cross validation
2025-06-13 12:14:42,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:46,786:INFO:Calculating mean and std
2025-06-13 12:14:46,788:INFO:Creating metrics dataframe
2025-06-13 12:14:46,801:INFO:Uploading results into container
2025-06-13 12:14:46,802:INFO:Uploading model into container now
2025-06-13 12:14:46,803:INFO:_master_model_container: 16
2025-06-13 12:14:46,803:INFO:_display_container: 2
2025-06-13 12:14:46,803:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:14:46,804:INFO:create_model() successfully completed......................................
2025-06-13 12:14:46,974:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:46,974:INFO:Creating metrics dataframe
2025-06-13 12:14:47,008:INFO:Initializing Light Gradient Boosting Machine
2025-06-13 12:14:47,008:INFO:Total runtime is 0.6496572732925415 minutes
2025-06-13 12:14:47,020:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:47,021:INFO:Initializing create_model()
2025-06-13 12:14:47,021:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:47,022:INFO:Checking exceptions
2025-06-13 12:14:47,022:INFO:Importing libraries
2025-06-13 12:14:47,022:INFO:Copying training dataset
2025-06-13 12:14:47,039:INFO:Defining folds
2025-06-13 12:14:47,039:INFO:Declaring metric variables
2025-06-13 12:14:47,056:INFO:Importing untrained model
2025-06-13 12:14:47,071:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-13 12:14:47,094:INFO:Starting cross validation
2025-06-13 12:14:47,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:48,367:INFO:Calculating mean and std
2025-06-13 12:14:48,369:INFO:Creating metrics dataframe
2025-06-13 12:14:48,378:INFO:Uploading results into container
2025-06-13 12:14:48,380:INFO:Uploading model into container now
2025-06-13 12:14:48,380:INFO:_master_model_container: 17
2025-06-13 12:14:48,381:INFO:_display_container: 2
2025-06-13 12:14:48,381:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:14:48,381:INFO:create_model() successfully completed......................................
2025-06-13 12:14:48,484:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:48,485:INFO:Creating metrics dataframe
2025-06-13 12:14:48,507:INFO:Initializing Dummy Regressor
2025-06-13 12:14:48,508:INFO:Total runtime is 0.6746467351913452 minutes
2025-06-13 12:14:48,516:INFO:SubProcess create_model() called ==================================
2025-06-13 12:14:48,516:INFO:Initializing create_model()
2025-06-13 12:14:48,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FCBAACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:48,517:INFO:Checking exceptions
2025-06-13 12:14:48,517:INFO:Importing libraries
2025-06-13 12:14:48,517:INFO:Copying training dataset
2025-06-13 12:14:48,535:INFO:Defining folds
2025-06-13 12:14:48,535:INFO:Declaring metric variables
2025-06-13 12:14:48,549:INFO:Importing untrained model
2025-06-13 12:14:48,565:INFO:Dummy Regressor Imported successfully
2025-06-13 12:14:48,586:INFO:Starting cross validation
2025-06-13 12:14:48,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:14:48,728:INFO:Calculating mean and std
2025-06-13 12:14:48,729:INFO:Creating metrics dataframe
2025-06-13 12:14:48,735:INFO:Uploading results into container
2025-06-13 12:14:48,736:INFO:Uploading model into container now
2025-06-13 12:14:48,738:INFO:_master_model_container: 18
2025-06-13 12:14:48,738:INFO:_display_container: 2
2025-06-13 12:14:48,738:INFO:DummyRegressor()
2025-06-13 12:14:48,739:INFO:create_model() successfully completed......................................
2025-06-13 12:14:48,836:INFO:SubProcess create_model() end ==================================
2025-06-13 12:14:48,836:INFO:Creating metrics dataframe
2025-06-13 12:14:48,893:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-13 12:14:48,940:INFO:Initializing create_model()
2025-06-13 12:14:48,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:14:48,941:INFO:Checking exceptions
2025-06-13 12:14:48,951:INFO:Importing libraries
2025-06-13 12:14:48,952:INFO:Copying training dataset
2025-06-13 12:14:48,972:INFO:Defining folds
2025-06-13 12:14:48,972:INFO:Declaring metric variables
2025-06-13 12:14:48,973:INFO:Importing untrained model
2025-06-13 12:14:48,973:INFO:Declaring custom model
2025-06-13 12:14:48,975:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:14:48,977:INFO:Cross validation set to False
2025-06-13 12:14:48,978:INFO:Fitting Model
2025-06-13 12:14:50,054:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:14:50,054:INFO:create_model() successfully completed......................................
2025-06-13 12:14:50,234:INFO:_master_model_container: 18
2025-06-13 12:14:50,235:INFO:_display_container: 2
2025-06-13 12:14:50,235:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:14:50,236:INFO:compare_models() successfully completed......................................
2025-06-13 12:15:08,899:INFO:Initializing tune_model()
2025-06-13 12:15:08,899:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>)
2025-06-13 12:15:08,900:INFO:Checking exceptions
2025-06-13 12:15:08,900:INFO:Soft dependency imported: skopt: 0.10.2
2025-06-13 12:15:09,104:INFO:Copying training dataset
2025-06-13 12:15:09,117:INFO:Checking base model
2025-06-13 12:15:09,119:INFO:Base model : Gradient Boosting Regressor
2025-06-13 12:15:09,131:INFO:Declaring metric variables
2025-06-13 12:15:09,144:INFO:Defining Hyperparameters
2025-06-13 12:15:09,288:INFO:Tuning with n_jobs=-1
2025-06-13 12:15:09,306:INFO:Initializing skopt.BayesSearchCV
2025-06-13 12:15:45,655:INFO:best_params: OrderedDict([('actual_estimator__learning_rate', 0.0238190072917794), ('actual_estimator__max_depth', 3), ('actual_estimator__max_features', 0.4284489606984907), ('actual_estimator__min_impurity_decrease', 0.002646746704757545), ('actual_estimator__min_samples_leaf', 5), ('actual_estimator__min_samples_split', 9), ('actual_estimator__n_estimators', 239), ('actual_estimator__subsample', 0.7687727671549709)])
2025-06-13 12:15:45,656:INFO:Hyperparameter search completed
2025-06-13 12:15:45,656:INFO:SubProcess create_model() called ==================================
2025-06-13 12:15:45,657:INFO:Initializing create_model()
2025-06-13 12:15:45,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FC90B700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'learning_rate': 0.0238190072917794, 'max_depth': 3, 'max_features': 0.4284489606984907, 'min_impurity_decrease': 0.002646746704757545, 'min_samples_leaf': 5, 'min_samples_split': 9, 'n_estimators': 239, 'subsample': 0.7687727671549709})
2025-06-13 12:15:45,657:INFO:Checking exceptions
2025-06-13 12:15:45,658:INFO:Importing libraries
2025-06-13 12:15:45,658:INFO:Copying training dataset
2025-06-13 12:15:45,675:INFO:Defining folds
2025-06-13 12:15:45,675:INFO:Declaring metric variables
2025-06-13 12:15:45,678:INFO:Importing untrained model
2025-06-13 12:15:45,679:INFO:Declaring custom model
2025-06-13 12:15:45,687:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:15:45,703:INFO:Starting cross validation
2025-06-13 12:15:45,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:15:49,329:INFO:Calculating mean and std
2025-06-13 12:15:49,338:INFO:Creating metrics dataframe
2025-06-13 12:15:49,365:INFO:Finalizing model
2025-06-13 12:15:50,408:INFO:Uploading results into container
2025-06-13 12:15:50,410:INFO:Uploading model into container now
2025-06-13 12:15:50,412:INFO:_master_model_container: 19
2025-06-13 12:15:50,412:INFO:_display_container: 3
2025-06-13 12:15:50,414:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-13 12:15:50,414:INFO:create_model() successfully completed......................................
2025-06-13 12:15:50,523:INFO:SubProcess create_model() end ==================================
2025-06-13 12:15:50,524:INFO:choose_better activated
2025-06-13 12:15:50,536:INFO:SubProcess create_model() called ==================================
2025-06-13 12:15:50,537:INFO:Initializing create_model()
2025-06-13 12:15:50,538:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:15:50,539:INFO:Checking exceptions
2025-06-13 12:15:50,543:INFO:Importing libraries
2025-06-13 12:15:50,543:INFO:Copying training dataset
2025-06-13 12:15:50,552:INFO:Defining folds
2025-06-13 12:15:50,552:INFO:Declaring metric variables
2025-06-13 12:15:50,552:INFO:Importing untrained model
2025-06-13 12:15:50,552:INFO:Declaring custom model
2025-06-13 12:15:50,556:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:15:50,556:INFO:Starting cross validation
2025-06-13 12:15:50,557:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:15:54,002:INFO:Calculating mean and std
2025-06-13 12:15:54,004:INFO:Creating metrics dataframe
2025-06-13 12:15:54,013:INFO:Finalizing model
2025-06-13 12:15:54,972:INFO:Uploading results into container
2025-06-13 12:15:54,973:INFO:Uploading model into container now
2025-06-13 12:15:54,974:INFO:_master_model_container: 20
2025-06-13 12:15:54,974:INFO:_display_container: 4
2025-06-13 12:15:54,974:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:15:54,974:INFO:create_model() successfully completed......................................
2025-06-13 12:15:55,067:INFO:SubProcess create_model() end ==================================
2025-06-13 12:15:55,069:INFO:GradientBoostingRegressor(random_state=123) result for R2 is 0.5905
2025-06-13 12:15:55,072:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) result for R2 is 0.5906
2025-06-13 12:15:55,072:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) is best model
2025-06-13 12:15:55,073:INFO:choose_better completed
2025-06-13 12:15:55,087:INFO:_master_model_container: 20
2025-06-13 12:15:55,087:INFO:_display_container: 3
2025-06-13 12:15:55,088:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-13 12:15:55,088:INFO:tune_model() successfully completed......................................
2025-06-13 12:17:16,945:INFO:Initializing finalize_model()
2025-06-13 12:17:16,946:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-13 12:17:16,950:INFO:Finalizing GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-13 12:17:16,979:INFO:Initializing create_model()
2025-06-13 12:17:16,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224F66C72E0>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:17:16,980:INFO:Checking exceptions
2025-06-13 12:17:16,994:INFO:Importing libraries
2025-06-13 12:17:16,994:INFO:Copying training dataset
2025-06-13 12:17:16,997:INFO:Defining folds
2025-06-13 12:17:16,997:INFO:Declaring metric variables
2025-06-13 12:17:16,998:INFO:Importing untrained model
2025-06-13 12:17:16,998:INFO:Declaring custom model
2025-06-13 12:17:17,006:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:17:17,009:INFO:Cross validation set to False
2025-06-13 12:17:17,010:INFO:Fitting Model
2025-06-13 12:17:18,987:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-13 12:17:18,987:INFO:create_model() successfully completed......................................
2025-06-13 12:17:19,090:INFO:_master_model_container: 20
2025-06-13 12:17:19,090:INFO:_display_container: 3
2025-06-13 12:17:19,100:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-13 12:17:19,101:INFO:finalize_model() successfully completed......................................
2025-06-13 12:17:19,225:INFO:Initializing save_model()
2025-06-13 12:17:19,225:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), model_name=bigmart_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-13 12:17:19,225:INFO:Adding model into prep_pipe
2025-06-13 12:17:19,225:WARNING:Only Model saved as it was a pipeline.
2025-06-13 12:17:19,247:INFO:bigmart_best_model.pkl saved in current working directory
2025-06-13 12:17:19,258:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-13 12:17:19,258:INFO:save_model() successfully completed......................................
2025-06-13 12:18:24,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:18:24,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:18:24,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:18:24,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:18:24,752:INFO:Initializing load_model()
2025-06-13 12:18:24,752:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:18:53,288:INFO:Initializing load_model()
2025-06-13 12:18:53,289:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:18:53,482:INFO:Initializing predict_model()
2025-06-13 12:18:53,484:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A8D204220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A8C55B6D0>)
2025-06-13 12:18:53,484:INFO:Checking exceptions
2025-06-13 12:18:53,485:INFO:Preloading libraries
2025-06-13 12:18:53,485:INFO:Set up data.
2025-06-13 12:18:53,497:INFO:Set up index.
2025-06-13 12:19:20,076:INFO:Initializing load_model()
2025-06-13 12:19:20,078:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:19:20,202:INFO:Initializing predict_model()
2025-06-13 12:19:20,202:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A8D205630>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A8D4BA320>)
2025-06-13 12:19:20,203:INFO:Checking exceptions
2025-06-13 12:19:20,203:INFO:Preloading libraries
2025-06-13 12:19:20,203:INFO:Set up data.
2025-06-13 12:19:20,215:INFO:Set up index.
2025-06-13 12:20:20,737:INFO:Initializing load_model()
2025-06-13 12:20:20,738:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:20:20,862:INFO:Initializing predict_model()
2025-06-13 12:20:20,862:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A7B89D870>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A7B8C8F70>)
2025-06-13 12:20:20,863:INFO:Checking exceptions
2025-06-13 12:20:20,863:INFO:Preloading libraries
2025-06-13 12:20:20,864:INFO:Set up data.
2025-06-13 12:20:20,872:INFO:Set up index.
2025-06-13 12:20:51,873:INFO:Initializing load_model()
2025-06-13 12:20:51,874:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:20:52,033:INFO:Initializing predict_model()
2025-06-13 12:20:52,033:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A7B89CFA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A8D4BA290>)
2025-06-13 12:20:52,033:INFO:Checking exceptions
2025-06-13 12:20:52,033:INFO:Preloading libraries
2025-06-13 12:20:52,034:INFO:Set up data.
2025-06-13 12:20:52,046:INFO:Set up index.
2025-06-13 12:21:08,658:INFO:Initializing load_model()
2025-06-13 12:21:08,660:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:21:08,814:INFO:Initializing predict_model()
2025-06-13 12:21:08,814:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A7BA2BF70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Visibility', 'Item_Type',
                                             'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A7B8C8F70>)
2025-06-13 12:21:08,814:INFO:Checking exceptions
2025-06-13 12:21:08,815:INFO:Preloading libraries
2025-06-13 12:21:08,815:INFO:Set up data.
2025-06-13 12:21:08,821:INFO:Set up index.
2025-06-13 12:26:36,239:WARNING:C:\Users\samee\AppData\Local\Temp\ipykernel_24616\2169611861.py:2: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  combined_df = pd.concat([train_df, test_df], ignore_index=True)

2025-06-13 12:27:06,890:INFO:PyCaret RegressionExperiment
2025-06-13 12:27:06,891:INFO:Logging name: reg-default-name
2025-06-13 12:27:06,891:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-13 12:27:06,891:INFO:version 3.3.2
2025-06-13 12:27:06,891:INFO:Initializing setup()
2025-06-13 12:27:06,892:INFO:self.USI: 1376
2025-06-13 12:27:06,892:INFO:self._variable_keys: {'memory', 'log_plots_param', 'y_test', 'USI', 'fold_shuffle_param', 'y_train', 'exp_name_log', 'target_param', 'gpu_n_jobs_param', 'fold_generator', 'html_param', 'fold_groups_param', 'gpu_param', '_ml_usecase', 'X_train', 'transform_target_param', 'exp_id', 'n_jobs_param', 'data', 'pipeline', 'y', 'X_test', '_available_plots', 'X', 'logging_param', 'seed', 'idx'}
2025-06-13 12:27:06,892:INFO:Checking environment
2025-06-13 12:27:06,892:INFO:python_version: 3.10.11
2025-06-13 12:27:06,893:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-13 12:27:06,893:INFO:machine: AMD64
2025-06-13 12:27:06,893:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-13 12:27:06,901:INFO:Memory: svmem(total=8316121088, available=1460895744, percent=82.4, used=6855225344, free=1460895744)
2025-06-13 12:27:06,902:INFO:Physical Core: 2
2025-06-13 12:27:06,902:INFO:Logical Core: 4
2025-06-13 12:27:06,902:INFO:Checking libraries
2025-06-13 12:27:06,902:INFO:System:
2025-06-13 12:27:06,902:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-13 12:27:06,903:INFO:executable: c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\Scripts\python.exe
2025-06-13 12:27:06,903:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-13 12:27:06,903:INFO:PyCaret required dependencies:
2025-06-13 12:27:06,903:INFO:                 pip: 25.1.1
2025-06-13 12:27:06,903:INFO:          setuptools: 65.5.0
2025-06-13 12:27:06,904:INFO:             pycaret: 3.3.2
2025-06-13 12:27:06,904:INFO:             IPython: 8.37.0
2025-06-13 12:27:06,904:INFO:          ipywidgets: 8.1.7
2025-06-13 12:27:06,904:INFO:                tqdm: 4.67.1
2025-06-13 12:27:06,904:INFO:               numpy: 1.26.4
2025-06-13 12:27:06,904:INFO:              pandas: 2.1.4
2025-06-13 12:27:06,904:INFO:              jinja2: 3.1.6
2025-06-13 12:27:06,904:INFO:               scipy: 1.11.4
2025-06-13 12:27:06,904:INFO:              joblib: 1.3.2
2025-06-13 12:27:06,904:INFO:             sklearn: 1.4.2
2025-06-13 12:27:06,905:INFO:                pyod: 2.0.5
2025-06-13 12:27:06,905:INFO:            imblearn: 0.13.0
2025-06-13 12:27:06,905:INFO:   category_encoders: 2.7.0
2025-06-13 12:27:06,905:INFO:            lightgbm: 4.6.0
2025-06-13 12:27:06,905:INFO:               numba: 0.61.2
2025-06-13 12:27:06,905:INFO:            requests: 2.32.3
2025-06-13 12:27:06,905:INFO:          matplotlib: 3.7.5
2025-06-13 12:27:06,906:INFO:          scikitplot: 0.3.7
2025-06-13 12:27:06,906:INFO:         yellowbrick: 1.5
2025-06-13 12:27:06,906:INFO:              plotly: 5.24.1
2025-06-13 12:27:06,906:INFO:    plotly-resampler: Not installed
2025-06-13 12:27:06,906:INFO:             kaleido: 0.2.1
2025-06-13 12:27:06,906:INFO:           schemdraw: 0.15
2025-06-13 12:27:06,906:INFO:         statsmodels: 0.14.4
2025-06-13 12:27:06,908:INFO:              sktime: 0.26.0
2025-06-13 12:27:06,908:INFO:               tbats: 1.1.3
2025-06-13 12:27:06,908:INFO:            pmdarima: 2.0.4
2025-06-13 12:27:06,908:INFO:              psutil: 7.0.0
2025-06-13 12:27:06,908:INFO:          markupsafe: 3.0.2
2025-06-13 12:27:06,908:INFO:             pickle5: Not installed
2025-06-13 12:27:06,908:INFO:         cloudpickle: 3.1.1
2025-06-13 12:27:06,909:INFO:         deprecation: 2.1.0
2025-06-13 12:27:06,909:INFO:              xxhash: 3.5.0
2025-06-13 12:27:06,909:INFO:           wurlitzer: Not installed
2025-06-13 12:27:06,909:INFO:PyCaret optional dependencies:
2025-06-13 12:27:06,909:INFO:                shap: Not installed
2025-06-13 12:27:06,909:INFO:           interpret: Not installed
2025-06-13 12:27:06,909:INFO:                umap: Not installed
2025-06-13 12:27:06,910:INFO:     ydata_profiling: Not installed
2025-06-13 12:27:06,910:INFO:  explainerdashboard: Not installed
2025-06-13 12:27:06,910:INFO:             autoviz: Not installed
2025-06-13 12:27:06,910:INFO:           fairlearn: Not installed
2025-06-13 12:27:06,910:INFO:          deepchecks: Not installed
2025-06-13 12:27:06,910:INFO:             xgboost: Not installed
2025-06-13 12:27:06,911:INFO:            catboost: Not installed
2025-06-13 12:27:06,911:INFO:              kmodes: Not installed
2025-06-13 12:27:06,912:INFO:             mlxtend: Not installed
2025-06-13 12:27:06,913:INFO:       statsforecast: Not installed
2025-06-13 12:27:06,913:INFO:        tune_sklearn: Not installed
2025-06-13 12:27:06,913:INFO:                 ray: Not installed
2025-06-13 12:27:06,913:INFO:            hyperopt: 0.2.7
2025-06-13 12:27:06,914:INFO:              optuna: 4.3.0
2025-06-13 12:27:06,914:INFO:               skopt: 0.10.2
2025-06-13 12:27:06,914:INFO:              mlflow: Not installed
2025-06-13 12:27:06,914:INFO:              gradio: Not installed
2025-06-13 12:27:06,914:INFO:             fastapi: Not installed
2025-06-13 12:27:06,914:INFO:             uvicorn: Not installed
2025-06-13 12:27:06,915:INFO:              m2cgen: Not installed
2025-06-13 12:27:06,915:INFO:           evidently: Not installed
2025-06-13 12:27:06,915:INFO:               fugue: Not installed
2025-06-13 12:27:06,915:INFO:           streamlit: 1.45.1
2025-06-13 12:27:06,917:INFO:             prophet: Not installed
2025-06-13 12:27:06,918:INFO:None
2025-06-13 12:27:06,918:INFO:Set up data.
2025-06-13 12:27:06,940:INFO:Set up folding strategy.
2025-06-13 12:27:06,940:INFO:Set up train/test split.
2025-06-13 12:27:06,950:INFO:Set up index.
2025-06-13 12:27:06,951:INFO:Assigning column types.
2025-06-13 12:27:06,960:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-13 12:27:06,960:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-13 12:27:06,973:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-13 12:27:06,984:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,100:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,294:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:07,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:07,303:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,318:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,330:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,501:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:07,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:07,503:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-13 12:27:07,510:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,518:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:07,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:07,857:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-13 12:27:07,874:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,092:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:08,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:08,175:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-13 12:27:08,193:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,510:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:08,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:08,672:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,809:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:27:08,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:08,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:08,901:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-13 12:27:09,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:09,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:27:09,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:09,403:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:09,554:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:09,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-13 12:27:09,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:09,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:09,742:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-13 12:27:09,953:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:10,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:10,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:10,273:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-13 12:27:10,371:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:10,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:10,372:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-13 12:27:10,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:10,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:10,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:10,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:10,723:INFO:Preparing preprocessing pipeline...
2025-06-13 12:27:10,723:INFO:Set up simple imputation.
2025-06-13 12:27:10,757:INFO:Finished creating preprocessing pipeline.
2025-06-13 12:27:10,760:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-06-13 12:27:10,760:INFO:Creating final display dataframe.
2025-06-13 12:27:10,856:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target  Item_Outlet_Sales
2                   Target type         Regression
3           Original data shape          (8523, 9)
4        Transformed data shape          (8523, 9)
5   Transformed train set shape          (5966, 9)
6    Transformed test set shape          (2557, 9)
7              Numeric features                  8
8                    Preprocess               True
9               Imputation type             simple
10           Numeric imputation               mean
11       Categorical imputation               mode
12               Fold Generator              KFold
13                  Fold Number                 10
14                     CPU Jobs                 -1
15                      Use GPU              False
16               Log Experiment              False
17              Experiment Name   reg-default-name
18                          USI               1376
2025-06-13 12:27:11,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:11,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:11,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:11,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-13 12:27:11,164:INFO:setup() successfully completed in 4.28s...............
2025-06-13 12:27:13,296:INFO:Initializing compare_models()
2025-06-13 12:27:13,298:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-13 12:27:13,298:INFO:Checking exceptions
2025-06-13 12:27:13,304:INFO:Preparing display monitor
2025-06-13 12:27:13,386:INFO:Initializing Linear Regression
2025-06-13 12:27:13,387:INFO:Total runtime is 3.3919016520182295e-05 minutes
2025-06-13 12:27:13,406:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:13,406:INFO:Initializing create_model()
2025-06-13 12:27:13,407:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:13,407:INFO:Checking exceptions
2025-06-13 12:27:13,407:INFO:Importing libraries
2025-06-13 12:27:13,407:INFO:Copying training dataset
2025-06-13 12:27:13,429:INFO:Defining folds
2025-06-13 12:27:13,429:INFO:Declaring metric variables
2025-06-13 12:27:13,451:INFO:Importing untrained model
2025-06-13 12:27:13,461:INFO:Linear Regression Imported successfully
2025-06-13 12:27:13,489:INFO:Starting cross validation
2025-06-13 12:27:13,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:20,918:INFO:Calculating mean and std
2025-06-13 12:27:20,922:INFO:Creating metrics dataframe
2025-06-13 12:27:20,936:INFO:Uploading results into container
2025-06-13 12:27:20,937:INFO:Uploading model into container now
2025-06-13 12:27:20,939:INFO:_master_model_container: 1
2025-06-13 12:27:20,940:INFO:_display_container: 2
2025-06-13 12:27:20,940:INFO:LinearRegression(n_jobs=-1)
2025-06-13 12:27:20,940:INFO:create_model() successfully completed......................................
2025-06-13 12:27:21,329:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:21,330:INFO:Creating metrics dataframe
2025-06-13 12:27:21,347:INFO:Initializing Lasso Regression
2025-06-13 12:27:21,347:INFO:Total runtime is 0.13270130554835002 minutes
2025-06-13 12:27:21,357:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:21,360:INFO:Initializing create_model()
2025-06-13 12:27:21,360:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:21,360:INFO:Checking exceptions
2025-06-13 12:27:21,361:INFO:Importing libraries
2025-06-13 12:27:21,361:INFO:Copying training dataset
2025-06-13 12:27:21,379:INFO:Defining folds
2025-06-13 12:27:21,379:INFO:Declaring metric variables
2025-06-13 12:27:21,396:INFO:Importing untrained model
2025-06-13 12:27:21,416:INFO:Lasso Regression Imported successfully
2025-06-13 12:27:21,440:INFO:Starting cross validation
2025-06-13 12:27:21,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:21,618:INFO:Calculating mean and std
2025-06-13 12:27:21,619:INFO:Creating metrics dataframe
2025-06-13 12:27:21,629:INFO:Uploading results into container
2025-06-13 12:27:21,631:INFO:Uploading model into container now
2025-06-13 12:27:21,631:INFO:_master_model_container: 2
2025-06-13 12:27:21,632:INFO:_display_container: 2
2025-06-13 12:27:21,633:INFO:Lasso(random_state=123)
2025-06-13 12:27:21,635:INFO:create_model() successfully completed......................................
2025-06-13 12:27:21,757:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:21,757:INFO:Creating metrics dataframe
2025-06-13 12:27:21,775:INFO:Initializing Ridge Regression
2025-06-13 12:27:21,775:INFO:Total runtime is 0.1398278872172038 minutes
2025-06-13 12:27:21,785:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:21,785:INFO:Initializing create_model()
2025-06-13 12:27:21,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:21,786:INFO:Checking exceptions
2025-06-13 12:27:21,786:INFO:Importing libraries
2025-06-13 12:27:21,787:INFO:Copying training dataset
2025-06-13 12:27:21,808:INFO:Defining folds
2025-06-13 12:27:21,810:INFO:Declaring metric variables
2025-06-13 12:27:21,831:INFO:Importing untrained model
2025-06-13 12:27:21,842:INFO:Ridge Regression Imported successfully
2025-06-13 12:27:21,865:INFO:Starting cross validation
2025-06-13 12:27:21,868:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:22,136:INFO:Calculating mean and std
2025-06-13 12:27:22,162:INFO:Creating metrics dataframe
2025-06-13 12:27:22,170:INFO:Uploading results into container
2025-06-13 12:27:22,171:INFO:Uploading model into container now
2025-06-13 12:27:22,171:INFO:_master_model_container: 3
2025-06-13 12:27:22,172:INFO:_display_container: 2
2025-06-13 12:27:22,172:INFO:Ridge(random_state=123)
2025-06-13 12:27:22,172:INFO:create_model() successfully completed......................................
2025-06-13 12:27:22,285:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:22,285:INFO:Creating metrics dataframe
2025-06-13 12:27:22,302:INFO:Initializing Elastic Net
2025-06-13 12:27:22,302:INFO:Total runtime is 0.14861323038736982 minutes
2025-06-13 12:27:22,313:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:22,313:INFO:Initializing create_model()
2025-06-13 12:27:22,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:22,314:INFO:Checking exceptions
2025-06-13 12:27:22,314:INFO:Importing libraries
2025-06-13 12:27:22,314:INFO:Copying training dataset
2025-06-13 12:27:22,331:INFO:Defining folds
2025-06-13 12:27:22,331:INFO:Declaring metric variables
2025-06-13 12:27:22,352:INFO:Importing untrained model
2025-06-13 12:27:22,367:INFO:Elastic Net Imported successfully
2025-06-13 12:27:22,395:INFO:Starting cross validation
2025-06-13 12:27:22,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:22,633:INFO:Calculating mean and std
2025-06-13 12:27:22,635:INFO:Creating metrics dataframe
2025-06-13 12:27:22,647:INFO:Uploading results into container
2025-06-13 12:27:22,650:INFO:Uploading model into container now
2025-06-13 12:27:22,651:INFO:_master_model_container: 4
2025-06-13 12:27:22,652:INFO:_display_container: 2
2025-06-13 12:27:22,652:INFO:ElasticNet(random_state=123)
2025-06-13 12:27:22,652:INFO:create_model() successfully completed......................................
2025-06-13 12:27:22,766:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:22,766:INFO:Creating metrics dataframe
2025-06-13 12:27:22,780:INFO:Initializing Least Angle Regression
2025-06-13 12:27:22,781:INFO:Total runtime is 0.15657570362091067 minutes
2025-06-13 12:27:22,788:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:22,789:INFO:Initializing create_model()
2025-06-13 12:27:22,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:22,789:INFO:Checking exceptions
2025-06-13 12:27:22,789:INFO:Importing libraries
2025-06-13 12:27:22,789:INFO:Copying training dataset
2025-06-13 12:27:22,802:INFO:Defining folds
2025-06-13 12:27:22,802:INFO:Declaring metric variables
2025-06-13 12:27:22,818:INFO:Importing untrained model
2025-06-13 12:27:22,831:INFO:Least Angle Regression Imported successfully
2025-06-13 12:27:22,851:INFO:Starting cross validation
2025-06-13 12:27:22,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:23,029:INFO:Calculating mean and std
2025-06-13 12:27:23,031:INFO:Creating metrics dataframe
2025-06-13 12:27:23,035:INFO:Uploading results into container
2025-06-13 12:27:23,036:INFO:Uploading model into container now
2025-06-13 12:27:23,038:INFO:_master_model_container: 5
2025-06-13 12:27:23,038:INFO:_display_container: 2
2025-06-13 12:27:23,040:INFO:Lars(random_state=123)
2025-06-13 12:27:23,040:INFO:create_model() successfully completed......................................
2025-06-13 12:27:23,157:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:23,158:INFO:Creating metrics dataframe
2025-06-13 12:27:23,171:INFO:Initializing Lasso Least Angle Regression
2025-06-13 12:27:23,171:INFO:Total runtime is 0.16310015519460044 minutes
2025-06-13 12:27:23,183:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:23,183:INFO:Initializing create_model()
2025-06-13 12:27:23,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:23,184:INFO:Checking exceptions
2025-06-13 12:27:23,184:INFO:Importing libraries
2025-06-13 12:27:23,184:INFO:Copying training dataset
2025-06-13 12:27:23,198:INFO:Defining folds
2025-06-13 12:27:23,198:INFO:Declaring metric variables
2025-06-13 12:27:23,216:INFO:Importing untrained model
2025-06-13 12:27:23,228:INFO:Lasso Least Angle Regression Imported successfully
2025-06-13 12:27:23,250:INFO:Starting cross validation
2025-06-13 12:27:23,251:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:23,439:INFO:Calculating mean and std
2025-06-13 12:27:23,441:INFO:Creating metrics dataframe
2025-06-13 12:27:23,453:INFO:Uploading results into container
2025-06-13 12:27:23,453:INFO:Uploading model into container now
2025-06-13 12:27:23,454:INFO:_master_model_container: 6
2025-06-13 12:27:23,455:INFO:_display_container: 2
2025-06-13 12:27:23,455:INFO:LassoLars(random_state=123)
2025-06-13 12:27:23,455:INFO:create_model() successfully completed......................................
2025-06-13 12:27:23,579:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:23,579:INFO:Creating metrics dataframe
2025-06-13 12:27:23,597:INFO:Initializing Orthogonal Matching Pursuit
2025-06-13 12:27:23,598:INFO:Total runtime is 0.1702153007189433 minutes
2025-06-13 12:27:23,607:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:23,610:INFO:Initializing create_model()
2025-06-13 12:27:23,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:23,611:INFO:Checking exceptions
2025-06-13 12:27:23,611:INFO:Importing libraries
2025-06-13 12:27:23,611:INFO:Copying training dataset
2025-06-13 12:27:23,633:INFO:Defining folds
2025-06-13 12:27:23,633:INFO:Declaring metric variables
2025-06-13 12:27:23,649:INFO:Importing untrained model
2025-06-13 12:27:23,663:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-13 12:27:23,719:INFO:Starting cross validation
2025-06-13 12:27:23,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:23,961:INFO:Calculating mean and std
2025-06-13 12:27:23,963:INFO:Creating metrics dataframe
2025-06-13 12:27:23,971:INFO:Uploading results into container
2025-06-13 12:27:23,972:INFO:Uploading model into container now
2025-06-13 12:27:23,974:INFO:_master_model_container: 7
2025-06-13 12:27:23,974:INFO:_display_container: 2
2025-06-13 12:27:23,979:INFO:OrthogonalMatchingPursuit()
2025-06-13 12:27:23,979:INFO:create_model() successfully completed......................................
2025-06-13 12:27:24,082:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:24,082:INFO:Creating metrics dataframe
2025-06-13 12:27:24,096:INFO:Initializing Bayesian Ridge
2025-06-13 12:27:24,096:INFO:Total runtime is 0.1785173853238424 minutes
2025-06-13 12:27:24,106:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:24,107:INFO:Initializing create_model()
2025-06-13 12:27:24,107:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:24,107:INFO:Checking exceptions
2025-06-13 12:27:24,107:INFO:Importing libraries
2025-06-13 12:27:24,107:INFO:Copying training dataset
2025-06-13 12:27:24,129:INFO:Defining folds
2025-06-13 12:27:24,130:INFO:Declaring metric variables
2025-06-13 12:27:24,149:INFO:Importing untrained model
2025-06-13 12:27:24,157:INFO:Bayesian Ridge Imported successfully
2025-06-13 12:27:24,172:INFO:Starting cross validation
2025-06-13 12:27:24,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:24,350:INFO:Calculating mean and std
2025-06-13 12:27:24,351:INFO:Creating metrics dataframe
2025-06-13 12:27:24,359:INFO:Uploading results into container
2025-06-13 12:27:24,364:INFO:Uploading model into container now
2025-06-13 12:27:24,366:INFO:_master_model_container: 8
2025-06-13 12:27:24,366:INFO:_display_container: 2
2025-06-13 12:27:24,367:INFO:BayesianRidge()
2025-06-13 12:27:24,367:INFO:create_model() successfully completed......................................
2025-06-13 12:27:24,478:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:24,478:INFO:Creating metrics dataframe
2025-06-13 12:27:24,495:INFO:Initializing Passive Aggressive Regressor
2025-06-13 12:27:24,496:INFO:Total runtime is 0.1851833581924439 minutes
2025-06-13 12:27:24,504:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:24,504:INFO:Initializing create_model()
2025-06-13 12:27:24,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:24,505:INFO:Checking exceptions
2025-06-13 12:27:24,506:INFO:Importing libraries
2025-06-13 12:27:24,506:INFO:Copying training dataset
2025-06-13 12:27:24,529:INFO:Defining folds
2025-06-13 12:27:24,529:INFO:Declaring metric variables
2025-06-13 12:27:24,544:INFO:Importing untrained model
2025-06-13 12:27:24,555:INFO:Passive Aggressive Regressor Imported successfully
2025-06-13 12:27:24,594:INFO:Starting cross validation
2025-06-13 12:27:24,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:24,785:INFO:Calculating mean and std
2025-06-13 12:27:24,788:INFO:Creating metrics dataframe
2025-06-13 12:27:24,800:INFO:Uploading results into container
2025-06-13 12:27:24,801:INFO:Uploading model into container now
2025-06-13 12:27:24,802:INFO:_master_model_container: 9
2025-06-13 12:27:24,802:INFO:_display_container: 2
2025-06-13 12:27:24,803:INFO:PassiveAggressiveRegressor(random_state=123)
2025-06-13 12:27:24,803:INFO:create_model() successfully completed......................................
2025-06-13 12:27:24,903:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:24,904:INFO:Creating metrics dataframe
2025-06-13 12:27:24,916:INFO:Initializing Huber Regressor
2025-06-13 12:27:24,916:INFO:Total runtime is 0.19218233029047652 minutes
2025-06-13 12:27:24,926:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:24,928:INFO:Initializing create_model()
2025-06-13 12:27:24,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:24,929:INFO:Checking exceptions
2025-06-13 12:27:24,929:INFO:Importing libraries
2025-06-13 12:27:24,929:INFO:Copying training dataset
2025-06-13 12:27:24,949:INFO:Defining folds
2025-06-13 12:27:24,951:INFO:Declaring metric variables
2025-06-13 12:27:24,970:INFO:Importing untrained model
2025-06-13 12:27:24,980:INFO:Huber Regressor Imported successfully
2025-06-13 12:27:25,000:INFO:Starting cross validation
2025-06-13 12:27:25,002:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:25,234:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,237:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,251:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,274:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,478:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,480:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,497:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,532:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,642:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:27:25,681:INFO:Calculating mean and std
2025-06-13 12:27:25,684:INFO:Creating metrics dataframe
2025-06-13 12:27:25,705:INFO:Uploading results into container
2025-06-13 12:27:25,711:INFO:Uploading model into container now
2025-06-13 12:27:25,715:INFO:_master_model_container: 10
2025-06-13 12:27:25,715:INFO:_display_container: 2
2025-06-13 12:27:25,717:INFO:HuberRegressor()
2025-06-13 12:27:25,719:INFO:create_model() successfully completed......................................
2025-06-13 12:27:25,874:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:25,874:INFO:Creating metrics dataframe
2025-06-13 12:27:25,900:INFO:Initializing K Neighbors Regressor
2025-06-13 12:27:25,900:INFO:Total runtime is 0.20857398509979252 minutes
2025-06-13 12:27:25,917:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:25,918:INFO:Initializing create_model()
2025-06-13 12:27:25,920:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:25,920:INFO:Checking exceptions
2025-06-13 12:27:25,920:INFO:Importing libraries
2025-06-13 12:27:25,921:INFO:Copying training dataset
2025-06-13 12:27:25,950:INFO:Defining folds
2025-06-13 12:27:25,950:INFO:Declaring metric variables
2025-06-13 12:27:25,995:INFO:Importing untrained model
2025-06-13 12:27:26,014:INFO:K Neighbors Regressor Imported successfully
2025-06-13 12:27:26,039:INFO:Starting cross validation
2025-06-13 12:27:26,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:26,354:INFO:Calculating mean and std
2025-06-13 12:27:26,358:INFO:Creating metrics dataframe
2025-06-13 12:27:26,387:INFO:Uploading results into container
2025-06-13 12:27:26,390:INFO:Uploading model into container now
2025-06-13 12:27:26,391:INFO:_master_model_container: 11
2025-06-13 12:27:26,391:INFO:_display_container: 2
2025-06-13 12:27:26,393:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-13 12:27:26,394:INFO:create_model() successfully completed......................................
2025-06-13 12:27:26,569:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:26,570:INFO:Creating metrics dataframe
2025-06-13 12:27:26,603:INFO:Initializing Decision Tree Regressor
2025-06-13 12:27:26,603:INFO:Total runtime is 0.22029793659845992 minutes
2025-06-13 12:27:26,623:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:26,625:INFO:Initializing create_model()
2025-06-13 12:27:26,627:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:26,628:INFO:Checking exceptions
2025-06-13 12:27:26,629:INFO:Importing libraries
2025-06-13 12:27:26,630:INFO:Copying training dataset
2025-06-13 12:27:26,650:INFO:Defining folds
2025-06-13 12:27:26,650:INFO:Declaring metric variables
2025-06-13 12:27:26,688:INFO:Importing untrained model
2025-06-13 12:27:26,712:INFO:Decision Tree Regressor Imported successfully
2025-06-13 12:27:26,740:INFO:Starting cross validation
2025-06-13 12:27:26,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:27,040:INFO:Calculating mean and std
2025-06-13 12:27:27,044:INFO:Creating metrics dataframe
2025-06-13 12:27:27,052:INFO:Uploading results into container
2025-06-13 12:27:27,055:INFO:Uploading model into container now
2025-06-13 12:27:27,056:INFO:_master_model_container: 12
2025-06-13 12:27:27,056:INFO:_display_container: 2
2025-06-13 12:27:27,056:INFO:DecisionTreeRegressor(random_state=123)
2025-06-13 12:27:27,056:INFO:create_model() successfully completed......................................
2025-06-13 12:27:27,190:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:27,190:INFO:Creating metrics dataframe
2025-06-13 12:27:27,220:INFO:Initializing Random Forest Regressor
2025-06-13 12:27:27,221:INFO:Total runtime is 0.23059025208155318 minutes
2025-06-13 12:27:27,234:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:27,235:INFO:Initializing create_model()
2025-06-13 12:27:27,235:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:27,236:INFO:Checking exceptions
2025-06-13 12:27:27,237:INFO:Importing libraries
2025-06-13 12:27:27,237:INFO:Copying training dataset
2025-06-13 12:27:27,255:INFO:Defining folds
2025-06-13 12:27:27,256:INFO:Declaring metric variables
2025-06-13 12:27:27,295:INFO:Importing untrained model
2025-06-13 12:27:27,321:INFO:Random Forest Regressor Imported successfully
2025-06-13 12:27:27,349:INFO:Starting cross validation
2025-06-13 12:27:27,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:36,995:INFO:Calculating mean and std
2025-06-13 12:27:36,999:INFO:Creating metrics dataframe
2025-06-13 12:27:37,005:INFO:Uploading results into container
2025-06-13 12:27:37,011:INFO:Uploading model into container now
2025-06-13 12:27:37,014:INFO:_master_model_container: 13
2025-06-13 12:27:37,014:INFO:_display_container: 2
2025-06-13 12:27:37,014:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:27:37,016:INFO:create_model() successfully completed......................................
2025-06-13 12:27:37,123:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:37,123:INFO:Creating metrics dataframe
2025-06-13 12:27:37,137:INFO:Initializing Extra Trees Regressor
2025-06-13 12:27:37,138:INFO:Total runtime is 0.39585335254669196 minutes
2025-06-13 12:27:37,146:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:37,147:INFO:Initializing create_model()
2025-06-13 12:27:37,147:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:37,148:INFO:Checking exceptions
2025-06-13 12:27:37,148:INFO:Importing libraries
2025-06-13 12:27:37,148:INFO:Copying training dataset
2025-06-13 12:27:37,159:INFO:Defining folds
2025-06-13 12:27:37,161:INFO:Declaring metric variables
2025-06-13 12:27:37,172:INFO:Importing untrained model
2025-06-13 12:27:37,185:INFO:Extra Trees Regressor Imported successfully
2025-06-13 12:27:37,206:INFO:Starting cross validation
2025-06-13 12:27:37,209:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:43,248:INFO:Calculating mean and std
2025-06-13 12:27:43,250:INFO:Creating metrics dataframe
2025-06-13 12:27:43,259:INFO:Uploading results into container
2025-06-13 12:27:43,261:INFO:Uploading model into container now
2025-06-13 12:27:43,261:INFO:_master_model_container: 14
2025-06-13 12:27:43,261:INFO:_display_container: 2
2025-06-13 12:27:43,263:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:27:43,263:INFO:create_model() successfully completed......................................
2025-06-13 12:27:43,369:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:43,370:INFO:Creating metrics dataframe
2025-06-13 12:27:43,385:INFO:Initializing AdaBoost Regressor
2025-06-13 12:27:43,385:INFO:Total runtime is 0.4999935348828634 minutes
2025-06-13 12:27:43,397:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:43,398:INFO:Initializing create_model()
2025-06-13 12:27:43,398:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:43,398:INFO:Checking exceptions
2025-06-13 12:27:43,398:INFO:Importing libraries
2025-06-13 12:27:43,399:INFO:Copying training dataset
2025-06-13 12:27:43,411:INFO:Defining folds
2025-06-13 12:27:43,411:INFO:Declaring metric variables
2025-06-13 12:27:43,425:INFO:Importing untrained model
2025-06-13 12:27:43,437:INFO:AdaBoost Regressor Imported successfully
2025-06-13 12:27:43,456:INFO:Starting cross validation
2025-06-13 12:27:43,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:44,477:INFO:Calculating mean and std
2025-06-13 12:27:44,484:INFO:Creating metrics dataframe
2025-06-13 12:27:44,503:INFO:Uploading results into container
2025-06-13 12:27:44,510:INFO:Uploading model into container now
2025-06-13 12:27:44,512:INFO:_master_model_container: 15
2025-06-13 12:27:44,513:INFO:_display_container: 2
2025-06-13 12:27:44,514:INFO:AdaBoostRegressor(random_state=123)
2025-06-13 12:27:44,514:INFO:create_model() successfully completed......................................
2025-06-13 12:27:44,704:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:44,705:INFO:Creating metrics dataframe
2025-06-13 12:27:44,746:INFO:Initializing Gradient Boosting Regressor
2025-06-13 12:27:44,747:INFO:Total runtime is 0.5226823806762696 minutes
2025-06-13 12:27:44,765:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:44,766:INFO:Initializing create_model()
2025-06-13 12:27:44,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:44,768:INFO:Checking exceptions
2025-06-13 12:27:44,769:INFO:Importing libraries
2025-06-13 12:27:44,769:INFO:Copying training dataset
2025-06-13 12:27:44,780:INFO:Defining folds
2025-06-13 12:27:44,780:INFO:Declaring metric variables
2025-06-13 12:27:44,799:INFO:Importing untrained model
2025-06-13 12:27:44,810:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:27:44,828:INFO:Starting cross validation
2025-06-13 12:27:44,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:47,549:INFO:Calculating mean and std
2025-06-13 12:27:47,552:INFO:Creating metrics dataframe
2025-06-13 12:27:47,560:INFO:Uploading results into container
2025-06-13 12:27:47,564:INFO:Uploading model into container now
2025-06-13 12:27:47,568:INFO:_master_model_container: 16
2025-06-13 12:27:47,569:INFO:_display_container: 2
2025-06-13 12:27:47,574:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:27:47,574:INFO:create_model() successfully completed......................................
2025-06-13 12:27:47,793:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:47,793:INFO:Creating metrics dataframe
2025-06-13 12:27:47,809:INFO:Initializing Light Gradient Boosting Machine
2025-06-13 12:27:47,810:INFO:Total runtime is 0.5737497846285503 minutes
2025-06-13 12:27:47,815:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:47,816:INFO:Initializing create_model()
2025-06-13 12:27:47,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:47,817:INFO:Checking exceptions
2025-06-13 12:27:47,817:INFO:Importing libraries
2025-06-13 12:27:47,817:INFO:Copying training dataset
2025-06-13 12:27:47,829:INFO:Defining folds
2025-06-13 12:27:47,829:INFO:Declaring metric variables
2025-06-13 12:27:47,835:INFO:Importing untrained model
2025-06-13 12:27:47,852:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-13 12:27:47,866:INFO:Starting cross validation
2025-06-13 12:27:47,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:49,069:INFO:Calculating mean and std
2025-06-13 12:27:49,071:INFO:Creating metrics dataframe
2025-06-13 12:27:49,080:INFO:Uploading results into container
2025-06-13 12:27:49,083:INFO:Uploading model into container now
2025-06-13 12:27:49,085:INFO:_master_model_container: 17
2025-06-13 12:27:49,085:INFO:_display_container: 2
2025-06-13 12:27:49,086:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:27:49,086:INFO:create_model() successfully completed......................................
2025-06-13 12:27:49,197:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:49,197:INFO:Creating metrics dataframe
2025-06-13 12:27:49,211:INFO:Initializing Dummy Regressor
2025-06-13 12:27:49,211:INFO:Total runtime is 0.5970898985862733 minutes
2025-06-13 12:27:49,217:INFO:SubProcess create_model() called ==================================
2025-06-13 12:27:49,218:INFO:Initializing create_model()
2025-06-13 12:27:49,218:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:49,218:INFO:Checking exceptions
2025-06-13 12:27:49,218:INFO:Importing libraries
2025-06-13 12:27:49,218:INFO:Copying training dataset
2025-06-13 12:27:49,229:INFO:Defining folds
2025-06-13 12:27:49,230:INFO:Declaring metric variables
2025-06-13 12:27:49,244:INFO:Importing untrained model
2025-06-13 12:27:49,255:INFO:Dummy Regressor Imported successfully
2025-06-13 12:27:49,279:INFO:Starting cross validation
2025-06-13 12:27:49,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:27:49,431:INFO:Calculating mean and std
2025-06-13 12:27:49,434:INFO:Creating metrics dataframe
2025-06-13 12:27:49,436:INFO:Uploading results into container
2025-06-13 12:27:49,437:INFO:Uploading model into container now
2025-06-13 12:27:49,440:INFO:_master_model_container: 18
2025-06-13 12:27:49,441:INFO:_display_container: 2
2025-06-13 12:27:49,443:INFO:DummyRegressor()
2025-06-13 12:27:49,443:INFO:create_model() successfully completed......................................
2025-06-13 12:27:49,566:INFO:SubProcess create_model() end ==================================
2025-06-13 12:27:49,567:INFO:Creating metrics dataframe
2025-06-13 12:27:49,580:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-13 12:27:49,608:INFO:Initializing create_model()
2025-06-13 12:27:49,608:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:27:49,608:INFO:Checking exceptions
2025-06-13 12:27:49,611:INFO:Importing libraries
2025-06-13 12:27:49,612:INFO:Copying training dataset
2025-06-13 12:27:49,630:INFO:Defining folds
2025-06-13 12:27:49,630:INFO:Declaring metric variables
2025-06-13 12:27:49,630:INFO:Importing untrained model
2025-06-13 12:27:49,631:INFO:Declaring custom model
2025-06-13 12:27:49,631:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:27:49,632:INFO:Cross validation set to False
2025-06-13 12:27:49,632:INFO:Fitting Model
2025-06-13 12:27:50,465:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:27:50,465:INFO:create_model() successfully completed......................................
2025-06-13 12:27:50,640:INFO:_master_model_container: 18
2025-06-13 12:27:50,640:INFO:_display_container: 2
2025-06-13 12:27:50,641:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:27:50,641:INFO:compare_models() successfully completed......................................
2025-06-13 12:28:03,485:INFO:Initializing compare_models()
2025-06-13 12:28:03,485:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-13 12:28:03,485:INFO:Checking exceptions
2025-06-13 12:28:03,492:INFO:Preparing display monitor
2025-06-13 12:28:03,550:INFO:Initializing Linear Regression
2025-06-13 12:28:03,550:INFO:Total runtime is 0.0 minutes
2025-06-13 12:28:03,568:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:03,571:INFO:Initializing create_model()
2025-06-13 12:28:03,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:03,571:INFO:Checking exceptions
2025-06-13 12:28:03,571:INFO:Importing libraries
2025-06-13 12:28:03,571:INFO:Copying training dataset
2025-06-13 12:28:03,583:INFO:Defining folds
2025-06-13 12:28:03,583:INFO:Declaring metric variables
2025-06-13 12:28:03,600:INFO:Importing untrained model
2025-06-13 12:28:03,617:INFO:Linear Regression Imported successfully
2025-06-13 12:28:03,649:INFO:Starting cross validation
2025-06-13 12:28:03,653:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:03,921:INFO:Calculating mean and std
2025-06-13 12:28:03,922:INFO:Creating metrics dataframe
2025-06-13 12:28:03,926:INFO:Uploading results into container
2025-06-13 12:28:03,927:INFO:Uploading model into container now
2025-06-13 12:28:03,928:INFO:_master_model_container: 19
2025-06-13 12:28:03,928:INFO:_display_container: 3
2025-06-13 12:28:03,929:INFO:LinearRegression(n_jobs=-1)
2025-06-13 12:28:03,929:INFO:create_model() successfully completed......................................
2025-06-13 12:28:04,126:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:04,126:INFO:Creating metrics dataframe
2025-06-13 12:28:04,135:INFO:Initializing Lasso Regression
2025-06-13 12:28:04,135:INFO:Total runtime is 0.009749253590901693 minutes
2025-06-13 12:28:04,144:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:04,145:INFO:Initializing create_model()
2025-06-13 12:28:04,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:04,145:INFO:Checking exceptions
2025-06-13 12:28:04,145:INFO:Importing libraries
2025-06-13 12:28:04,145:INFO:Copying training dataset
2025-06-13 12:28:04,162:INFO:Defining folds
2025-06-13 12:28:04,163:INFO:Declaring metric variables
2025-06-13 12:28:04,167:INFO:Importing untrained model
2025-06-13 12:28:04,181:INFO:Lasso Regression Imported successfully
2025-06-13 12:28:04,200:INFO:Starting cross validation
2025-06-13 12:28:04,201:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:04,376:INFO:Calculating mean and std
2025-06-13 12:28:04,377:INFO:Creating metrics dataframe
2025-06-13 12:28:04,379:INFO:Uploading results into container
2025-06-13 12:28:04,380:INFO:Uploading model into container now
2025-06-13 12:28:04,381:INFO:_master_model_container: 20
2025-06-13 12:28:04,381:INFO:_display_container: 3
2025-06-13 12:28:04,381:INFO:Lasso(random_state=123)
2025-06-13 12:28:04,382:INFO:create_model() successfully completed......................................
2025-06-13 12:28:04,541:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:04,541:INFO:Creating metrics dataframe
2025-06-13 12:28:04,557:INFO:Initializing Ridge Regression
2025-06-13 12:28:04,557:INFO:Total runtime is 0.01679310401280721 minutes
2025-06-13 12:28:04,565:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:04,567:INFO:Initializing create_model()
2025-06-13 12:28:04,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:04,567:INFO:Checking exceptions
2025-06-13 12:28:04,568:INFO:Importing libraries
2025-06-13 12:28:04,568:INFO:Copying training dataset
2025-06-13 12:28:04,584:INFO:Defining folds
2025-06-13 12:28:04,584:INFO:Declaring metric variables
2025-06-13 12:28:04,597:INFO:Importing untrained model
2025-06-13 12:28:04,610:INFO:Ridge Regression Imported successfully
2025-06-13 12:28:04,633:INFO:Starting cross validation
2025-06-13 12:28:04,635:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:04,800:INFO:Calculating mean and std
2025-06-13 12:28:04,803:INFO:Creating metrics dataframe
2025-06-13 12:28:04,823:INFO:Uploading results into container
2025-06-13 12:28:04,827:INFO:Uploading model into container now
2025-06-13 12:28:04,829:INFO:_master_model_container: 21
2025-06-13 12:28:04,829:INFO:_display_container: 3
2025-06-13 12:28:04,830:INFO:Ridge(random_state=123)
2025-06-13 12:28:04,830:INFO:create_model() successfully completed......................................
2025-06-13 12:28:04,943:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:04,943:INFO:Creating metrics dataframe
2025-06-13 12:28:04,953:INFO:Initializing Elastic Net
2025-06-13 12:28:04,953:INFO:Total runtime is 0.023389780521392824 minutes
2025-06-13 12:28:04,962:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:04,963:INFO:Initializing create_model()
2025-06-13 12:28:04,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:04,963:INFO:Checking exceptions
2025-06-13 12:28:04,964:INFO:Importing libraries
2025-06-13 12:28:04,964:INFO:Copying training dataset
2025-06-13 12:28:04,981:INFO:Defining folds
2025-06-13 12:28:04,982:INFO:Declaring metric variables
2025-06-13 12:28:04,995:INFO:Importing untrained model
2025-06-13 12:28:05,019:INFO:Elastic Net Imported successfully
2025-06-13 12:28:05,040:INFO:Starting cross validation
2025-06-13 12:28:05,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:05,193:INFO:Calculating mean and std
2025-06-13 12:28:05,194:INFO:Creating metrics dataframe
2025-06-13 12:28:05,202:INFO:Uploading results into container
2025-06-13 12:28:05,203:INFO:Uploading model into container now
2025-06-13 12:28:05,205:INFO:_master_model_container: 22
2025-06-13 12:28:05,206:INFO:_display_container: 3
2025-06-13 12:28:05,207:INFO:ElasticNet(random_state=123)
2025-06-13 12:28:05,207:INFO:create_model() successfully completed......................................
2025-06-13 12:28:05,369:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:05,369:INFO:Creating metrics dataframe
2025-06-13 12:28:05,394:INFO:Initializing Least Angle Regression
2025-06-13 12:28:05,394:INFO:Total runtime is 0.0307475487391154 minutes
2025-06-13 12:28:05,408:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:05,410:INFO:Initializing create_model()
2025-06-13 12:28:05,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:05,410:INFO:Checking exceptions
2025-06-13 12:28:05,410:INFO:Importing libraries
2025-06-13 12:28:05,411:INFO:Copying training dataset
2025-06-13 12:28:05,428:INFO:Defining folds
2025-06-13 12:28:05,428:INFO:Declaring metric variables
2025-06-13 12:28:05,464:INFO:Importing untrained model
2025-06-13 12:28:05,498:INFO:Least Angle Regression Imported successfully
2025-06-13 12:28:05,523:INFO:Starting cross validation
2025-06-13 12:28:05,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:05,678:INFO:Calculating mean and std
2025-06-13 12:28:05,680:INFO:Creating metrics dataframe
2025-06-13 12:28:05,683:INFO:Uploading results into container
2025-06-13 12:28:05,684:INFO:Uploading model into container now
2025-06-13 12:28:05,686:INFO:_master_model_container: 23
2025-06-13 12:28:05,687:INFO:_display_container: 3
2025-06-13 12:28:05,689:INFO:Lars(random_state=123)
2025-06-13 12:28:05,689:INFO:create_model() successfully completed......................................
2025-06-13 12:28:05,828:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:05,828:INFO:Creating metrics dataframe
2025-06-13 12:28:05,854:INFO:Initializing Lasso Least Angle Regression
2025-06-13 12:28:05,856:INFO:Total runtime is 0.03843674262364706 minutes
2025-06-13 12:28:05,867:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:05,868:INFO:Initializing create_model()
2025-06-13 12:28:05,868:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:05,869:INFO:Checking exceptions
2025-06-13 12:28:05,869:INFO:Importing libraries
2025-06-13 12:28:05,872:INFO:Copying training dataset
2025-06-13 12:28:05,898:INFO:Defining folds
2025-06-13 12:28:05,898:INFO:Declaring metric variables
2025-06-13 12:28:05,914:INFO:Importing untrained model
2025-06-13 12:28:05,932:INFO:Lasso Least Angle Regression Imported successfully
2025-06-13 12:28:05,951:INFO:Starting cross validation
2025-06-13 12:28:05,956:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:06,117:INFO:Calculating mean and std
2025-06-13 12:28:06,119:INFO:Creating metrics dataframe
2025-06-13 12:28:06,124:INFO:Uploading results into container
2025-06-13 12:28:06,125:INFO:Uploading model into container now
2025-06-13 12:28:06,126:INFO:_master_model_container: 24
2025-06-13 12:28:06,126:INFO:_display_container: 3
2025-06-13 12:28:06,130:INFO:LassoLars(random_state=123)
2025-06-13 12:28:06,130:INFO:create_model() successfully completed......................................
2025-06-13 12:28:06,267:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:06,268:INFO:Creating metrics dataframe
2025-06-13 12:28:06,298:INFO:Initializing Orthogonal Matching Pursuit
2025-06-13 12:28:06,299:INFO:Total runtime is 0.04581081867218018 minutes
2025-06-13 12:28:06,333:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:06,345:INFO:Initializing create_model()
2025-06-13 12:28:06,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:06,346:INFO:Checking exceptions
2025-06-13 12:28:06,347:INFO:Importing libraries
2025-06-13 12:28:06,347:INFO:Copying training dataset
2025-06-13 12:28:06,399:INFO:Defining folds
2025-06-13 12:28:06,399:INFO:Declaring metric variables
2025-06-13 12:28:06,413:INFO:Importing untrained model
2025-06-13 12:28:06,427:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-13 12:28:06,456:INFO:Starting cross validation
2025-06-13 12:28:06,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:06,646:INFO:Calculating mean and std
2025-06-13 12:28:06,648:INFO:Creating metrics dataframe
2025-06-13 12:28:06,658:INFO:Uploading results into container
2025-06-13 12:28:06,660:INFO:Uploading model into container now
2025-06-13 12:28:06,661:INFO:_master_model_container: 25
2025-06-13 12:28:06,661:INFO:_display_container: 3
2025-06-13 12:28:06,661:INFO:OrthogonalMatchingPursuit()
2025-06-13 12:28:06,661:INFO:create_model() successfully completed......................................
2025-06-13 12:28:06,772:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:06,772:INFO:Creating metrics dataframe
2025-06-13 12:28:06,788:INFO:Initializing Bayesian Ridge
2025-06-13 12:28:06,789:INFO:Total runtime is 0.05398321151733399 minutes
2025-06-13 12:28:06,797:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:06,798:INFO:Initializing create_model()
2025-06-13 12:28:06,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:06,800:INFO:Checking exceptions
2025-06-13 12:28:06,800:INFO:Importing libraries
2025-06-13 12:28:06,801:INFO:Copying training dataset
2025-06-13 12:28:06,824:INFO:Defining folds
2025-06-13 12:28:06,825:INFO:Declaring metric variables
2025-06-13 12:28:06,838:INFO:Importing untrained model
2025-06-13 12:28:06,852:INFO:Bayesian Ridge Imported successfully
2025-06-13 12:28:06,869:INFO:Starting cross validation
2025-06-13 12:28:06,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:07,052:INFO:Calculating mean and std
2025-06-13 12:28:07,055:INFO:Creating metrics dataframe
2025-06-13 12:28:07,063:INFO:Uploading results into container
2025-06-13 12:28:07,065:INFO:Uploading model into container now
2025-06-13 12:28:07,066:INFO:_master_model_container: 26
2025-06-13 12:28:07,067:INFO:_display_container: 3
2025-06-13 12:28:07,068:INFO:BayesianRidge()
2025-06-13 12:28:07,068:INFO:create_model() successfully completed......................................
2025-06-13 12:28:07,175:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:07,175:INFO:Creating metrics dataframe
2025-06-13 12:28:07,190:INFO:Initializing Passive Aggressive Regressor
2025-06-13 12:28:07,190:INFO:Total runtime is 0.06067467530568441 minutes
2025-06-13 12:28:07,199:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:07,200:INFO:Initializing create_model()
2025-06-13 12:28:07,200:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:07,200:INFO:Checking exceptions
2025-06-13 12:28:07,201:INFO:Importing libraries
2025-06-13 12:28:07,201:INFO:Copying training dataset
2025-06-13 12:28:07,223:INFO:Defining folds
2025-06-13 12:28:07,223:INFO:Declaring metric variables
2025-06-13 12:28:07,236:INFO:Importing untrained model
2025-06-13 12:28:07,264:INFO:Passive Aggressive Regressor Imported successfully
2025-06-13 12:28:07,285:INFO:Starting cross validation
2025-06-13 12:28:07,291:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:07,491:INFO:Calculating mean and std
2025-06-13 12:28:07,493:INFO:Creating metrics dataframe
2025-06-13 12:28:07,502:INFO:Uploading results into container
2025-06-13 12:28:07,508:INFO:Uploading model into container now
2025-06-13 12:28:07,510:INFO:_master_model_container: 27
2025-06-13 12:28:07,511:INFO:_display_container: 3
2025-06-13 12:28:07,512:INFO:PassiveAggressiveRegressor(random_state=123)
2025-06-13 12:28:07,512:INFO:create_model() successfully completed......................................
2025-06-13 12:28:07,632:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:07,632:INFO:Creating metrics dataframe
2025-06-13 12:28:07,645:INFO:Initializing Huber Regressor
2025-06-13 12:28:07,646:INFO:Total runtime is 0.06827287673950196 minutes
2025-06-13 12:28:07,655:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:07,656:INFO:Initializing create_model()
2025-06-13 12:28:07,656:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:07,656:INFO:Checking exceptions
2025-06-13 12:28:07,657:INFO:Importing libraries
2025-06-13 12:28:07,657:INFO:Copying training dataset
2025-06-13 12:28:07,713:INFO:Defining folds
2025-06-13 12:28:07,713:INFO:Declaring metric variables
2025-06-13 12:28:07,731:INFO:Importing untrained model
2025-06-13 12:28:07,744:INFO:Huber Regressor Imported successfully
2025-06-13 12:28:07,764:INFO:Starting cross validation
2025-06-13 12:28:07,766:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:07,995:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:28:08,007:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:28:08,041:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:28:08,218:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:28:08,234:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:28:08,240:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:28:08,299:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:28:08,397:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-13 12:28:08,433:INFO:Calculating mean and std
2025-06-13 12:28:08,435:INFO:Creating metrics dataframe
2025-06-13 12:28:08,461:INFO:Uploading results into container
2025-06-13 12:28:08,463:INFO:Uploading model into container now
2025-06-13 12:28:08,465:INFO:_master_model_container: 28
2025-06-13 12:28:08,465:INFO:_display_container: 3
2025-06-13 12:28:08,467:INFO:HuberRegressor()
2025-06-13 12:28:08,467:INFO:create_model() successfully completed......................................
2025-06-13 12:28:08,662:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:08,663:INFO:Creating metrics dataframe
2025-06-13 12:28:08,674:INFO:Initializing K Neighbors Regressor
2025-06-13 12:28:08,674:INFO:Total runtime is 0.08540499607721964 minutes
2025-06-13 12:28:08,681:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:08,682:INFO:Initializing create_model()
2025-06-13 12:28:08,682:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:08,683:INFO:Checking exceptions
2025-06-13 12:28:08,683:INFO:Importing libraries
2025-06-13 12:28:08,683:INFO:Copying training dataset
2025-06-13 12:28:08,697:INFO:Defining folds
2025-06-13 12:28:08,697:INFO:Declaring metric variables
2025-06-13 12:28:08,708:INFO:Importing untrained model
2025-06-13 12:28:08,729:INFO:K Neighbors Regressor Imported successfully
2025-06-13 12:28:08,749:INFO:Starting cross validation
2025-06-13 12:28:08,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:09,025:INFO:Calculating mean and std
2025-06-13 12:28:09,027:INFO:Creating metrics dataframe
2025-06-13 12:28:09,036:INFO:Uploading results into container
2025-06-13 12:28:09,044:INFO:Uploading model into container now
2025-06-13 12:28:09,046:INFO:_master_model_container: 29
2025-06-13 12:28:09,046:INFO:_display_container: 3
2025-06-13 12:28:09,047:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-13 12:28:09,047:INFO:create_model() successfully completed......................................
2025-06-13 12:28:09,215:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:09,215:INFO:Creating metrics dataframe
2025-06-13 12:28:09,234:INFO:Initializing Decision Tree Regressor
2025-06-13 12:28:09,234:INFO:Total runtime is 0.09473285675048829 minutes
2025-06-13 12:28:09,244:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:09,244:INFO:Initializing create_model()
2025-06-13 12:28:09,244:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:09,245:INFO:Checking exceptions
2025-06-13 12:28:09,245:INFO:Importing libraries
2025-06-13 12:28:09,245:INFO:Copying training dataset
2025-06-13 12:28:09,254:INFO:Defining folds
2025-06-13 12:28:09,256:INFO:Declaring metric variables
2025-06-13 12:28:09,273:INFO:Importing untrained model
2025-06-13 12:28:09,285:INFO:Decision Tree Regressor Imported successfully
2025-06-13 12:28:09,307:INFO:Starting cross validation
2025-06-13 12:28:09,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:09,635:INFO:Calculating mean and std
2025-06-13 12:28:09,639:INFO:Creating metrics dataframe
2025-06-13 12:28:09,644:INFO:Uploading results into container
2025-06-13 12:28:09,647:INFO:Uploading model into container now
2025-06-13 12:28:09,650:INFO:_master_model_container: 30
2025-06-13 12:28:09,650:INFO:_display_container: 3
2025-06-13 12:28:09,651:INFO:DecisionTreeRegressor(random_state=123)
2025-06-13 12:28:09,651:INFO:create_model() successfully completed......................................
2025-06-13 12:28:09,758:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:09,759:INFO:Creating metrics dataframe
2025-06-13 12:28:09,780:INFO:Initializing Random Forest Regressor
2025-06-13 12:28:09,780:INFO:Total runtime is 0.10383549531300863 minutes
2025-06-13 12:28:09,789:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:09,789:INFO:Initializing create_model()
2025-06-13 12:28:09,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:09,790:INFO:Checking exceptions
2025-06-13 12:28:09,790:INFO:Importing libraries
2025-06-13 12:28:09,791:INFO:Copying training dataset
2025-06-13 12:28:09,814:INFO:Defining folds
2025-06-13 12:28:09,815:INFO:Declaring metric variables
2025-06-13 12:28:09,830:INFO:Importing untrained model
2025-06-13 12:28:09,846:INFO:Random Forest Regressor Imported successfully
2025-06-13 12:28:09,863:INFO:Starting cross validation
2025-06-13 12:28:09,866:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:19,758:INFO:Calculating mean and std
2025-06-13 12:28:19,765:INFO:Creating metrics dataframe
2025-06-13 12:28:19,774:INFO:Uploading results into container
2025-06-13 12:28:19,776:INFO:Uploading model into container now
2025-06-13 12:28:19,778:INFO:_master_model_container: 31
2025-06-13 12:28:19,779:INFO:_display_container: 3
2025-06-13 12:28:19,779:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:28:19,779:INFO:create_model() successfully completed......................................
2025-06-13 12:28:19,995:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:19,995:INFO:Creating metrics dataframe
2025-06-13 12:28:20,011:INFO:Initializing Extra Trees Regressor
2025-06-13 12:28:20,011:INFO:Total runtime is 0.27435040871302285 minutes
2025-06-13 12:28:20,020:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:20,021:INFO:Initializing create_model()
2025-06-13 12:28:20,022:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:20,023:INFO:Checking exceptions
2025-06-13 12:28:20,023:INFO:Importing libraries
2025-06-13 12:28:20,024:INFO:Copying training dataset
2025-06-13 12:28:20,043:INFO:Defining folds
2025-06-13 12:28:20,043:INFO:Declaring metric variables
2025-06-13 12:28:20,064:INFO:Importing untrained model
2025-06-13 12:28:20,077:INFO:Extra Trees Regressor Imported successfully
2025-06-13 12:28:20,100:INFO:Starting cross validation
2025-06-13 12:28:20,101:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:26,846:INFO:Calculating mean and std
2025-06-13 12:28:26,847:INFO:Creating metrics dataframe
2025-06-13 12:28:26,851:INFO:Uploading results into container
2025-06-13 12:28:26,854:INFO:Uploading model into container now
2025-06-13 12:28:26,855:INFO:_master_model_container: 32
2025-06-13 12:28:26,855:INFO:_display_container: 3
2025-06-13 12:28:26,856:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:28:26,856:INFO:create_model() successfully completed......................................
2025-06-13 12:28:26,974:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:26,974:INFO:Creating metrics dataframe
2025-06-13 12:28:26,995:INFO:Initializing AdaBoost Regressor
2025-06-13 12:28:26,995:INFO:Total runtime is 0.3907625079154968 minutes
2025-06-13 12:28:27,006:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:27,006:INFO:Initializing create_model()
2025-06-13 12:28:27,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:27,006:INFO:Checking exceptions
2025-06-13 12:28:27,008:INFO:Importing libraries
2025-06-13 12:28:27,008:INFO:Copying training dataset
2025-06-13 12:28:27,026:INFO:Defining folds
2025-06-13 12:28:27,027:INFO:Declaring metric variables
2025-06-13 12:28:27,043:INFO:Importing untrained model
2025-06-13 12:28:27,057:INFO:AdaBoost Regressor Imported successfully
2025-06-13 12:28:27,089:INFO:Starting cross validation
2025-06-13 12:28:27,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:28,096:INFO:Calculating mean and std
2025-06-13 12:28:28,100:INFO:Creating metrics dataframe
2025-06-13 12:28:28,105:INFO:Uploading results into container
2025-06-13 12:28:28,106:INFO:Uploading model into container now
2025-06-13 12:28:28,107:INFO:_master_model_container: 33
2025-06-13 12:28:28,107:INFO:_display_container: 3
2025-06-13 12:28:28,107:INFO:AdaBoostRegressor(random_state=123)
2025-06-13 12:28:28,109:INFO:create_model() successfully completed......................................
2025-06-13 12:28:28,241:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:28,241:INFO:Creating metrics dataframe
2025-06-13 12:28:28,265:INFO:Initializing Gradient Boosting Regressor
2025-06-13 12:28:28,265:INFO:Total runtime is 0.41192017793655394 minutes
2025-06-13 12:28:28,276:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:28,276:INFO:Initializing create_model()
2025-06-13 12:28:28,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:28,277:INFO:Checking exceptions
2025-06-13 12:28:28,277:INFO:Importing libraries
2025-06-13 12:28:28,277:INFO:Copying training dataset
2025-06-13 12:28:28,293:INFO:Defining folds
2025-06-13 12:28:28,294:INFO:Declaring metric variables
2025-06-13 12:28:28,309:INFO:Importing untrained model
2025-06-13 12:28:28,323:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:28:28,357:INFO:Starting cross validation
2025-06-13 12:28:28,360:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:31,269:INFO:Calculating mean and std
2025-06-13 12:28:31,273:INFO:Creating metrics dataframe
2025-06-13 12:28:31,281:INFO:Uploading results into container
2025-06-13 12:28:31,283:INFO:Uploading model into container now
2025-06-13 12:28:31,287:INFO:_master_model_container: 34
2025-06-13 12:28:31,287:INFO:_display_container: 3
2025-06-13 12:28:31,290:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:28:31,292:INFO:create_model() successfully completed......................................
2025-06-13 12:28:31,394:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:31,394:INFO:Creating metrics dataframe
2025-06-13 12:28:31,406:INFO:Initializing Light Gradient Boosting Machine
2025-06-13 12:28:31,406:INFO:Total runtime is 0.4642739772796631 minutes
2025-06-13 12:28:31,415:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:31,416:INFO:Initializing create_model()
2025-06-13 12:28:31,416:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:31,416:INFO:Checking exceptions
2025-06-13 12:28:31,416:INFO:Importing libraries
2025-06-13 12:28:31,417:INFO:Copying training dataset
2025-06-13 12:28:31,432:INFO:Defining folds
2025-06-13 12:28:31,432:INFO:Declaring metric variables
2025-06-13 12:28:31,441:INFO:Importing untrained model
2025-06-13 12:28:31,488:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-13 12:28:31,514:INFO:Starting cross validation
2025-06-13 12:28:31,515:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:32,726:INFO:Calculating mean and std
2025-06-13 12:28:32,728:INFO:Creating metrics dataframe
2025-06-13 12:28:32,739:INFO:Uploading results into container
2025-06-13 12:28:32,741:INFO:Uploading model into container now
2025-06-13 12:28:32,742:INFO:_master_model_container: 35
2025-06-13 12:28:32,742:INFO:_display_container: 3
2025-06-13 12:28:32,743:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-06-13 12:28:32,744:INFO:create_model() successfully completed......................................
2025-06-13 12:28:32,845:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:32,846:INFO:Creating metrics dataframe
2025-06-13 12:28:32,861:INFO:Initializing Dummy Regressor
2025-06-13 12:28:32,861:INFO:Total runtime is 0.4885261535644531 minutes
2025-06-13 12:28:32,870:INFO:SubProcess create_model() called ==================================
2025-06-13 12:28:32,871:INFO:Initializing create_model()
2025-06-13 12:28:32,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FA5A8A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:32,871:INFO:Checking exceptions
2025-06-13 12:28:32,871:INFO:Importing libraries
2025-06-13 12:28:32,871:INFO:Copying training dataset
2025-06-13 12:28:32,887:INFO:Defining folds
2025-06-13 12:28:32,888:INFO:Declaring metric variables
2025-06-13 12:28:32,896:INFO:Importing untrained model
2025-06-13 12:28:32,912:INFO:Dummy Regressor Imported successfully
2025-06-13 12:28:32,937:INFO:Starting cross validation
2025-06-13 12:28:32,941:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:28:33,102:INFO:Calculating mean and std
2025-06-13 12:28:33,103:INFO:Creating metrics dataframe
2025-06-13 12:28:33,112:INFO:Uploading results into container
2025-06-13 12:28:33,114:INFO:Uploading model into container now
2025-06-13 12:28:33,115:INFO:_master_model_container: 36
2025-06-13 12:28:33,115:INFO:_display_container: 3
2025-06-13 12:28:33,116:INFO:DummyRegressor()
2025-06-13 12:28:33,116:INFO:create_model() successfully completed......................................
2025-06-13 12:28:33,225:INFO:SubProcess create_model() end ==================================
2025-06-13 12:28:33,225:INFO:Creating metrics dataframe
2025-06-13 12:28:33,250:WARNING:c:\Users\samee\OneDrive\Desktop\FLASK tutorial\aiml sales\model1\pycaret-env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-13 12:28:33,315:INFO:Initializing create_model()
2025-06-13 12:28:33,315:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:28:33,316:INFO:Checking exceptions
2025-06-13 12:28:33,334:INFO:Importing libraries
2025-06-13 12:28:33,334:INFO:Copying training dataset
2025-06-13 12:28:33,356:INFO:Defining folds
2025-06-13 12:28:33,356:INFO:Declaring metric variables
2025-06-13 12:28:33,357:INFO:Importing untrained model
2025-06-13 12:28:33,357:INFO:Declaring custom model
2025-06-13 12:28:33,362:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:28:33,363:INFO:Cross validation set to False
2025-06-13 12:28:33,363:INFO:Fitting Model
2025-06-13 12:28:34,214:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:28:34,214:INFO:create_model() successfully completed......................................
2025-06-13 12:28:34,410:INFO:_master_model_container: 36
2025-06-13 12:28:34,410:INFO:_display_container: 3
2025-06-13 12:28:34,412:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:28:34,412:INFO:compare_models() successfully completed......................................
2025-06-13 12:28:42,415:INFO:Initializing tune_model()
2025-06-13 12:28:42,416:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-optimize, search_algorithm=bayesian, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>)
2025-06-13 12:28:42,416:INFO:Checking exceptions
2025-06-13 12:28:42,416:INFO:Soft dependency imported: skopt: 0.10.2
2025-06-13 12:28:42,453:INFO:Copying training dataset
2025-06-13 12:28:42,469:INFO:Checking base model
2025-06-13 12:28:42,469:INFO:Base model : Gradient Boosting Regressor
2025-06-13 12:28:42,483:INFO:Declaring metric variables
2025-06-13 12:28:42,514:INFO:Defining Hyperparameters
2025-06-13 12:28:42,756:INFO:Tuning with n_jobs=-1
2025-06-13 12:28:42,766:INFO:Initializing skopt.BayesSearchCV
2025-06-13 12:29:12,711:INFO:best_params: OrderedDict([('actual_estimator__learning_rate', 0.0238190072917794), ('actual_estimator__max_depth', 3), ('actual_estimator__max_features', 0.4284489606984907), ('actual_estimator__min_impurity_decrease', 0.002646746704757545), ('actual_estimator__min_samples_leaf', 5), ('actual_estimator__min_samples_split', 9), ('actual_estimator__n_estimators', 239), ('actual_estimator__subsample', 0.7687727671549709)])
2025-06-13 12:29:12,715:INFO:Hyperparameter search completed
2025-06-13 12:29:12,716:INFO:SubProcess create_model() called ==================================
2025-06-13 12:29:12,718:INFO:Initializing create_model()
2025-06-13 12:29:12,718:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224FAD308B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'learning_rate': 0.0238190072917794, 'max_depth': 3, 'max_features': 0.4284489606984907, 'min_impurity_decrease': 0.002646746704757545, 'min_samples_leaf': 5, 'min_samples_split': 9, 'n_estimators': 239, 'subsample': 0.7687727671549709})
2025-06-13 12:29:12,719:INFO:Checking exceptions
2025-06-13 12:29:12,719:INFO:Importing libraries
2025-06-13 12:29:12,719:INFO:Copying training dataset
2025-06-13 12:29:12,735:INFO:Defining folds
2025-06-13 12:29:12,736:INFO:Declaring metric variables
2025-06-13 12:29:12,739:INFO:Importing untrained model
2025-06-13 12:29:12,739:INFO:Declaring custom model
2025-06-13 12:29:12,753:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:29:12,772:INFO:Starting cross validation
2025-06-13 12:29:12,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:29:16,017:INFO:Calculating mean and std
2025-06-13 12:29:16,020:INFO:Creating metrics dataframe
2025-06-13 12:29:16,044:INFO:Finalizing model
2025-06-13 12:29:16,880:INFO:Uploading results into container
2025-06-13 12:29:16,884:INFO:Uploading model into container now
2025-06-13 12:29:16,884:INFO:_master_model_container: 37
2025-06-13 12:29:16,884:INFO:_display_container: 4
2025-06-13 12:29:16,890:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-13 12:29:16,891:INFO:create_model() successfully completed......................................
2025-06-13 12:29:17,100:INFO:SubProcess create_model() end ==================================
2025-06-13 12:29:17,100:INFO:choose_better activated
2025-06-13 12:29:17,104:INFO:SubProcess create_model() called ==================================
2025-06-13 12:29:17,106:INFO:Initializing create_model()
2025-06-13 12:29:17,106:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:29:17,106:INFO:Checking exceptions
2025-06-13 12:29:17,112:INFO:Importing libraries
2025-06-13 12:29:17,112:INFO:Copying training dataset
2025-06-13 12:29:17,125:INFO:Defining folds
2025-06-13 12:29:17,125:INFO:Declaring metric variables
2025-06-13 12:29:17,126:INFO:Importing untrained model
2025-06-13 12:29:17,126:INFO:Declaring custom model
2025-06-13 12:29:17,129:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:29:17,130:INFO:Starting cross validation
2025-06-13 12:29:17,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-13 12:29:19,778:INFO:Calculating mean and std
2025-06-13 12:29:19,779:INFO:Creating metrics dataframe
2025-06-13 12:29:19,787:INFO:Finalizing model
2025-06-13 12:29:20,460:INFO:Uploading results into container
2025-06-13 12:29:20,462:INFO:Uploading model into container now
2025-06-13 12:29:20,462:INFO:_master_model_container: 38
2025-06-13 12:29:20,464:INFO:_display_container: 5
2025-06-13 12:29:20,464:INFO:GradientBoostingRegressor(random_state=123)
2025-06-13 12:29:20,464:INFO:create_model() successfully completed......................................
2025-06-13 12:29:20,556:INFO:SubProcess create_model() end ==================================
2025-06-13 12:29:20,556:INFO:GradientBoostingRegressor(random_state=123) result for R2 is 0.5916
2025-06-13 12:29:20,558:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) result for R2 is 0.593
2025-06-13 12:29:20,559:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709) is best model
2025-06-13 12:29:20,559:INFO:choose_better completed
2025-06-13 12:29:20,578:INFO:_master_model_container: 38
2025-06-13 12:29:20,578:INFO:_display_container: 4
2025-06-13 12:29:20,580:INFO:GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-13 12:29:20,581:INFO:tune_model() successfully completed......................................
2025-06-13 12:29:24,770:INFO:Initializing finalize_model()
2025-06-13 12:29:24,770:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-13 12:29:24,771:INFO:Finalizing GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709)
2025-06-13 12:29:24,786:INFO:Initializing create_model()
2025-06-13 12:29:24,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000224FCC96860>, estimator=GradientBoostingRegressor(learning_rate=0.0238190072917794,
                          max_features=0.4284489606984907,
                          min_impurity_decrease=0.002646746704757545,
                          min_samples_leaf=5, min_samples_split=9,
                          n_estimators=239, random_state=123,
                          subsample=0.7687727671549709), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-13 12:29:24,786:INFO:Checking exceptions
2025-06-13 12:29:24,791:INFO:Importing libraries
2025-06-13 12:29:24,791:INFO:Copying training dataset
2025-06-13 12:29:24,793:INFO:Defining folds
2025-06-13 12:29:24,793:INFO:Declaring metric variables
2025-06-13 12:29:24,793:INFO:Importing untrained model
2025-06-13 12:29:24,794:INFO:Declaring custom model
2025-06-13 12:29:24,796:INFO:Gradient Boosting Regressor Imported successfully
2025-06-13 12:29:24,797:INFO:Cross validation set to False
2025-06-13 12:29:24,797:INFO:Fitting Model
2025-06-13 12:29:25,966:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-13 12:29:25,967:INFO:create_model() successfully completed......................................
2025-06-13 12:29:26,067:INFO:_master_model_container: 38
2025-06-13 12:29:26,067:INFO:_display_container: 4
2025-06-13 12:29:26,073:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-13 12:29:26,075:INFO:finalize_model() successfully completed......................................
2025-06-13 12:29:26,183:INFO:Initializing save_model()
2025-06-13 12:29:26,184:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), model_name=bigmart_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\samee\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-13 12:29:26,184:INFO:Adding model into prep_pipe
2025-06-13 12:29:26,184:WARNING:Only Model saved as it was a pipeline.
2025-06-13 12:29:26,197:INFO:bigmart_best_model.pkl saved in current working directory
2025-06-13 12:29:26,207:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))])
2025-06-13 12:29:26,207:INFO:save_model() successfully completed......................................
2025-06-13 12:29:48,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:29:48,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:29:48,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:29:48,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-13 12:29:49,381:INFO:Initializing load_model()
2025-06-13 12:29:49,381:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:30:12,416:INFO:Initializing load_model()
2025-06-13 12:30:12,417:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:30:12,541:INFO:Initializing predict_model()
2025-06-13 12:30:12,541:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000169921E4760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001699246A290>)
2025-06-13 12:30:12,541:INFO:Checking exceptions
2025-06-13 12:30:12,541:INFO:Preloading libraries
2025-06-13 12:30:12,543:INFO:Set up data.
2025-06-13 12:30:12,561:INFO:Set up index.
2025-06-13 12:30:24,627:INFO:Initializing load_model()
2025-06-13 12:30:24,628:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:30:24,705:INFO:Initializing predict_model()
2025-06-13 12:30:24,706:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000169FC9373A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000169915472E0>)
2025-06-13 12:30:24,706:INFO:Checking exceptions
2025-06-13 12:30:24,706:INFO:Preloading libraries
2025-06-13 12:30:24,707:INFO:Set up data.
2025-06-13 12:30:24,720:INFO:Set up index.
2025-06-13 12:30:49,965:INFO:Initializing load_model()
2025-06-13 12:30:49,965:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:30:50,073:INFO:Initializing predict_model()
2025-06-13 12:30:50,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001699214E050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001699246ACB0>)
2025-06-13 12:30:50,075:INFO:Checking exceptions
2025-06-13 12:30:50,075:INFO:Preloading libraries
2025-06-13 12:30:50,075:INFO:Set up data.
2025-06-13 12:30:50,093:INFO:Set up index.
2025-06-13 12:31:03,645:INFO:Initializing load_model()
2025-06-13 12:31:03,647:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:31:03,775:INFO:Initializing predict_model()
2025-06-13 12:31:03,776:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016992217B20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001699246AB90>)
2025-06-13 12:31:03,777:INFO:Checking exceptions
2025-06-13 12:31:03,778:INFO:Preloading libraries
2025-06-13 12:31:03,779:INFO:Set up data.
2025-06-13 12:31:03,790:INFO:Set up index.
2025-06-13 12:31:23,534:INFO:Initializing load_model()
2025-06-13 12:31:23,538:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:31:23,612:INFO:Initializing predict_model()
2025-06-13 12:31:23,613:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000169FC936D40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000169FC9437F0>)
2025-06-13 12:31:23,613:INFO:Checking exceptions
2025-06-13 12:31:23,613:INFO:Preloading libraries
2025-06-13 12:31:23,614:INFO:Set up data.
2025-06-13 12:31:23,642:INFO:Set up index.
2025-06-13 12:31:55,229:INFO:Initializing load_model()
2025-06-13 12:31:55,229:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:31:55,316:INFO:Initializing predict_model()
2025-06-13 12:31:55,317:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016986407A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000169FC9437F0>)
2025-06-13 12:31:55,318:INFO:Checking exceptions
2025-06-13 12:31:55,318:INFO:Preloading libraries
2025-06-13 12:31:55,320:INFO:Set up data.
2025-06-13 12:31:55,330:INFO:Set up index.
2025-06-13 12:31:57,702:INFO:Initializing load_model()
2025-06-13 12:31:57,702:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:31:57,845:INFO:Initializing predict_model()
2025-06-13 12:31:57,846:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001699214E050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001699246B010>)
2025-06-13 12:31:57,846:INFO:Checking exceptions
2025-06-13 12:31:57,846:INFO:Preloading libraries
2025-06-13 12:31:57,847:INFO:Set up data.
2025-06-13 12:31:57,851:INFO:Set up index.
2025-06-13 12:32:04,871:INFO:Initializing load_model()
2025-06-13 12:32:04,872:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:32:09,193:INFO:Initializing load_model()
2025-06-13 12:32:09,198:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:32:09,329:INFO:Initializing predict_model()
2025-06-13 12:32:09,329:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000169921E5690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001699246B2E0>)
2025-06-13 12:32:09,330:INFO:Checking exceptions
2025-06-13 12:32:09,330:INFO:Preloading libraries
2025-06-13 12:32:09,331:INFO:Set up data.
2025-06-13 12:32:09,342:INFO:Set up index.
2025-06-13 12:32:32,722:INFO:Initializing load_model()
2025-06-13 12:32:32,723:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:32:32,842:INFO:Initializing predict_model()
2025-06-13 12:32:32,842:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000169921E5540>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000169FC9432E0>)
2025-06-13 12:32:32,842:INFO:Checking exceptions
2025-06-13 12:32:32,843:INFO:Preloading libraries
2025-06-13 12:32:32,843:INFO:Set up data.
2025-06-13 12:32:32,854:INFO:Set up index.
2025-06-13 12:33:14,938:INFO:Initializing load_model()
2025-06-13 12:33:14,938:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:33:15,006:INFO:Initializing predict_model()
2025-06-13 12:33:15,006:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000169FC79DB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000169FC9432E0>)
2025-06-13 12:33:15,007:INFO:Checking exceptions
2025-06-13 12:33:15,007:INFO:Preloading libraries
2025-06-13 12:33:15,007:INFO:Set up data.
2025-06-13 12:33:15,019:INFO:Set up index.
2025-06-13 12:33:28,133:INFO:Initializing load_model()
2025-06-13 12:33:28,135:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:33:28,274:INFO:Initializing predict_model()
2025-06-13 12:33:28,274:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000169921E5030>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000169FC943400>)
2025-06-13 12:33:28,274:INFO:Checking exceptions
2025-06-13 12:33:28,274:INFO:Preloading libraries
2025-06-13 12:33:28,275:INFO:Set up data.
2025-06-13 12:33:28,288:INFO:Set up index.
2025-06-13 12:33:30,655:INFO:Initializing load_model()
2025-06-13 12:33:30,659:INFO:load_model(model_name=bigmart_best_model, platform=None, authentication=None, verbose=True)
2025-06-13 12:33:30,806:INFO:Initializing predict_model()
2025-06-13 12:33:30,807:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016986407730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Item_Weight', 'Item_Fat_Content',
                                             'Item_Type', 'Item_MRP',
                                             'Outlet_Establishment_Year',
                                             'Outlet_Size',
                                             'Outlet_Location_Type',
                                             'Outlet_Type'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.0238190072917794,
                                           max_features=0.4284489606984907,
                                           min_impurity_decrease=0.002646746704757545,
                                           min_samples_leaf=5,
                                           min_samples_split=9,
                                           n_estimators=239, random_state=123,
                                           subsample=0.7687727671549709))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001699246B520>)
2025-06-13 12:33:30,807:INFO:Checking exceptions
2025-06-13 12:33:30,807:INFO:Preloading libraries
2025-06-13 12:33:30,808:INFO:Set up data.
2025-06-13 12:33:30,816:INFO:Set up index.
